<?xml version="1.0" encoding="utf-8"?>
<doc>
    <assembly>
        <name>Infragistics45.WebUI.Documents.Excel.v14.2</name>
    </assembly>
    <members>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction">
            <summary>数式関数の基本クラス。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.DoesParameterAllowIntermediateResultArray(System.Int32,System.Boolean)">
            <summary>単一値が期待される領域パラメーターまたは配列の要素毎に入れ子になった関数を評価することによって作成される関数が中間結果配列を許可するかどうかを決定します。</summary>
            <remarks>
            <p class="body">単一値が期待される複数の値が指定される場合、中間結果配列が生成されます。たとえば、次の式は値 15 を生成します: =SUM(10/{1,2})。これは、10/{1,2} が {10/1,10/2}、または {10,5} の中間結果配列になるためです。各要素が 値 15 の結果になります。ただし、SUM 関数は領域参照の中間結果配列を許可しません。=SUM(10/D6:E7)  などの関数は、#VALUE! エラーになります。SUM 関数とは異なり、LOOKUP 関数は常に領域参照の中間結果配列を許可します。通常の LOOKUP 関数ロジック: {D6*2,E6*2; D7*2,E7*2} を使用した場合に値 10 が以下の中間結果配列で見つかると、LOOKUP(10,D6:E7*2) などの関数が正しい結果を返します。したがって、<paramref name="isCreatedFromRegionReference" /> が False の場合に限り、SUM はこのメソッドから True を返し、LOOKUP はこのメソッドから常に True を返します ( この例では、1 の <paramref name="parameterIndex" /> 値)。</p>
            <p class="note"><b>注:</b> 関数が関数式で呼び出されていると、制限が次の方法で緩和されます。関数が中間結果配列をサポートする場合、領域参照で作成された中間結果配列をサポートします。その結果、<paramref name="isCreatedFromRegionReference" /> 値は常に False として渡されます。</p>
            </remarks>
            <param name="parameterIndex">中間配列でパラメーターの 0 から始まるインデックスが渡されます。</param>
            <param name="isCreatedFromRegionReference">生成する値の結果配列が領域参照の場合 True。定配列の場合 False。</param>
            <returns>指定したおあらメーターの中間結果配列を許可する場合 True。そうでない場合 False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.PerformEvaluation(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>        
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArguments(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean)">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスをスタックから抽出するためのヘルパー メソッド。</summary>
            <param name="numberStack">値をポップする数値スタック。</param>
            <param name="argumentCount">数値スタックからポップ／評価する項目の数。</param>
            <param name="skipEmptyValues">IsNullがTrueを返す値を無視する場合はTrue。リスト中の空の項目を含める場合はFalse。</param>
            <returns>番号スタックから削除された <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスの配列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArguments(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean,System.Boolean)">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスをスタックから抽出するためのヘルパー メソッド。</summary>
            <param name="numberStack">値をポップする数値スタック。</param>
            <param name="argumentCount">数値スタックからポップ／評価する項目の数。</param>
            <param name="skipEmptyValues">IsNullがTrueを返す値を無視する場合はTrue。リスト中の空の項目を含める場合はFalse。</param>
            <param name="skipHiddenCells">非表示のセルの値を無視するには True。</param>
            <returns>数値スタックから取り出されたUltraCalcValueインスタンスの配列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.GetArgumentsInOrder(System.Collections.Generic.List{Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue},Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32,System.Boolean)">
            <summary>メソッドに渡された引数を左から右の順序で取得します。列挙可能な参照の引数の場合、列挙可能な参照の値も正しい順序で返されます。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.IsAlwaysDirty">
            <summary>関数の結果が常にダーティかどうかを示します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase">
            <summary>バイナリ演算子関数の抽象基本クラス。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.BuiltInFunctionBase">
            <summary>組み込み関数の基本クラス。</summary>	
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を表す UltraCalcValue。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定された引数でバイナリ演算子を評価し、結果を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcBinaryOperatorBase.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage">
            <summary>一連の数値の平均 (数学的な) を計算します。</summary>
            <remarks>
            <p class="body">AVERAGE(value1, value2, ...)</p>
            <p class="body">Value1、value2、... は、 1 つまたは複数の数値または数値への参照です。平均は（数学的な）、すべての値を合計して、値の数で割り算されて計算されます。</p>
            <p class="body">各値は均等に重み付けされます。重み付けされた平均を取得するには、数式の重みで各値をかけ算できます。</p>
            <code>
            AVERAGE( [Value1]*[Weight1], [Value2]*[Weight2], [Value3]*[Weight3])
            </code></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAverage.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum">
            <summary>合計値を取得するために一連の数を追加します。</summary>
            <remarks>
            <p class="body">SUM(value1,value2,...)</p>
            <p class="body">Value1、value2 ... は、合計値を見つけるための参照です。引数のリストに指定する数のテキスト表現およびリテラル数の定数は合計に含まれます。<em>値</em>は列またはベクター参照で、合計は参照に含まれたすべてのセルまたは値をとります。引数リストのエラー値または数値に変換できないテキストはエラーになります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSum.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus">
            <summary>&quot;+&quot;単項プラス数式演算子（例：+20）。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryPlus.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus">
            <summary>&quot;-&quot; 単項マイナス数式演算子 (例：-20)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUnaryMinus.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent">
            <summary>&quot;%&quot; パーセント数式演算子 (例：20%)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPercent.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat">
            <summary>２ つの文字列を連結する演算子 (&quot;&apos;&amp;&apos; &quot;)。(&quot;First&quot; &amp; &quot;Second&quot;)</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcat.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate">
            <summary>複数のテキスト値を 1 つのテキスト文字列に結合します。</summary>
            <remarks>
            <p class="body">CONCATENATE(text1, text2, ..., textN)</p>
            <p class="body">Text1、text2 ... textN は、 1 つのテキスト文字列に連結する複数のテキスト値です。これらのテキスト値は、テキスト文字列、数値 (テキストに変換される)、または値などを含む 1 つの値参照 (セル参照など) になります。</p>
            <p class="body">この関数は UltraCalc の基本テキスト処理を提供します。 メッセージ テキストの構築、一部の接続テキストの追加、他のテキスト結果の表現の検証時などです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConcatenate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual">
            <summary>&quot;=&quot; 等値数式演算子 (例：Price = 200)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEqual.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE">
            <summary>&quot;&amp;lt;&amp;gt;&quot; 非等値数式演算子（例：Price &amp;lt;&amp;gt; 200）</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNE.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT">
            <summary>&quot;&amp;lt;&quot;小なり数式演算子（例：Price &amp;lt; 200）</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLT.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE">
            <summary>&quot;&amp;lt;=&quot;以下数式演算子（例：Price &amp;lt;= 200）</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLE.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT">
            <summary>&quot;&amp;gt;=&quot;以上数式演算子（例：Price &amp;gt;= 200）</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGT.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE">
            <summary>&quot;&amp;gt;=&quot;以上数式演算子（例：Price &amp;gt;= 200）</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGE.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon">
            <summary>&quot;^&quot;指数演算子（例：3^2）。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExpon.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf">
            <summary>ユーザが指定する値または UltraCalc 表現の論理テストの結果に基づき 2 つの結果（または検証するための UltraCalc 表現）から選択します。</summary>
            <remarks>
            <p class="body">IF( boolean_test, result_if_true, [result_if_false])</p>
            <p class="body">Boolean_test は TRUE または FALSE のブール値を生成するために IF 関数が検証する値（または UltraCalc 表現）です。このテストの結果は、関数によって結果が返されることを決定します。</p>
            <p class="body">Result_if_true は返される値（または他の UltraCalc 表現の結果）で、boolean_test が TRUE のブール値に検証された場合に限ります。</p>
            <p class="body">Result_if_false は返される値（または他の UltraCalc 表現の結果）で、boolean_test が FALSEのブール値に検証された場合に限ります。</p>
            <p class="body">IF 関数によって、指定した自由な条件に基づき、 1 つの表現（boolean_test が TRUE の場合）または他の表現（boolean_test が FALSE の場合）に分岐する UltraCalc 表現を記述することができます。</p>
            <p class="body">result_if_false は指定されておらず、boolean_test は FALSE で IF 関数は FALSE を返します。</p>
            <p class="note">boolean_test の検証でエラー値が生成される場合、 Result_if_true または Result_if_false のいずれも検証されません。その代わり、IF 関数は boolean_test の検証からエラー値を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIf.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs">
            <summary>数の絶対値を計算します。</summary>
            <remarks>
            <p class="body">ABS（値）</p>
            <p class="body">数の絶対値は記号なしの値です。これは行番号またはベクトルの方向（正または負）を無視して値の度合いを表します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod">
            <summary>以下の 2 つの数値の整数除算の余りを取得します。</summary>
            <remarks>
            <p class="body">MOD（分子, 分母）</p>
            <p class="body">分子は<em>分母</em>で割られる数です。<em>分母</em>が<em>分子</em>よりも小さい場合に限って計算が可能になり、その計算結果として一定の整数値 (商) と余りが得られます。</p>
            <p class="body">分母は<em>分子</em>を割る数です。余りには<em>分母</em>記号が付けられます。この数はゼロは不可です。そうでなければ MOD() 関数は #DIV/0 エラーを返します。</p>
            <p class="body">これらの 2 つの数で整数除算を実行したい場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient">QUOTIENT()</see>  関数を使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct">
            <summary>積を返すために一連の数をかけ算します。</summary>
            <remarks>
            <p class="body">PRODUCT( value1, value2, ..., valueN)</p>
            <p class="body">Value1 はかけ算したい一連の数の最初の数（被乗数）です。</p>
            <p class="body">Value2 はかけ算したい一連の数の第二の数（乗数）です。</p>
            <p class="body">Value<em>N</em> はかけ算したい一連の数の最後の数（最後の乗数）です。</p>
            <p class="body">この関数は、多くの数や式を一度にかけ算する必要がある場合に便利です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionProduct.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt">
            <summary>実数値を（小数部がある場合がある）を自然数に変換します。</summary>
            <remarks>
            <p class="body">INT(value)</p>
            <p class="body">値は、自然数に変換したい実数値です。INT() は <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc">TRUNC()</see> 関数のより特別なバージョンです。これは常に整数値を生成するからです。(RUNC() 関数によって数値を切り捨てる精度を指定することができます)</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc">
            <summary>整数を生成するために数値の小数部を切り捨てます。</summary>
            <remarks>
            <p class="body">TRUNC(value, number_of_digits)</p>
            <p class="body">値はべき乗にしたい数値に対する数値または参照です。</p>
            <p class="body">Number_of_digits は切り捨てが行われる精度を指定します。デフォルトでは、切り捨ては、整数を生成する小数点の右に置かれるゼロで発生します。</p>
            <p class="body">切り捨ては常に小数値を切り捨て、<em>Value</em> はゼロの近くに移動します（切り捨て前に正または負であったかどうか）。これは、より少ない値に常に値を変更する <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound">ROUND()</see> 関数とは異なります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrunc.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot">
            <summary>Logical-NOT はその引数の逆ブール値を返します。</summary>
            <remarks>
            <p class="body">NOT(boolean1)</p>
            <p class="body">Boolean1 は任意のブール（TRUE または FALSE）値、または逆にされる条件文（UltraCalc 表現で構成され、TRUE または FALSE 値に評価される）です。</p>
            <p class="body">boolean1 が TRUE の場合、Logical-NOT は FALSE を返します。boolean1 が FALSE の場合、Logical-NOT は TRUE を返します。</p>
            <p class="note">Boolean1はエラー値を評価するUltraCalc表現の場合、エラー値はTRUE でも FALSE でもないので、Logical-NOT 操作の結果は定義されません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNot.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd">
            <summary>少なくとも 1 つの引数が FALSE の値を持つ場合、Logical-AND はブール値 FALSE を返します。<em>すべての</em>引数が TRUE の場合、この関数は TRUE を返します。</summary>
            <remarks>
            <p class="body">AND(boolean1, boolean2, ...)</p>
            <p class="body">Boolean1、boolean2 ... はブール値（TRUE または FALSE）のリストまたは条件文（ブール値の TRUE または FALSE 値に評価する UltraCalc 表現）で、すべての引数が TRUE（または逆に、少なくとも 1 つの引数が FALSE）である制約に対して評価されます。</p>
            <p class="body">すべての引数はテストされます（<em>つまり</em>、logical-AND 関数は	&quot;short-circuit&quot; 評価を使用しません。この関数は、最初の引数が FALSE のブール値になると実行を停止できます）。</p>
            <p class="note">この関数は、引数がエラー値の結果となると評価を直ちに停止します。エラー値が TRUE でも FALSE でもないので、logical-AND 関数の戻り値は定義されません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAnd.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr">
            <summary>少なくとも 1 つの引数が TRUE の値を持つ場合、Logical-OR はブール値を返します。<em>すべての</em>引数が FALSE の場合、この関数は FALSE を返します。</summary>
            <remarks>
            <p class="body">OR(boolean1, boolean2, ...)</p>
            <p class="body">Boolean1、boolean2 ... はブール値（TRUE または FALSE）のリストまたは条件文（ブール値の TRUE または FALSE 値に評価する UltraCalc 表現）で、すべての引数が TRUE（または逆に、少なくとも 1 つの引数が FALSE）である制約に対して評価されます。</p>
            <p class="body">すべての引数はテストされます（<em>つまり</em>、logical-OR 関数は &quot;short-circuit&quot; 評価を使用しません。この関数は、最初の引数が TRUE のブール値になると実行を停止できます）。</p>
            <p class="note">この関数は、引数がエラー値の結果となると評価を直ちに停止します。エラー値が TRUE でも FALSE でもないので、logical-OR 関数の戻り値は定義されません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOr.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin">
            <summary>シリーズから最小の数値を割り当てます。</summary>
            <remarks>
            <p class="body">MIN(Value1, value2, ..., valueN)</p>
            <p class="body">Value1、value2 ... valueN は、数値の数または見つかった最小値の数値への参照です。引数は、数、ブール値、数または空に変換可能なテキスト値です。エラーを生成する数に変換できないエラー値およびテキスト値。</p>
            <p class="body">一連の数の最小値は、最大の負の数が可能です。大きな負の数は、小さい負の数よりも小さいからです。たとえば、表現 MIN( -1500, -50, 5, 150) を指定すると、	戻り値は -1500 で 5 ではありません。各引数で <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAbs">ABS()</see> 機能を使用する最小マグニチュードで数値を決定します。以下の例は、5 の最小値を生成します。</p>
            <code>MIN( ABS(-1500), ABS(-50), ABS(5), ABS(150))</code><p class="body">引数リストが空の場合、MIN() はゼロを返します。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax">MAX()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax">
            <summary>シリーズから最大の数値を割り当てます。</summary>
            <remarks>
            <p class="body">MAX(Value1, value2, ..., valueN)</p>
            <p class="body">Value1、value2 ... valueN は、数値の数または見つかった最大値の数値への参照です。引数は、数、ブール値、数または空に変換可能なテキスト値です。エラーを生成する数に変換できないエラー値およびテキスト値。</p>
            <p class="body">引数リストが空の場合、MAX() はゼロを返します。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMin">MIN()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMax.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp">
            <summary>指定した値に対する e を底とする数値のべき乗を計算します。</summary>
            <remarks>
            <p class="body">EXP(exponent)</p>
            <p class="body">Exponent には、e を底とするべき乗の指数を指定します。これは関数に「指数的」成長の特徴を与えます。</p>
            <p class="body">オイラーの数である e は値 2.718281828459... で、base には、自然対数の底も指定します。EXP(1) を指定することで UltraCalc フォーミュラ内の定数 e を表すことができます。指数的な関数（および自然対数）は、算術、エンジニアリングで多くのアプリケーションを持ち、モデリング動作および統計分布では、自然科学や社会科学で一般的に観察されます。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound">
            <summary>整数を生成するために数値の小数部を丸めます。</summary>
            <remarks>
            <p class="body">ROUND(value, number_of_digits)</p>
            <p class="body">値は切り上げるか切り下げるかにしたい数値に対する数値または参照です。</p>
            <p class="body">Number_of_digits は丸めが行われる精度を指定します。これは丸めるために UltraCalc が検証する場所の値になります。デフォルトでは、丸めは、整数を生成する小数点の右に置かれるゼロで発生します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRound.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt">
            <summary>数の平方根を計算します。</summary>
            <remarks>
            <p class="body">SQRT(value)</p>
            <p class="body">値は数値または平方根を計算する数値への参照です。実根だけがサポートされるので、<em>値</em>が負の場合（虚根を生成する）SQRT() 関数はエラー (#NUM!) を返します。</p>
            <p class="body">平方根は製品の数で、その数がそれ自体に対してかけ算されると（平方） <em>value</em> になります。2 つの負の平方根をかけ算すると、同じ正の <em>value</em> を生成することができることに注意してください。規則では、SQRT() 関数は正のルートだけを返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos">
            <summary>指定した角度（計測されたインラジアント）の三角関数のコサインを計算します。</summary>
            <remarks>
            <p class="body">COS(value)</p>
            <p class="body">Value には、コサインを求める角度をラジアンで指定します。引数が角度でなければならない場合、PI()/180 でかけ算してラジアンに変換します。</p>
            <p class="body">コサインは 2*PI() ラジアンの期間の正弦関数です。その値は常に 1 と -1 の間です。これは -PI()/4 のフェーズ シフト（phi）のサイン関数 <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin">SIN()</see>のように動作します。</p>
            <p class="body">サイン関数の値は、直角三角形の斜辺の長さと反対の脚の長さの間の公比から派生し、斜辺が 1 つの長さを持ちます。これは連続します。PI() ラジアンの間隔では、隣接の脚の長さと斜辺は等しくなるからです。</p>
            <p class="body">この関数を調べるもう 1 つの方法は、斜辺が x と y 軸のあるデカルト平面に中心を置く円の半径 ｒ であると仮定することです。円周の任意のポイントで、斜辺は角度、シータ、x 軸を使用します。シータ角度のコサイン関数の値は、円の中心から x 軸の方向のポイントまでの距離です。この様式を適用すると、COS() 関数はデカルトとポーラ座標系の間で変換するために使用できます。</p>
            <p class="body">両方の解釈は同じです。直角三角形を形成する直角で x 軸と公差する円のポイントから線をドロップするからです。</p>
            <p class="body">これらの三角関数の概念は、多くのエンジニアリング、建築、および科学アプリケーションで頻繁に登場します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos">
            <summary>三角関数のコサイン関数の指定された値を持つ角度（ラジアンで計測される）を返します。</summary>
            <remarks>
            <p class="body">ACOS(value)</p>
            <p class="body">値は、見つけたい角度を取るコサイン関数の実数結果です。コサイン関数の正規の値は -1 から 1 です。逆コサインはデフォルトでは、0 からの正常角度から PI までを返します。これは、コサインの同一の値を持つ角度が複数存在するからです。たとえば、-PI/2, PI/2, 3PI/2 などの角度は、すべてゼロのコサインになります。複数の PI ラジアンを逆コサイン関数で返される逆コサインで返された通常の角度に追加して角度を切り替えることができます。</p>
            <p class="body">180/PI() でかけ算してラジアンからの逆コサイン関数の結果を変換することができます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACos.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">
            <summary>双曲線余弦のコサイン関数の指定された値を持つ角度（ラジアンで計測される）を返します。</summary>
            <remarks>
            <p class="body">ACOSH(value)</p>
            <p class="body">値は、見つけたい角度（ラジアンで計測された）の双曲線余弦のコサインです。双曲線余弦関数の値（<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">COSH</see> 関数を参照）は双曲線の割合で増加しますが、1 つの結果は双曲線余弦のこれらのより大きい変更が角度の小さい変更に対応することです。この関係は回転されるに従って物体に溜まる抵抗または負担が増える（ヒステリシス）時など、逆双曲線余弦関数の数学および工学的アプリケーションの多くに固有のものです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin">
            <summary>指定した角度（計測されたインラジアント）の三角関数のサインを計算します。</summary>
            <remarks>
            <p class="body">SIN(value)</p>
            <p class="body">Value には、コサインを求める角度をラジアンで指定します。引数が角度でなければならない場合、PI()/180 でかけ算してラジアンに変換します。</p>
            <p class="body">サインは 2*PI() ラジアンの期間の正弦関数です。その値は常に 1 と -1 の間です。</p>
            <p class="body">サイン関数の値は、直角三角形の斜辺の長さと反対の脚の長さの間の公比から派生し、斜辺が 1 つの長さを持ちます。これは連続します。PI() ラジアンの間隔では、反対の脚の長さと斜辺は等しくなるからです。</p>
            <p class="body">この関数を調べるもう 1 つの方法は、斜辺が x と y 軸のあるデカルト平面に中心を置く円の半径 ｒ であると仮定することです。円周の任意のポイントで、斜辺は角度、シータ、x 軸を使用します。シータ角度のサイン関数の値は、円の中心から y 軸の方向のポイントまでの距離です。この様式を適用すると、SIN() 関数はデカルトとポーラ座標系の間で変換するために使用できます。</p>
            <p class="body">両方の解釈は同じです。直角三角形を形成する直角で y 軸と公差する円のポイントから線をドロップするからです。</p>
            <p class="body">これらの三角関数の概念は、多くのエンジニアリング、建築、および科学アプリケーションで頻繁に登場します。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCos">COS()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSin.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh">
            <summary>ラジアンで計測された指定した角度の双曲線逆余弦のサインを計算します。</summary>
            <remarks>
            <p class="body">SINH(value)</p>
            <p class="body">Value には、双曲線余弦（ハイパーボリックサイン）を求める角度をラジアンで指定します。角度が度で表されている場合は、PI()/180を掛けてラジアンに変換します。 </p>
            <p class="body">たとえば数学および物理の多くのアプリケーションは、円柱の重力ポテンシャルを決定する場合に、双曲線正弦サイン関数の特徴を使用できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin">
            <summary>三角関数のサイン関数の指定された値を持つ角度（ラジアンで計測される）を返します。</summary>
            <remarks>
            <p class="body">ASIN(value)</p>
            <p class="body">値には、求める角度のサインの値を指定します。適正なサインの値は、包含的に -1 から 1 の実数に限定されます。</p>
            <p class="body">返される角度は、-PI()/2 と PI()/2 ラジアンの間になります。この角度を度に変換するには、PI()/180 を掛けます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASin.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan">
            <summary>指定した角度（計測されたインラジアント）の三角関数のタンジェントを計算します。</summary>
            <remarks>
            <p class="body">TAN(value)</p>
            <p class="body">Value には、タンジェントを求める角度をラジアンで指定します。引数が角度でなければならない場合、PI()/180 でかけ算してラジアンに変換します。</p>
            <p class="body">タンジェントは -INF から +INF の値を持つことができますが、すべての PI()/2 ラジアン +/- PI() ラジアンの間隔では定義されていません。</p>
            <p class="body">タンジェント関数の値は、直角三角形の反対の長さと隣接（斜辺以外）の脚の間の公比から派生します。三角形の内側のすべての 3 つの角度は、PI() ラジアンに正確に追加される必要があり、直角三角形では、斜辺の反対の角度は PI()/2 ラジアンこれらの事実から、三角形内の他の 2 つの角度のいずれかが PI()/2 ラジアンに到達することは不可能です。PI()/2 ラジアンにアプローチする角度（三角形の直角以外）を選択すると、残りの角度は 0 ラジアンにアプローチする必要があります。タンジェント関数値は、これらの状況で、角度の反対の直角三角形の脚がどのように無限の長さにアプローチするかを示します。これらの計算は、建築やエンジニーリングで重要なアプリケーションです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh">
            <summary>ラジアンで計測された指定した角度の双曲線逆余弦のタンジェントを計算します。</summary>
            <remarks>
            <p class="body">TANH(value)</p>
            <p class="body">Value には、双曲線余弦（ハイパーボリックタンジェント）を求める角度をラジアンで指定します。角度が度で表されている場合は、PI()/180を掛けてラジアンに変換します。双曲線逆余弦のタンジェントは -1 から 1 の範囲です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTanh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan">
            <summary>指定したタンジェント関数値を持つ正規化された角度（ラジアンで計測された）を計算します。</summary>
            <remarks>
            <p class="body">ATAN(value)</p>
            <p class="body">値は角度を取得したいタンジェント関数値を含む数です。この関数は、PI()/2 と -PI()/2 の間の角度を返します。PI()/2 と -PI()/2 に対してタンジェント関数が定義されていませんが、この関数の戻り値は、<em>Value</em> がそれぞれ +INF または -INF の場合、これらの値に丸められます。</p>
            <p class="body">この関数は、逆タンジェント関数またはアークタンジェントと呼ばれます。</p>
            <p class="body">返される角度は基本値で、タンジェント関数の値として <em>Value</em> を持つ要件を満たすことで、代わりの角度のカウントできない数が存在し、この基本値のいずれかのサイドに +/- PI() の適切な間隔を置きます。</p>
            <p class="body">度合いでの結果が必要である場合、180/PI() でアークタンジェントをかけ算します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2">
            <summary>指定した（x、y）座標によってデカルト座標平面上の x 軸で作成された角度を計算します。</summary>
            <remarks>
            <p class="body">ATAN2(x_ordinate, y_abscissa)</p>
            <p class="body">X_ordinate は、デカルト ポイントの x 軸にそって距離を表す数です。これは直角三角形の隣接する脚として考えられ、直角が（<em>x_ordinate</em>, <em>y_abscissa</em>）から x 軸のポイント（<em>x_ordinate</em>, 0）への垂線をドロップすることで作成されます。</p>
            <p class="body">Y_abscissa は、デカルト ポイントの y 軸にそって距離を表す数です。これは上記に作成された直角三角形の反対の脚として考えることもできます。</p>
            <p class="body">アークタンジェントのバリエーション（または逆タンジェント関数）は、角度、シータを計算し、（<em>x_ordinate</em>, <em>y_abscissa</em>）で指定した座標に（0, 0）で原点から線セグメントを拡張する時に x 軸で作成されます。この線セグメントは直角三角形の斜辺でも見ることができ、エッジに置かれる（<em>x_ordinate</em>, <em>y_abscissa</em>）ポイントにある円の半径でも見られます。この関数は多くの UltraCalc アプリケーションで役に立つ三角関数タンジェントの値を調べるためのもう 1 つの方法です。デカルト座標系からポーラ座標系に変換するなど、一部の作業でより便利なパラメーター化をユーザーに提供するからです。</p>
            <p class="body">この関数の戻り値は、ラジアンで計測される PI()/2 および -PI()/2 の範囲内です。この値を度に変換する必要がある場合、180/PI() で結果をかけ算します。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan">ATAN()</seealso>。<seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTan">TAN()</seealso>。</remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATan2.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">
            <summary>指定した数値に対して次に少ない全体数を計算します</summary>
            <remarks>
            <p class="body">FLOOR(value)</p>
            <p class="body">値は次に少ない全体数（整数とも呼ばれる）に丸められる実数値です。FLOOR() は <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInt">INT()</see> 関数と異なる動作をします。<em>value</em> が負のときに「次に小さい全体数」はより大きい数になるからです（つまり負の数になります）。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling">
            <summary>指定された数値以上の最小の整数を返します。</summary>
            <remarks>
            <p class="body">CEILING(number)<p></p>Number には、四捨五入する数値を指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCeiling.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">
            <summary>指定した数値の自然対数を計算します。</summary>
            <remarks>
            <p class="body">LN(value)</p>
            <p class="body">値は、自然対数で計算するための実数です。<em>Value</em> は正の数でなければならず、自然対数は負の値では定義されません。</p>
            <p class="body">自然対数は、オイラーの数 e（2.71828...）の base を持つ対数の特別なケースです。これは <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionExp">EXP()</see> 関数の逆です。</p>
            <p class="body">対数は算術、生命、社会科学で多くのアプリケーションを持ちます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10">
            <summary>指定した数値の対数（base 10）を計算します。</summary>
            <remarks>
            <p class="body">LOG10(value)</p>
            <p class="body">値は、小数点対数で計算するための実数です。<em>Value</em> は正の数でなければならず、自然対数は負の値では定義されません。</p>
            <p class="body">対数の底を指定するには、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog">LOG()</see> 関数を使用します。自然対数を計算するには <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</see> 関数を使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog10.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog">
            <summary>指定した base を底として、指定した value の対数を計算します。</summary>
            <remarks>
            <p class="body">LOG(value, [base])</p>
            <p class="body">value は、<em>base</em> を底として対数を計算したい実数です。この数は正の数でなければならず、自然対数は負の数では定義されません。</p>
            <p class="body">Base は自然対数の底で、デフォルトは 10 です。</p>
            <p class="body">自然対数を計算するには (オイラーの数 e の base に対する対数) <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLn">LN()</see> を呼び出すのが便利です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLog.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV">
            <summary>固定された支払いがあり、固定の利率またはリターン率を想定して投資額の将来値を計算します。</summary>
            <remarks>
            <p class="body">FV(interestRate, nPeriod, payment, presentValue, paymentDue)</p>
            <p class="body">InterestRate は期間を通じての利率を想定します。将来値の計算は、利率が変化しないと想定します利率変動を予想する場合、利率が一定である短い期間で増加する将来値を計算する必要があります。一部の計算では、<em>interestRate</em> は投資の予想成長または期間単位のリターン レートと同期します。</p>
            <p class="body">NPeriod には、投資期間全体での支払回数の合計を指定します。各支払いは同額であると想定され、定期的な固定された間隔で発生します。投資額の初期の支払いは、長期間に渡って投資され、したがって、投資額で後で行われる支払い以上の利息が増えます。</p>
            <p class="body">支払いは、それぞれ投資額で投資された固定額です負の値を使用して支払われるキャッシュのアウトフローを表し、正の値を使用して受け取るキャッシュのインフローを表します。将来値の計算では、支払いのゼロ以外または <em>presentValue</em> のいずれかが必要です。</p>
            <p class="body">PresentValue は投資額の期首の投資の値です。これは一連の将来の支払いの割り引かれた値を表します。これは未払い利息なので時間とともに金額が増します。投資額に現在値がない場合、ゼロ以外の <em>payment</em> 額を指定する必要があります。</p>
            <p class="body">PaymentDue は、1 または 0 の数値です。支払いは各期間（1）の期首または各期間の期末（0）の投資額で投資されます。</p>
            <p class="body"><em>interestRate</em> および <em>nPeriod</em> 引数は、支払いの頻度を決定します。<em>interestRate</em> が年利で指定されている場合、<em>nPeriod</em> は 1 で、支払いは年に 1 度行われます。一方、<em>nPeriod</em> が 4 である場合、支払いは四半期で行われます。これらの引数を指定する時、一定の時間値を使用することを確認してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFV.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven">
            <summary>数値を切り上げて、その結果に最も近い偶数の整数を返します。</summary>
            <remarks>
            <p class="body">EVEN(Number)<p></p>Number には、四捨五入する対象となる値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEven.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd">
            <summary>数値を切り上げて、その結果に最も近い奇数の整数を返します。</summary>
            <remarks>
            <p class="body">ODD(Number)<p></p>number には、切り上げの対象となる数値を指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOdd.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower">
            <summary>テキスト値をすべて小文字に変換します。</summary>
            <remarks>
            <p class="body">LOWER(text_value)</p>
            <p class="body">Text_value は小文字に変換したいテキストのピースです。インバリアント カルチャは文字を翻訳するために使用されるので、この関数はローカライズ可能なテキスト値で使用するのは適切ではありません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLower.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper">
            <summary>文字列に含まれる英字をすべて大文字に変換します。</summary>
            <remarks>
            <p class="body">UPPER(text_value)</p>
            <p class="body">Text_valueには、大文字に変換する文字列を指定します。UPPER は英字以外の文字は変換されません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionUpper.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft">
            <summary>指定した文字数まで、テキスト値から最も左の文字を取得します。</summary>
            <remarks>
            <p class="body">LEFT(text_value, num_chars)</p>
            <p class="body">Text_value は、取得したいサブ文字列で開始する一部のテキストに対するテキストのピースまたは参照です。</p>
            <p class="body">Num_chars は、<em>text_value</em> の初めから取得される文字数を示します。この引数がゼロ未満の場合、エラー値が返されます。この引数が <em>text_value</em> の長さを超える場合、すべての <em>text_value</em> が取得されます。省略すると、<em>text_value</em> の最初の文字が取得されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLeft.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight">
            <summary>指定した文字数まで、テキスト値から最も右の文字を取得します。</summary>
            <remarks>
            <p class="body">RIGHT(text_value, num_chars)</p>
            <p class="body">Text_value は、取得したいサブ文字列で終了する一部のテキストに対するテキストのピースまたは参照です。</p>
            <p class="body">Num_chars は、<em>text_value</em> の後ろから取得される文字数を示します。この引数がゼロ未満の場合、エラー値が返されます。この引数が <em>text_value</em> の長さを超える場合、すべての <em>text_value</em> が取得されます。省略すると、<em>text_value</em> の最後の文字が取得されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRight.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid">
            <summary>文字列の指定した位置から始まる、テキスト文字列の中から指定された文字数の文字を取得します。</summary>
            <remarks>
            <p class="body">MID(text_value, starting_point, character_count)</p>
            <p class="body">Text_value は、希望するサブ文字列の位置と長さを確認する際の取得したいサブ文字列を含むテキストのピースです。</p>
            <p class="body">Character_count は、文字数として計測される <em>text_value</em> から取得するためにサブ文字列の長さを指定します。要求される長さの場合、指定した <em>starting_point</em> に追加すると、<em>text_value</em> の長さを超え、<em>starting_point</em> の文字列開始の余りが返されます。</p>
            <p class="body">Starting_point は、取得したいサブ文字列の最初の文字の <em>text_value</em> にある 1 から始まる位置です。この引数が <em>text_value</em> の長さを超える場合、この関数は空の文字列を返します。</p>
            <p class="body"><em>character_count</em> または <em>starting_point</em> のいずれかが負の値であるか、エラー値を評価する場合、この関数はエラー値を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMid.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim">
            <summary>テキスト値から先頭または後続のスペースを削除し、テキスト値内の空白の続きを正規化します。</summary>
            <remarks>
            <p class="body">TRIM(text_value)</p>
            <p class="body">Text_value は空白を切り取り正規化するためのテキストのピースです。トリミングは、すべての先頭と後続の空白を削除します。正規化は、<em>text_value</em> 内にある連続する空白の続きを 1 つの空白に削減します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrim.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen">
            <summary>テキスト値の文字数をカウントします。</summary>
            <remarks>
            <p class="body">LEN(text_value)</p>
            <p class="body">Text_value は、ユーザが文字カウントをしたいテキスト値に対するテキスト文字列または参照です。すべての空白文字を含む文字の数は、テキスト文字列の長さを決定します。</p>
            <p class="body">使用される文字のエンコーディングによって、改行などの一部の空白文字が 2 文字としてカウントされる場合があります（ 1 つの文字はキャリッジリターンで、もう 1 つの文字は改行です）。</p>
            <p class="body">文字を含まない空のテキスト文字列。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLen.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue">
            <summary>数または通貨を表すテキスト部分の数値を取得します。</summary>
            <remarks>
            <p class="body">VALUE(text_value)</p>
            <p class="body">Text_value は、数に変換したいテキスト文字列に対するテキスト値または単一値参照です。記号、通貨記号、または千の位の区切り文字でフォーマットされている場合があります。文字はテキストの数値を得るためにストリップされます。</p>
            <p class="body"><em>text_value</em> がエラー値であるか、数値に変換できなかった場合、関数はエラー値を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <remarks>
            <p class="body">数値スタックの最上位にある <b>UltraCalcValue</b> 引数がエラーだった時、エラーを返します。</p>
            <p class="body">受け取るテキストを数値と解釈できる場合には倍精度の数値タイプに値の変換を返します（多数の区切り文字、小数点区切り文字、通貨記号、指数、記号をフィルタして排除後）。</p>
            <p class="body">受け取る引数がテキストでなかった場合にはもう 1 つの数値タイプから数値変換を返します (このような変換の結果の定義が十分でない場合、アプリケーションの予想に反する場合があります。たとえば、<b>DATEVALUE</b> が目盛りの数値に変換する場合)。</p>
            </remarks>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionValue.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind">
            <summary>テキストの他の部分内のテキストの一部を検索します。</summary>
            <remarks>
            <p class="body">FIND(text_to_find, text_to_search, starting_point)</p>
            <p class="body">Text_to_find は、検索したいテキストの一部です。これは参照にできます（たとえば、一定のテキスト文字列への NamedReference、またはフォーム上の TextBox への CalcSettings 参照）。<em>text_to_search</em> よりも長さを短くすべきです。</p>
            <p class="body">Text_to_search は、<em>text_to_find</em> を検索したいテキストの一部です。これは一般的に検索したいテキスト文字列への参照です。</p>
            <p class="body">Starting_point は、UltraCalc が検索を開始する <em>text_to_search</em> 内の 1 から始まる文字位置です。この引数はオプションで、省略されると、検索は最初の文字から開始します。</p>
            <p class="body"><em>text_to_find</em> が見つからない場合、この関数は Value エラーを返します。そうでない場合は、<em>text_to_search</em> 内の <em>text_to_find</em> の開始位置を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFind.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace">
            <summary>テキスト値のサブ文字列を新しいテキストで置き換えます。このサブ文字列は、オリジナルのテキスト値内で文字の開始点と長さを指定することによって指定されます。</summary>
            <remarks>
            <p class="body">REPLACE(text_value, starting_point, character_count, new_text_value)</p>
            <p class="body">Text_value はテキストのサブ文字列を置き換えたいオリジナル テキストで、そのサブ文字列の <em>starting_point</em> と <em>character_count</em> をすでに知っています。</p>
            <p class="body">Starting_point は置き換えられたサブ文字列が開始する <em>text_value</em> 内の 1 から始まる位置です。</p>
            <p class="body">Character_count は含まれている文字の数として置き換えられるサブ文字列の長さです。<em>starting_point</em> に追加されたときにこの値が <em>text_value</em> に残っている長さを超える場合、<em>text_value</em> の残り全体が置き換えられます。</p>
            <p class="body">New_text_value は、指定されたサブ文字列のテキストを置き換える新しいテキストです。置き換えられたサブ文字列と同じ長さにする必要はありません。</p>
            <p class="body"><em>starting_point</em> または <em>character_count</em> がエラー値、またはゼロ未満の場合、エラー値が返されます。<em>starting_point</em> が <em>text_value</em> の長さを超える場合、エラー値が返されます。</p>
            <p class="body">REPLACE() 関数をその他の UltraCalc 関数とともに使用して、 1 つのサブ文字列の別のサブ文字列との置き換えを表すことは可能です。以下の UltraCalc 式はオリジナルのテキスト値で &quot;Old&quot; という語を &quot;New&quot; という語で置き換えます。</p>
            <code>REPLACE(&quot;Hello Old World&quot;, FIND(&quot;Old&quot;), LEN(&quot;Old&quot;), &quot;New&quot;)</code></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionReplace.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD">
            <summary>定額逓減法（Sum-of-Year&apos;s Digits Method）を使用して、減価償却費を計算します。</summary>
            <remarks>
            <p class="body">SYD(assetCost, salvageValue, lifespan, periodNumber)</p>
            <p class="body">AssetCost には、資産を新規購入した時点での初期の価格です。この数値は <em>salvageValue</em> よりも大きい必要があります（そうでない場合資産は価格が上がることになります）。</p>
            <p class="body">SalvageValue は耐用年数（<em>lifespan</em> の期間）が終了した時点で資産に対して取得できる市場価格です。場合によっては、これは資産の予備部分の値を表すことができます。</p>
            <p class="body">Lifespan は固定した長さの期間に測定された減価償却される資産の耐用年数です。使用すべき適切な <em>lifespan</em> は、減価償却される資産の種類で変わる場合があります。この関数名が示すように、この減価償却法の使用時の <em>lifespan</em> は通常年単位で測定されます（ただしこれは必ずしもそうでなければならないというわけではありません）。</p>
            <p class="body">PeriodNumber は、資産の減価償却を計算するための 1 から始まる年数で、1 と <em>lifespan</em> 間の値を持ちます。<em>lifespan</em> と同じ時間の単位で測定する必要があります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSYD.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN">
            <summary>資産の定額法が一期当たりどのようになるべきかを計算します。</summary>
            <remarks>
            <p class="body">SLN(assetCost, salvageValue, lifespan)</p>
            <p class="body">AssetCost には、資産を新規購入した時点での初期の価格です。この数値は <em>salvageValue</em> よりも大きい必要があります（そうでない場合資産は価格が上がることになります）。</p>
            <p class="body">SalvageValue は耐用年数（<em>lifespan</em> の期間）が終了した時点で資産に対して取得できる市場価格です。場合によっては、これは資産の予備部分の値を表すことができます。</p>
            <p class="body">Lifespan は固定した長さの期間に測定された減価償却される資産の耐用年数です。使用すべき適切な <em>lifespan</em> は、減価償却される資産の種類で変わる場合があります。</p>
            <p class="body">定額法（Straight-line Method）は、一期あたり一定の割合での資産の減価償却を表します。資産は、前期に計算された最初の期間の減価償却と同じ速度で資産価値を喪失することが前提となります。定額法が適している資産については税理士に相談してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSLN.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue">
            <summary>文字列で表された日付に対応する .NET DateTime 値を返します。</summary>
            <remarks>
            <p class="body">DATEVALUE(date_text)<p></p>date_text には、日付を表す文字列を .NET DateTime 形式で指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateValue.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate">
            <summary>指定された時刻を表す .NET DateTime 型のタイマー刻み数を返します。</summary>
            <remarks>
            <p class="body">DATE(year,month,day)<p></p>Year には、年を表す数値を指定します。<p></p>Month には、月を表す数値を 1 から 12 の範囲で指定します。<p></p>Day には、日を表す数値を、1 からその月の最終日を表す数値の範囲で指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay">
            <summary>日付値の日を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDay.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth">
            <summary>日付値の月を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMonth.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear">
            <summary>日付値の年を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionYear.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour">
            <summary>時刻値の時を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHour.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute">
            <summary>時刻値の分を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinute.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond">
            <summary>時刻値の秒を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSecond.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue">
            <summary>文字列で表された時刻に対応する小数を返します。</summary>
            <remarks>
            <p class="body">TIMEVALUE(time_text)<p></p>time_text には、時刻を表す文字列を .NET DateTime 形式で指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTimeValue.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime">
            <summary>指定された時刻を表す .NET DateTime 型のタイマー刻み数を返します。</summary>
            <remarks>
            <p class="body">TIME(hour,minute,second)<p></p>hour には、時を表す数値を指定します。<p></p>minute には、分を表す数値を指定します。<p></p>second には、秒を表す数値を指定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTime.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian">
            <summary>数値の指定されたリストの中央値を計算します。</summary>
            <remarks>
            <p class="body">MEDIAN(Value1, value2, ..., valueN)</p>
            <p class="body">Value1、value2、...、valueN は、中央値を見つけたい数値の任意の数または数値への参照です。任意の引数がエラー値の場合、または一連の引数内に数値がない場合には、MEDIAN() はエラー値を返します。</p>
            <p class="body">中央値は数値のソートされたリストの中間の値です（MEDIAN() 関数に渡す前に、<em>Value1</em>、<em>value2</em>、...、<em>valueN</em> をソートする必要はありません）。リストに含まれる値の数が奇数の場合、中央値は位置 CEIL(<em>N</em>/2) にある値になります。たとえば、0, 20, 50, 80 という 5 つの値のリストの中央値は、3 番目の位置にある値になります: 30。リストに含まれる値の数が偶数の場合、中央値は中間の 2 つの値の平均になります。7, 20, 30, 45 という 4 つの値のリストの中央値は 2 つの中央の要素（20 と 30）の平均です: 25。値の分散が算術平均の一方または他方を優先する傾向がある場合、MEDIAN() の値はソートされたリストの算術平均によって変わることに注意してください。たとえば、1, 2, 3, 21, 43 という 5 つの値のリストの算術平均は 14 ですが中央値は 3 です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMedian.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar">
            <summary>数値の指定されたサンプリングの推定の分散を計算します。</summary>
            <remarks>
            <p class="body">VAR(Value1, value2, ..., valueN)</p>
            <p class="body">Value1、value2、...、valueN は任意の数の数値、または大きなデータ分布のサンプリングを指定するために提供する数値への参照です。引数にエラー値が含まれる場合、またはサンプリングに数値が含まれていない場合、VAR() 関数は、最初に見つけるエラー値を返します。</p>
            <p class="body">分散は統計的な多様性の尺度で、これらのデータ分布の多様性に関する推論を描画するために非常に大きいデータ分布から取得した小さいサンプリングに基づいて統計学に使用されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.CalculateVariance(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>引数を母集団の標本であると見なして、母集団に対する分散を返します。</summary>
            <param name="numberStack">評価する数値スタック</param>
            <param name="argumentCount">使用するスタックの引数の数</param>
            <returns>値が計算されたかどうかを示すブール値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVar.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev">
            <summary>数値の指定されたサンプリングの概算の標準偏差を計算します</summary>
            <remarks>
            <p class="body">STDEV(Value1, value2, ..., valueN)</p>
            <p class="body">Value1、value2、...、valueN は任意の数の数値、またはデータ セットのサンプル スペースを提供するために指定した数値への参照です。任意の値がエラーを含む場合、関数は見つけた最初のエラーを返します。サンプル スペースに数値が含まれない場合にはエラー値が返えされます。</p>
            <p class="body">統計学で標準偏差が使用されます。サブセットのみのサンプリングに基づいてデータの大きい分布に関して推測を行います。適切なサンプリングの場合、小さい標準偏差はほとんどのデータ ポイントが狭い範囲の値内に集まることを示します。大きい標準偏差はデータ ポイントのより大きい多様性と、予期された基準からより遠くで、また基準から離れてより頻繁に発生する値の尤度があることを示します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionStdev.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed">
            <summary>オプションの千の位の区切り記号を付けて小数点以下の指定された桁数に丸められた数値を書式設定します。</summary>
            <remarks>
            <p class="body">FIXED(value, decimal_places, exclude_thousands_separators)</p>
            <p class="body">value は丸められてテキストとして書式設定された数値です。</p>
            <p class="body">Decimal_places は小数点の右側何桁に <em>value</em> を丸める必要があるのかを示します。省略される場合、丸めは小数点第 2 位に発生します。</p>
            <p class="body">Exclude_thousands_separators は書式設定されたテキスト値にコンマを表示すべきかどうかを示すブール値（TRUE または FALSE）です。デフォルトで、書式設定されたテキストには千の位の区切り記号としてコンマが含まれます。</p>
            <p class="body">この関数は数値のローカルの書式設定に一致したテキスト値を返すことはできません。 以降の計算で数値に書式設定するテキストの不明瞭な解析を容易にするためにカルチャの不変な設定（これらには千の位の区切り記号としてのコンマと小数点が含まれます）を使用して機能するためです。UltraCalc が処理を終了した後でありながらエンド ユーザに提示する前に、アプリケーションは代わりに数値の書式設定を選択します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFixed.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh">
            <summary>双曲線正弦関数の指定された値を持つ、角度（ラジアンで指定された）を返します。</summary>
            <remarks>
            <p class="body">ASINH(value)</p>
            <p class="body">値は、見つけたい角度（ラジアンで計測された）の双曲線余弦のサインです。双曲線正弦関数の値（<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSinh">SINH</see> 関数を参照）は双曲線の割合で増加しますが、1 つの結果は双曲線正弦のこれらのより大きい変更が角度の小さい変更に対応することです。UltraCalcValueこの関係は回転されるに従って物体に溜まる抵抗または負担が増える（ヒステリシス）時など、逆双曲線正弦関数の数学的および工学的アプリケーションの多くに固有のものです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionASinh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh">
            <summary>ラジアンで計測された指定した角度の双曲線逆余弦のタンジェントを計算します。</summary>
            <remarks>
            <p class="body">TANH(value)</p>
            <p class="body">Value には、双曲線余弦（ハイパーボリックタンジェント）を求める角度をラジアンで指定します。角度が度で表されている場合は、PI()/180を掛けてラジアンに変換します。双曲線逆余弦のタンジェントは -1 から 1 の範囲です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionATanh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh">
            <summary>双曲線余弦のコサイン関数の指定された値を持つ角度（ラジアンで計測される）を返します。</summary>
            <remarks>
            <p class="body">ACOSH(value)</p>
            <p class="body">値は、見つけたい角度（ラジアンで計測された）の双曲線余弦のコサインです。双曲線余弦関数の値（<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCosh">COSH</see> 関数を参照）は双曲線の割合で増加しますが、1 つの結果は双曲線余弦のこれらのより大きい変更が角度の小さい変更に対応することです。この関係は回転されるに従って物体に溜まる抵抗または負担が増える（ヒステリシス）時など、逆双曲線余弦関数の数学および工学的アプリケーションの多くに固有のものです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionACosh.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay">
            <summary>指定した日の週日を表示する番号を返します。</summary>
            <remarks>
            <p class="body">WEEKDAY(date, returnType)<br />Date は日付です。<br />ReturnType は、週日に使用される番号方式を決定します。1 (デフォルト) = 日曜日 (1) から土曜日 (7) まで 2 = 月曜日 (1) から日曜日 (7) まで 3 = 月曜日 (0) から日曜日 (6) まで</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekDay.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum">
            <summary>指定した日付が何週目かを返します。</summary>
            <remarks>
            <p class="body">WEEKNUM(date, returnType)<br />Date は日付です。<br />ReturnType は、週の開始日を決定します。1 (default) = 日曜日が週の開始日です。2 (default) = 月曜日が週の開始日です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWeekNum.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay">
            <summary>任意の指定した休日を除く、指定した日付から稼働日までの日数を返します。</summary>
            <remarks>    
            <p class="body">WORKDAY(startDate, days [, holiday1, holiday2, ..., holidayN])<br />StartDate は、開始する日付です。<br />Days は、開始日からオフセットする稼働日数です。<br />Holiday1、holiday2、...、holidayN は、日付または非稼働日とみなされる日付を含む参照範囲任意の数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionWorkDay.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec">
            <summary>10 進記数法以外の記数法で数値を文字列表示する 10 進数の値を返します。</summary>
            <remarks>
            <p class="body">X2Dec(number)<br />number は 10 進記数法以外の記数法で数値を表す文字列です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.NumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxLength">
            <summary>数値文字列の最大長。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2Dec.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert">
            <summary>ある測定システムから他へ値を変換しますたとえば、メーターからインチまたは時間から秒へ。</summary>
            <remarks>
            <p class="body">CONVERT(number, fromUnit, toUnit)<br />Number は、変換する値です。<br />FromUnit は、任意の番号のユニットです。<br />ToUnit は、変換後のユニットです。<br />重さおよび質量単位: &quot;g&quot; = グラム &quot;sg&quot; = スラグ &quot;lbm&quot; = ポンド マス (常衡) &quot;u&quot; = U (原子質量単位) &quot;ozm&quot; = オンス マス (常衡)<br />距離の単位: &quot;m&quot; = メーター &quot;mi&quot; = 法定マイル &quot;Nmi&quot; = 海里 &quot;in&quot; = インチ &quot;ft&quot; = フット &quot;yd&quot; = ヤード &quot;ang&quot; = オングストローム &quot;Pica&quot; = パイカ (1/72 in.)<br />時間の単位: &quot;yr&quot; = 年 &quot;day&quot; = 日 &quot;hr&quot; = 時 &quot;mn&quot; = 分 &quot;sec&quot; = 秒<br />圧力単位 &quot;Pa&quot; (または &quot;p&quot;) = パスカル &quot;atm&quot; (または &quot;at&quot;) = 量子論 &quot;mmHg&quot; = mm 水銀<br />エネルギー単位 &quot;N&quot; = ニュートン &quot;dyn&quot; (または &quot;dy&quot;) = Dyne &quot;lbf&quot; = ポンド エネルギー<br />エネルギーの単位: &quot;J&quot; = ジュール &quot;e&quot; = エルグ &quot;c&quot; = 熱力学的カロリー &quot;cal&quot; = IT カロリー &quot;eV&quot; (または &quot;ev&quot;) = 電子ボルト &quot;HPh&quot; (または &quot;hh&quot;) = 馬力時 &quot;Wh&quot; (または &quot;wh&quot;) = ワット時 &quot;flb&quot; = フィート ポンド &quot;BTU&quot; (または &quot;btu&quot;) = イギリス熱単位<br />出力の単位: &quot;HP&quot; (または &quot;h&quot;) = 馬力 &quot;W&quot; (または &quot;w&quot;) = ワット<br />磁気の単位: &quot;T&quot; = テスラ &quot;ga&quot; = ガウス<br />温度の単位: &quot;C&quot; (または &quot;cel&quot;) = 摂氏温度 &quot;F&quot; (または &quot;fah&quot;) = 華氏温度 &quot;K&quot; (or &quot;kel&quot;) = ケルビン<br />液量の単位: &quot;tsp&quot; = ティースプーン &quot;tbs&quot; = テーブルスプーン &quot;oz&quot; = 液量オンス &quot;cup&quot; = カップ &quot;pt&quot; (または &quot;us_pt&quot;) = U.S. パイント &quot;uk_pt&quot; = U.K. パイント &quot;qt&quot; = クオート &quot;gal&quot; = ガロン &quot;l&quot; (または &quot;lt&quot;) = リットル<br />次うち 1 つをメートル ToUnit または FromUnit の接頭辞にします: exa (&quot;E&quot;) = 1E+18 peta (&quot;P&quot;) = 1E+15 tera (&quot;T&quot;) = 1E+12 giga (&quot;G&quot;) = 1E+09 mega (&quot;M&quot;) = 1E+06 kilo (&quot;k&quot;) = 1E+03 hecto (&quot;h&quot;) = 1E+02 dekao (&quot;e&quot;) = 1E+01 deci (&quot;d&quot;) = 1E-01 centi (&quot;c&quot;) = 1E-02 milli (&quot;m&quot;) = 1E-03 micro (&quot;u&quot;) = 1E-06 nano (&quot;n&quot;) = 1E-09 pico (&quot;p&quot;) = 1E-12 femto (&quot;f&quot;) = 1E-15 atto (&quot;a&quot;) = 1E-18</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionConvert.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta">
            <summary>2 つの番号を比較して、等しい場合は 1、異なる場合は 0 を返します。</summary>
            <remarks>
            <p class="body">DELTA(number1, [number2])<br />Number1 は、数値です。<br />Number2 は、数値です。Number2 が指定されないと、Number1 は 0 と比較されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDelta.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep">
            <summary>2 つの数値を比較して、1 番目の数値が 2 番目の数値より大きいまたは等しい場合は、1 を返します。それ以外の場合は、0 を返します。</summary>
            <remarks>
            <p class="body">GESTEP(number, [step])<br />Number は、数値です。<br />Step は、数値です。Step が、指定されない場合、Number は 0 と比較されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGeStep.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs">
            <summary>複素数の絶対値を返します。</summary>
            <remarks>
            <p class="body">IMABS(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImAbs.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument">
            <summary>ラジアンで表されるシータ引数および度を返します。</summary>
            <remarks>
            <p class="body">IMAGINARY(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImArgument.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate">
            <summary>共役複素数を返します。</summary>
            <remarks>
            <p class="body">IMCONJUGATE(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImConjugate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos">
            <summary>複素数のコサインを返します。</summary>
            <remarks>
            <p class="body">IMCOS(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImCos.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv">
            <summary>2 つの共役複素数の商を返します。</summary>
            <remarks>
            <p class="body">IMDIV(dividend, divisor)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。<br />Divisor は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImDiv.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp">
            <summary>複素数の指数関数を返します。</summary>
            <remarks>
            <p class="body">IMEXP(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImExp.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn">
            <summary>複素数の自然対数を返します。</summary>
            <remarks>
            <p class="body">IMLN(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLn.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal">
            <summary>複素数の実係数を返します。</summary>
            <remarks>
            <p class="body">IMREAL(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImReal.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub">
            <summary>2 つの複素数の差を返します。</summary>
            <remarks>
            <p class="body">IMSUB(complexNumber1, complexNumber2)<br />ComplexNumber は、ComplexNumber2 が差し引かれる次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。<br />ComplexNumber は、ComplexNumber1 が差し引かれる次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSub.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10">
            <summary>複素数の 10 を底とする数値の対数（常用対数）を返します。</summary>
            <remarks>
            <p class="body">IMLOG10(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog10.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2">
            <summary>複素数の 2 を底とする数値の対数 （常用対数） を返します。</summary>
            <remarks>
            <p class="body">IMLOG2(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImLog2.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin">
            <summary>複素数のサインを返します。</summary>
            <remarks>
            <p class="body">IMSIN(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSin.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt">
            <summary>複素数の平方根を返します。</summary>
            <remarks>
            <p class="body">IMSQRT(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSqrt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower">
            <summary>指定したべき乗の複素数を返します。</summary>
            <remarks>
            <p class="body">IMPOWER(complexNumber, power)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。<br />Power は、ComplexNumber のべき乗の指数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImPower.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN">
            <summary>数値を値に変換します。</summary>
            <remarks>
            <p class="body">N(value)<br />Value は、数値に変換される値です。以下は、使用できる値です。<br />number - 数値を返します。date - 日付を返します。True - 1 を返します。False - 0 を返します。エラー値 - エラー値を返します。任意の他の値 - 0 を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionN.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact">
            <summary>数値の階乗を返します。</summary>
            <remarks>
            <p class="body">FACT(number)<br />Number は、計算される階乗の整数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFact.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble">
            <summary>数値の二重階乗を返します。</summary>
            <remarks>
            <p class="body">FACTDOUBLE(number)<br />Number は、計算される二重階乗の整数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactDouble.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees">
            <summary>ラジアンを度に変換する。</summary>
            <remarks>
            <p class="body">DEGREES(radians)<br />Radians は、度に変換されるラジアンの値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDegrees.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians">
            <summary>度をラジアンに変換する。</summary>
            <remarks>
            <p class="body">RADIANS(degrees)<br />Radians は、度に変換されるラジアンの値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRadians.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd">
            <summary>整数値の最大公約数を返します。</summary>
            <remarks>
            <p class="body">GCD(number1, [number2, number3, ..., numberN])<br />Number1, Number2, ..., NumberN は、任意の整数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionGcd.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm">
            <summary>2 つの整数値の最小公倍数を返します。</summary>
            <remarks>
            <p class="body">LCM(number1, [number2, number3, ..., numberN])<br />Number1, Number2, ..., NumberN は、任意の整数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLcm.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial">
            <summary>一連の数値の多項式を返します。</summary>
            <remarks>
            <p class="body">MULTINOMIAL(number1, [number2, number3, ..., numberN])<br />Number1, Number2, ..., NumberN は、任意の数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultinomial.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound">
            <summary>他の数値の倍数に最も近い数値を四捨五入します。</summary>
            <remarks>
            <p class="body">MRound(number, multiple)<br />Number は、四捨五入する数値です。<br />Multiple は、四捨五入する倍数を示す数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMRound.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman">
            <summary>数値を文字列としてローマ数字に変換します。</summary>
            <remarks>
            <p class="body">ROMAN(number, form)<br />数値は、ローマ数字に変換する数値です。<br />Form は、クラシックローマ数字またはより簡潔な形を使用するかどうかを示す数値またはブール値<br />0  = (デフォルト) 正式。(499 = &quot;CDXCIX&quot;) 1  = 簡略化した形式。(499 = &quot;LDVLIV&quot;) 2  = 1 より簡略化した形式。(499 = &quot;XDIX&quot;) 3  = 2 より簡略化した形式。(499 = &quot;VDIV&quot;) 4  = 簡略化した形式。(499 = &quot;ID&quot;) TRUE  = 正式な形式。FALSE = 簡略化した形式。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoman.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown">
            <summary>数値を切り捨てて指定した桁数にします。</summary>
            <remarks>
            <p class="body">ROUNDDOWN(number, digits)<br />Number は、四捨五入する数値です。<br />Digits は、四捨五入する小数点以下の桁数を示します。整数は、小数点の後の位置を示す数値です。負数は、小数点前の位置を示す数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundDown.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp">
            <summary>数値を切り上げて指定した桁数にします。</summary>
            <remarks>
            <p class="body">ROUNDUP(number, digits)<br />Number は、四捨五入する数値です。<br />Digits は、四捨五入する小数点以下の桁数を示します。整数は、小数点の後の位置を示す数値です。負数は、小数点前の位置を示す数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRoundUp.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum">
            <summary>一連のべき乗の合計を返します。</summary>
            <remarks>
            <p class="body">SERIESSUM(inputValue, initialPower, step, coefficient1 [, coefficient2, coefficient3, ..., coefficientN])<br />InputValue は、べき級数の入力値です。<br />InitialPower は、X のべき乗の初期値です。<br />Step は、級数の各項に対する N を増分するために使用されます。<br />Coefficient1、Coefficient2、...、CoefficientN は、X の連続する各べき乗がかけ算される係数のセットです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSeriesSum.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign">
            <summary>数値のサインを返します。(-1、0、または 1)</summary>
            <remarks>
            <p class="body">SIGN(number)<br />サインが返される数値。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSign.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi">
            <summary>指定した数値に Pi を乗じた平方根を返します。</summary>
            <remarks>
            <p class="body">SQRTPI(number)<br />Pi で乗算される数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSqrtPi.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose">
            <summary>CHOOSE 関数は最初の引数の数に基づいて、その引数で提供される値の 1 つを返します。</summary>
            <remarks>
            <p class="body">CHOOSE(index_num, value1, [value2, ..., valueN])</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChoose.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept">
            <summary>テキストを指定した回数繰り返します。</summary>
            <remarks>
            <p class="body">REPT(text_value, repeat_count)</p>
            <p class="body">Text_value は繰り返されるテキストです。</p>
            <p class="body">Repeat_count は <em>text_value</em> が繰り返される正の回数です。</p>
            <p class="body"><em>repeat_count</em> を負の数に設定した場合、エラーが返されます。<em>repeat_count</em> が 0 に設定される場合、空の文字列が返されます。<em>repeat_count</em> が整数でない場合は切り捨てられます。</p>
            <p class="body">返された文字列の長さが 32767 文字より長い場合、エラーが返されます。</p>
            <code>REPT(&quot;-&quot;, 10)</code></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRept.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal">
            <summary>1 つ以上の参照の小計を計算します。</summary>
            <remarks>
            <p class="body">Subtotal(function_num, ref1, ref2,...)</p>
            <p class="body">Function_num は計算される型です。<table>
            <colgroup><col width="180px" /><col width="180px" /><col width="80px" /></colgroup>
            <tr><th>Function_num (非表示の値を含む)</th><th>Function_num (非表示の値を無視)</th><th>関数</th></tr>
            <tr><td>1</td><td>101</td><td>AVERAGE</td></tr>
            <tr><td>2</td><td>102</td><td>COUNT</td></tr>
            <tr><td>4</td><td>104</td><td>MAX</td></tr>
            <tr><td>5</td><td>105</td><td>MIN</td></tr>
            <tr><td>6</td><td>106</td><td>PRODUCT</td></tr>
            <tr><td>7</td><td>107</td><td>STDEV</td></tr>
            <tr><td>9</td><td>109</td><td>SUM</td></tr>
            <tr><td>10</td><td>110</td><td>VAR</td></tr>
            </table>
            </p>
            <p class="body">ref1、ref2, ... は、小計を見つけるための参照です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSubtotal.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText">
            <summary>指定した書式設定に基づいて値をテキストに変換します。</summary>
            <remarks>
            <p class="body">Text(value, format_text)</p>
            <p class="body">value は書式設定する数値です。</p>
            <p class="body">format_text は値を書式設定する数値書式です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionText.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch">
            <summary>大文字と小文字を区別しない検索を実行し、もう 1 つの中である文字列の 1 から始まるインデックスを返します。</summary>
            <remarks>
            <p class="body">SEARCH(search_text, value, [start_index])</p>
            <p class="body">search_text は値の中で検索するテキストです。</p>
            <p class="body">value は search_text を検索するテキストです。</p>
            <p class="body">start_index は検索を開始する 1 から始まるインデックスです (省略される場合 start_index は 1 です)。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を表す UltraCalcValue。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearch.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev">
            <summary>すべての数字値の平均から標準偏差を返します。</summary>
            <remarks>
            <p class="body">AVEDEV(number1, number2, ...)</p>
            <p class="body">number1、number2、... は、1 つ以上の数値または数値への参照です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を表す UltraCalcValue。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAveDev.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAddress.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionAreas.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumn.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionColumns.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTwoMatrixFunction.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTwoMatrixFunction.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCorrel.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCorrel.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCovar.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionForecast.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookupBase.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookupBase.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHLookup.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHyperlink.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndex.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIndirect.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntercept.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntercept.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionLookup.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を表す ExcelCalcValue。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMatch.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMdeterm.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinverse.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMmult.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOffset.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPearson.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPearson.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRow.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRows.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRsq.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRsq.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSlope.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSlope.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSteyx.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSteyx.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumproduct.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2my2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2my2.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2py2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumx2py2.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumxmy2.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSumxmy2.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTranspose.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVLookup.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionVLookup.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLIntersect.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLRange.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXLUnion.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack">
            <summary>数式の評価に使用される <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスのスタック。</summary>
            <remarks>
            <p class="body">番号スタックは式の評価に使用されます。数式がコンパイルされると、数式トークンがポストフィックス表記（逆ポーランド記法）でコレクションに格納されます。逆ポーランド記法の数式トークンリストでは、各部分式の項の後に演算子が置かれ、演算子の優先順位に従って部分式が並べられます。数式評価メソッドは数式トークンコレクションを前から順にループ処理し、演算子の項を数値スタックにプッシュします。演算子に達すると部分式が計算され、その結果が数値スタックにプッシュされます。数式コレクションの末尾に達したときに数値スタックの最上位にある値が、数式の計算値になります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Push(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>数値スタックに値をプッシュします。</summary>
            <param name="value">数値スタックにプッシュする値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Pop">
            <summary>数値スタックの最上位から値をポップします。</summary>
            <returns>番号スタックの先頭にあった <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Peek">
            <summary>数値スタックの最上位にある値を返します。</summary>
            <returns>番号スタックの先頭にある <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Clear">
            <summary>数値スタックからすべての値を削除します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Reset(System.Int32)">
            <summary>数値スタックの要素数が指定した数になるまで、スタックの最上位から要素を除去します。</summary>
            <param name="elements">目的のスタックレベルを指定します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.Count">
            <summary>スタックの存在する値の数。</summary>
            <returns>スタックの存在する値の数。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack.OwningCell">
            <summary>数式が現在解決中の <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy">
            <summary>計算で使用される <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスの二次元配列を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ArrayProxy.GetLength(System.Int32)">
            <summary>配列の指定された次元の要素数を取得します。</summary>
            <param name="dimension">次元の 0 から始まるインデックス。</param>
            <returns>指定した次元の要素数。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ArrayProxy.Item(System.Int32,System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> を取得します。</summary>
            <param name="x">配列の最初の次元のインデックス。これは、ワークシート上のセル領域を表す配列の、相対列インデックスです。</param>
            <param name="y">配列の 2 番目の次元のインデックス。これは、ワークシート上のセル領域を表す配列の、相対行インデックスです。</param>
            <returns>配列で指定された値を表す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue">
            <summary>計算エラー値の定義/管理に使用する各種メソッドやプロパティを提供します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode)">
            <summary>エラー コードを指定して <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を新規作成します。</summary>
            <param name="code">このインスタンスに割り当てる <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode" /> 値</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode,System.String)">
            <summary>エラー コードとエラー メッセージを指定して <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を新規作成します。</summary>
            <param name="code"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode" /> 値</param>
            <param name="message">エラーの原因を示すローカライズ済みメッセージ。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode,System.String,System.Object)">
            <summary>エラー メッセージとエラー値を指定して <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を新規作成します。</summary>
            <param name="code"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode" /> 値</param>
            <param name="message">エラーの原因を示すローカライズ済みメッセージ。</param>
            <param name="value">エラーと関連付けられた値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.ToString">
            <summary>エラーの原因を示す文字列メッセージを返します。</summary>
            <returns>エラーメッセージを含む文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.RaiseException">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException" /> 例外を呼び出してこのクラスのエラー情報を表示します</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.Code">
            <summary>このクラス インスタンスのエラーコードを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.Message">
            <summary>このクラス インスタンスのエラーメッセージを取得します。このプロパティを設定するとき、メッセージはローカライズされているものと想定されます。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue.ErrorValue">
            <summary>このクラス インスタンスのエラー オブジェクトを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue">
            <summary>値を表す複合データ型を管理するメソッドを提供します。</summary>
            <remarks>
            <p class="body">このクラスのインスタンスは、いくつかの基本データ型 (倍精度、単精度、整数、ブール、文字列、エラーの各値) の 1 つを含むことができます。<p></p>このクラスは、基本データ型間の変換を実行するメソッドを提供する IConvertible インタフェースを実装します。<p></p>また、このクラスは、基本算術演算や <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> オブジェクトの比較を実行するメソッドも提供します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxy">
            <summary>このクラスインスタンスの値を <see cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy" /> データ型に変換します。</summary>
            <returns>このインスタンスの値に相当する配列。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxyGroup">
            <summary>このクラス インスタンスの値を配列のグループ データ型に変換します。</summary>
            <returns>このインスタンスの値に相当する配列グループ。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.CalcEngine.ArrayProxy" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetTypeCode">
            <summary>このインスタンスの <b>TypeCode</b> を返します。</summary>
            <returns>列挙した定数は、このクラスの  <b>TypeCode</b> またはこのインターフェイスを実装する値の型です。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToType(System.Type,System.IFormatProvider)">
            <summary>このクラス インスタンスの値を uint データ型に変換します。</summary>
            <param name="conversionType">このインスタンスの値の変換先の <b>Type</b>。</param>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応する値を持つ、conversionType 型の Object インスタンス。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArray">
            <summary>このクラスインスタンスの値を配列のデータ型に変換します。</summary>
            <returns>このインスタンスの値に相当する配列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayGroup">
            <summary>このクラスインスタンスの値を配列のデータ型に変換します。</summary>
            <returns>このインスタンスの値に相当する配列グループ。</returns>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.value">
            <summary>基本データ型を保持します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.#ctor(System.Object)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> を初期化します。</summary>
            <param name="value"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> で示されるオブジェクト。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.#ctor">
            <summary>デフォルト コンストラクター</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt">
            <summary>このクラス インスタンスの値を int に変換します。</summary>
            <returns>このインスタンスの値に対応する 32 ビット符号付き整数インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt(System.IFormatProvider)">
            <summary>このクラス インスタンスの値を int に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応する 32 ビット符号付き整数インスタンス。</returns>
            <remarks>
            <p class="body">整数値への意味のある変換がない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExceptionHandler(System.Exception)">
            <summary>指定した例外に基づいてこのクラスのインスタンスを <b>UltraCalcErrorValue</b> に変換します。</summary>
            <param name="e">このクラスインスタンスの値をByteデータ型に変換します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToReference">
            <summary>このインスタンスの値を <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> に変換する。</summary>
            <returns>このインスタンスが <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> インターフェイスを実装するオブジェクトを含む場合、このメソッドはオブジェクト インスタンスを返します。それ以外の場合、エラー参照が返されます。</returns>
            <remarks>
            <p class="body">インスタンス値の基本データ型が参照の場合、参照を返します。それ以外の場合、エラー参照が返されます。<p></p>参照への意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToErrorValue">
            <summary>このインスタンスの値を <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> に変換します。</summary>
            <returns>このインスタンスの値に相当するエラー コードを含む <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> です。</returns>
            <remarks>
            <p class="body">このメソッドは、エラー コードがこのインスタンスのエラー コードに設定される <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を返します。<p></p>カルチャ固有の書式設定情報を提供する <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> インターフェイス実装。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToString">
            <summary>このインスタンスの文字列表現を返します。</summary>
            <returns>このインスタンスの文字列表現を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.AreValuesEqual(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> の値が <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value" /> と等しいかどうかを示します。</summary>
            <param name="x">比較する最初の <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</param>
            <param name="y">比較する 2 番目の <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</param>
            <returns>値が同じである場合は True。そうでない場合は False が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.CompareTo(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>渡された <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスと現在のインスタンスを比較します。現在のインスタンスが渡されたインスタンスより小さい場合は-１、大きい場合は１、両者が等しい場合は０を返します。</summary>
            <param name="value">このインスタンスが比較されるオブジェクト。</param>
            <returns>現在のインスタンスが渡されたインスタンスより小さい場合は-１、大きい場合は１、両者が等しい場合は０を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.CompareTo(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>x と y の <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> インスタンスを比較して、x が y より小さい場合は -１、x が y より大きい場合は 1、x と y が等しい場合は 0 を返します。</summary>
            <param name="x">比較する１つ目の値。</param>
            <param name="y">最初の値と比較する値。</param>
            <returns>現在のインスタンスが渡されたインスタンスより小さい場合は-１、大きい場合は１、両者が等しい場合は０を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsSameValue(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> がこのインスタンスと同じ <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value" /> を持つかどうかを示します。</summary>
            <param name="value">比較対象として使用する <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</param>
            <returns>双方のインスタンスの <see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value" /> が等しい場合は true、それ以外の場合は false。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetResolvedValue">
            <summary>参照の解決された値を取得します。このメソッドは参照チェーンを繰り返し下って、単なる別の参照でない参照の解決された値を取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble">
            <summary>このクラスインスタンスの値を Double データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Double データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応する倍精度浮動小数点。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDouble(System.Double@)">
            <summary><see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value" /> を double データ型に変換します。</summary>
            <param name="result">結果のダブル値。戻り値が False の場合は結果は 0 です。</param>
            <returns>値が倍精度浮動小数点に正常に変換された場合はTrue、それ以外の場合はFalse。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime">
            <summary>このクラスインスタンスの値を DateTime データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDateTime(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を DateTime データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に等しい <b>DateTime</b>。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle">
            <summary>このクラスインスタンスの値を Float データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToSingle(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Float データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このクラスインスタンスにブール値が含まれる場合はTrue、それ以外の場合はFalse。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean">
            <summary>このクラスインスタンスの値を Boolean データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean(System.IFormatProvider)" />
            <returns>このインスタンスの値に対応するブール値。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToBoolean(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Boolean データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応するブール値。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32">
            <summary>このクラスインスタンスの値を Integer データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32(System.IFormatProvider)" />
            <returns>このインスタンスの値に対応する 32 ビットの符号付き整数。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt32(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Integer データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応する 32 ビットの符号付き整数。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16">
            <summary>このクラスインスタンスの値を Short データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt16(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Short データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に対応する 16 ビットの符号付き整数。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToString(System.IFormatProvider)">
            <summary>このクラス インスタンスの値を string データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に等しい string インスタンス。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte">
            <summary>このクラスインスタンスの値を Byte データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToByte(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Byte データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に相当する 8 ビットの符号なし整数。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar">
            <summary>このクラスインスタンスの値を Char データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar(System.IFormatProvider)" />
            <returns>このインスタンスの値に等しい Unicode 文字。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToChar(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Char 型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に等しい Unicode 文字。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64">
            <summary>このクラスインスタンスの値を Long データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToInt64(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Long データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に等しい 64 ビット符号付き整数。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal">
            <summary>このクラスインスタンスの値を Decimal データ型に変換します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)" />
            <returns>このインスタンスの値に等しい <b>Decimal</b>。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.Decimal@)">
            <summary><see cref="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value" /> を 10 進数 データ型に変換します。</summary>
            <param name="result">結果の 10 進数値。戻り値が False の場合は結果は 0 です。</param>
            <returns>値が 10 進数に正常に変換された場合は True、それ以外の場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToDecimal(System.IFormatProvider)">
            <summary>このクラスインスタンスの値を Decimal データ型に変換します。</summary>
            <param name="provider">カルチャー固有の書式設定情報を提供する <b>IFormatProvider</b> インターフェイス実装。</param>
            <returns>このインスタンスの値に等しい <b>Decimal</b>。</returns>
            <remarks>
            <p class="body">意味のある変換ができない場合、このメソッドは <b>InvalidCastException</b> をスローします。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.DateTimeToExcelDate(Infragistics.Documents.Excel.Workbook,System.DateTime)">
            <summary>DateTime を Excel の日付の数値表現へ変換します。</summary>
            <remarks>
            <p class="body">Excel で 1900 日付システムを使用する場合、3/1/1900 以前の日付は、Excel が 1900 をうるう年として扱うために修正する必要があります。このオーバー読み込みは、1900 日付システムが使用されていることを仮定して、日付値を修正しています。</p>
            </remarks>
            <param name="dateValue">Microsoft Excel の日付形式に変換する DateTime 値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.DateTimeToExcelDate(Infragistics.Documents.Excel.Workbook,System.DateTime,System.Boolean)">
            <summary>DateTime を Excel の日付の数値表現へ変換します。</summary>
            <param name="dateValue">Microsoft Excel の日付形式に変換する DateTime 値。</param>
            <param name="shouldCorrect1900Dates">Excel で 1900 日付システムを使用する場合、3/1/1900 以前の日付は、Excel が 1900 をうるう年として扱うために修正する必要があります。この修正を無効にするために False を渡します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToDateTime(Infragistics.Documents.Excel.Workbook,System.Double)">
            <summary>Excel の日付の数値表示を DateTime に変換します。</summary>
            <remarks>
            <p class="body">Excel で 1900 日付システムを使用する場合、3/1/1900 以前の日付は、Excel が 1900 をうるう年として扱うために修正する必要があります。このオーバー読み込みは、1900 日付システムが使用されていることを仮定して、日付値を修正しています。</p>
            </remarks>
            <param name="excelDate">DateTime に変換する必要のある Microsoft Excel の日付形式</param>		
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToDateTime(Infragistics.Documents.Excel.Workbook,System.Double,System.Boolean)">
            <summary>Excel の日付の数値表示を DateTime に変換します。</summary>
            <param name="excelDate">DateTime に変換する必要のある Microsoft Excel の日付形式</param>
            <param name="shouldCorrect1900Dates">Excel で 1900 日付システムを使用する場合、3/1/1900 以前の日付は、Excel が 1900 をうるう年として扱うために修正する必要があります。この修正を無効にするために False を渡します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ExcelDateToTimeOfDay(System.Double,System.Boolean)">
            <summary>Excel の時刻の数値表示を TimeSpan に変換します。</summary>
            <remarks>
            <p class="body">Excel では、日付値の小数部分のみが時刻を表すため、<paramref name="excelDate" /> が 1 より大きい場合、小数部分のみが使用されます。</p>
            </remarks>
            <param name="excelDate">DateTime に変換する必要のある Microsoft Excel の日付形式</param>	
            <param name="useDayInfo">日情報を含むことを許可するオプション パラメーター。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.TimeOfDayToExcelDate(System.TimeSpan,System.Boolean)">
            <summary>TimeSpan を Excel の日付の数値表現に変換します。</summary>
            <remarks>
            <p class="body"><paramref name="useDayInfo" /> が true 以外の場合、<paramref name="timeValue" /> の TimeSpan.Days 部分は使用されません。それ以外の場合、TimeSpan の時刻のみが使用されます。</p>
            </remarks>
            <param name="timeValue">Microsoft Excel の日付形式に変換する TimeSpan 値。</param>
            <param name="useDayInfo">日情報を含むことを許可するオプション パラメーター。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.GetResolvedValue(System.Boolean)">
            <summary>参照の解決された値を取得します。このメソッドは参照チェーンを繰り返し下って、単なる別の参照でない参照の解決された値を取得します。</summary>
            <param name="willUseValueInCalculations">返された値が計算で実際に使用される場合 True。値がタイプなどを検証するために要求されている場合 False。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsArray">
            <summary>このクラス インスタンスが配列値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスが配列を含む場合は true、それ以外の場合は false。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxy" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsArrayGroup">
            <summary>このクラス インスタンスが配列値のグループを含むかどうかを返します。</summary>
            <returns>このインスタンス クラスが配列のグループを含む場合は true、それ以外の場合は false。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.ToArrayProxyGroup" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Workbook">
            <summary>解決される数式に関連付けられるワークブックを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsReference">
            <summary>このクラス インスタンスに <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> 値が含まれるかどうかを返します。</summary>
            <returns>このインスタンス クラスが参照を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsError">
            <summary>このクラス インスタンスがエラー値を含むかどうかを返します。</summary>
            <returns>このクラス インスタンスがエラーを含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsNull">
            <summary>このクラス インスタンスが null 値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスが null 値を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsDBNull">
            <summary>このクラス インスタンスが DBNull 値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスが null 値を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsString">
            <summary>このクラス インスタンスが文字列値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスが文字列を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsBoolean">
            <summary>このクラス インスタンスがブール値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスがブール値を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.IsDateTime">
            <summary>このクラス インスタンスが DateTime 値を含むかどうかを返します。</summary>
            <returns>このインスタンス クラスがDateTime値を含む場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue.Value">
            <summary>基になる値を返します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula">
            <summary>数式オブジェクトによって実装されるインタフェイス。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.AddDynamicReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>数式の参照に数式の評価時に作成された参照を追加します。</summary>
            <remarks>
            <p class="body">数式は数式の参照または自動な参照コレクションにもう含まれている場合は効力はありません。</p>
            </remarks>
            <param name="reference">数式の自動参照コレクションに追加する参照です。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.Evaluate(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>コンパイルされた式を、指定した基本参照に対して評価します。</summary>
            <param name="reference">相対参照を絶対参照に解決する際に使用する基本参照。</param>
            <returns>式の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> を返します。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.DynamicReferences">
            <summary>数式の前回の評価の時に作成されたコレクションを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.FormulaString">
            <summary>数式文字列。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.HasAlwaysDirty">
            <summary>数式が常にdirty関数を含むかどうかを返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.BaseReference">
            <summary>数式に関連付けられた基本参照。</summary>
            <remarks>
            <p class="body">数式に関連付けられた基本参照。たとえば、列数式の場合、BaseReference は列参照となります。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula.References">
            <summary>数式のトークン文字列に含まれる参照のコレクションを返します。</summary>
            <returns><see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> のコレクション。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.BIFF8Writer">
            <summary>BIFF8Writer は、抽象的なワークブックオブジェクトを具体的な Excel ファイルにエクスポートするための静的メソッドを提供します。</summary>
            <remarks>
            <p class="note"><b>注:</b> BIFF8Writer クラスは不要です。<see cref="T:Infragistics.Documents.Excel.Workbook" /> の Save オーバー読み込みの 1 つを代用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToFile(Infragistics.Documents.Excel.Workbook,System.String)">
            <summary>既存のワークブックオブジェクトをBIFF8形式でファイルに書き込みます。</summary>
            <remarks>
            <p class="note"><b>注:</b> この代わりに、<see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)" /> メソッドを使用してワークブックをファイルに書き込みます。</p>
            </remarks>
            <param name="workbook">エクスポートするワークブック。</param>
            <param name="fileName">作成するExcelファイルのファイル名。パスが含まれていない場合、ファイルはデフォルトのプログラムフォルダーに作成されます。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToStream(Infragistics.Documents.Excel.Workbook,System.IO.Stream)">
            <summary>既存のワークブックオブジェクトをストリームに書き込みます。</summary>
            <remarks>
            <p class="note"><b>注:</b> <see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)" /> メソッドは、ストリームにワークブックを書き込む代わりに使用されます。</p>
            </remarks>
            <param name="workbook">エクスポートするワークブック。</param>
            <param name="outStream">出力ファイルストリーム。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.BIFF8Writer.WriteWorkbookToStreamEx(Infragistics.Documents.Excel.Workbook,System.IO.Stream)">
            <summary>既存のワークブックオブジェクトをBIFF8形式でストリームに書き込みます。</summary>
            <remarks>
            <p class="note"><b>注:</b> <see cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)" /> メソッドは、ストリームにワークブックを書き込む代わりに使用されます。</p>
            </remarks>
            <param name="workbook">エクスポートするワークブック。</param>
            <param name="outStream">生成されたBIFF8形式のデータを出力するストリーム。</param>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormulaParseException">
            <summary>数式解析エラーが発生した時にスローされる例外。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>データをシリアル化して <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> クラスのインスタンスを新規作成します。</summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info" /> が null です。
            </exception>
            <param name="info">初期化されたオブジェクト データ。</param>
            <param name="context">ソースの初期化されたストリームについてのコンテキスト情報。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>このオブジェクトのデータで指定した <see cref="T:System.Runtime.Serialization.SerializationInfo" /> インスタンスを格納します。</summary>
            <param name="info">初期化されたオブジェクト データ。</param>
            <param name="context">指定先の初期化されたストリームについてのコンテキスト情報。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="info" /> が null です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor">
            <summary><see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> クラスの新しいインスタンスを初期化します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.String)">
            <summary>エラー メッセージを指定して <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> クラスのインスタンスを新規作成します。</summary>
            <param name="message">エラーを説明するメッセージ。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.String,System.Exception)">
            <summary>エラー メッセージを指定して <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> クラスのインスタンスを新規作成します。</summary>
            <param name="message">エラーを説明するメッセージ。</param>
            <param name="innerException">この例外を引き起こす例外。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaParseException.#ctor(System.Int32,System.String,System.String,System.String)">
            <summary>数式の解析エラーの場所を決定する手助けとなる指定されたエラー メッセージおよび情報で <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> クラスの新しいインスタンスを初期化します。</summary>
            <param name="charIndexOfError">解析エラーが発生した <paramref name="formulaValue" /> パラメーターの文字インデックス。</param>
            <param name="formulaValue">エラーが解析された数式。</param>
            <param name="message">エラーを説明するメッセージ。</param>
            <param name="portionWithError">エラーが解析された数式の一部。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.CharIndexOfError">
            <summary>解析エラーが発生した <see cref="P:Infragistics.Documents.Excel.FormulaParseException.FormulaValue" /> の文字インデックスを取得します。</summary>
            <value>解析エラーが発生した FormulaValue の文字インデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.FormulaValue">
            <summary>エラーが解析された数式文字列を取得します。</summary>
            <value>エラーが解析された数式文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.Message">
            <summary>エラー メッセージおよびエラーのある数式の一部を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormulaParseException.PortionWithError">
            <summary>エラーを含む数式の一部を取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationRule">
            <summary>セルに適用可能なすべてのデータの入力規則ルールの基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRule.Clone">
            <summary>他のワークシートに適用できるこのルールのコピーを作成します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription">
            <summary>Microsoft Excel で無効な値がセルに適用された場合にダイアログ ボックスに表示される説明を取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" /> が True の場合のみ使用されます。</p>
            <p class="note"><b>注記:</b> タイトルは最大文字数は 225 文字です。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値が 225 文字よりも長い場合に発生します。
            </exception>
            <value>ユーザーに表示する説明か、既定のエラー説明を使用する場合は null。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle" />
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle">
            <summary>Microsoft Excel で無効な値がセルに適用された場合にダイアログ ボックスに表示されるタイトルを取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" /> が True の場合のみ使用されます。</p>
            <p class="note"><b>注記:</b> タイトルは最大文字数は 32 文字です。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値が 32 文字よりも長い場合に発生します。
            </exception>
            <value>ユーザーに表示するタイトルか、既定のエラー ダイアログ タイトルを使用する場合は null。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription" />
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle">
            <summary>値が無効な場合に値が許可されるかどうかと、Microsoft Excel で表示されるエラー ダイアログでユーザーに表示する選択肢を示すオプションが提供されているかを取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" /> が True の場合のみ使用されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            値が <see cref="T:Infragistics.Documents.Excel.DataValidationErrorStyle" /> 列挙体のメンバーでない場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription">
            <summary>ユーザーが Microsoft Excel でセルを選択したときに表示されるツールチップの説明を取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage" /> が True の場合のみ使用されます。</p>
            <p class="note"><b>注記:</b> 説明の最大文字数は 255 文字です。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値が 255 文字よりも長い場合に発生します。
            </exception>
            <value>ツールチップでユーザーに表示する説明。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle" />
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle">
            <summary>ユーザーが Microsoft Excel でセルを選択したときに表示されるツールチップのタイトルを取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage" /> が True の場合のみ使用されます。</p>
            <p class="note"><b>注記:</b> タイトルは最大文字数は 32 文字です。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値が 32 文字よりも長い場合に発生します。
            </exception>
            <value>ツールチップでユーザーに表示するタイトル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription" />
            <seealse cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue">
            <summary>セルに無効なデータが入力されたときに Microsoft Excel でエラー ダイアログを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">値が False の場合、無効なデータをセルに入力できますが、後でユーザーが Microsoft Excel 無効な値を円で囲むことを選択した場合、セルが円で囲まれます。</p>
            </remarks>
            <value>無効なセル データについてエラー ダイアログを表示する場合は True、それ以外の場合は False。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageDescription" />
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorMessageTitle" />
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRule.ShowInputMessage">
            <summary>ユーザーが Microsoft Excel でセルを選択したときに、ユーザーに入力プロンプト ツールチップを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">入力 プロンプトは、この値が True で <see cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription" /> が null でない場合にのみ表示されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageDescription" />
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.InputMessageTitle" />
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedString">
            <summary>セルまたはセル コメント内の書式設定が混在する文字列を表します。</summary>
            <remarks>
            <p class="body">文字列の書式は、Microsoft Excel と同様の方式で制御されます。Excel では、ユーザーはテキストの一部分を選択し、選択したテキストのさまざまな書式プロパティを設定します。</p>
            <p class="body">FormattedString では、文字列の一部分は <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">GetFont(int)</see> または <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">GetFont(int,int)</see> で呼び出すことによって選択されます。書式プロパティは、返される <see cref="T:Infragistics.Documents.Excel.FormattedStringFont" /> で設定され、フォントの選択範囲のすべての文字がこれらのプロパティで指定されます。</p>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.FormattedStringFont" /> の書式プロパティを取得すると、フォントの選択範囲で最初の文字の書式を返します。これは Excel と似ており、セルのテキストが選択されると、選択範囲の最初の文字の書式を反映するために書式インタフェースを更新します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.#ctor(System.String)">
            <summary><see cref="T:Infragistics.Documents.Excel.FormattedString" /> クラスの新しいインスタンスを作成します。</summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="unformattedString" /> が null です。
            </exception>
            <param name="unformattedString">書式を持つセルに表示される文字列。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.Equals(System.Object)">
            <summary>指定した <see cref="T:System.Object" /> がこの <see cref="T:Infragistics.Documents.Excel.FormattedString" /> と等しいかどうかを決定します。</summary>
            <param name="obj">この FormattedString と等しいことをテストするための値。</param>
            <returns><paramref name="obj" /> が FormattedString インスタンスの場合は True で、FormattedString と同じ書式化されていない文字列と書式を含み、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetHashCode">
            <summary>この <see cref="T:Infragistics.Documents.Excel.FormattedString" /> のハッシュ コードを計算します。</summary>
            <returns>ハッシュ関数で使用できる数。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.ToString">
            <summary><see cref="T:Infragistics.Documents.Excel.FormattedString" /> を表す <see cref="T:System.String" /> を返します。これは書式化されていない文字列です。</summary>
            <remarks>
            <p class="body">これは <see cref="P:Infragistics.Documents.Excel.FormattedString.UnformattedString" /> と同じ値を返します。</p>
            </remarks>
            <returns>この FormattedString を表す文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.Clone">
            <summary>このコピーである新しい <see cref="T:Infragistics.Documents.Excel.FormattedString" /> を作成します。</summary>
            <remarks>
            <p class="body">これは同じ書式化された文字列を複数のセルで使用する必要がある場合に使用されます。FormattedString クラスは、一度にひとつのセルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" /> としてのみ存在できます。FormattedString がすでにセルの値であり、他のセルの値として設定する必要がある場合、FormattedString のクローンを作成し、セルの値として返されたクローンを設定します。</p>
            <p class="body">クローンされた FormattedString は、このインスタンスのオリジナル構成のみをとります。このインスタンスがクローンされて変更されると、クローンは変更されず、これがクローンされた時の状態のままになります。</p>
            </remarks>
            <returns>このコピーである新しい FormattedString。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">
            <summary>指定した開始インデックスから文字列の終わりまでの文字列の書式プロパティを制御するフォントを取得します。</summary>
            <remarks>
            <p class="body">開始インデックスが書式化されていない文字列の長さ以上の場合、例外はスローされません。返された <see cref="T:Infragistics.Documents.Excel.FormattedStringFont" /> の書式プロパティのひとつが設定されると後で例外がスローされます。</p>
            </remarks>
            <param name="startIndex">返されるフォント制御の最初の文字のインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> はゼロ未満です。
            </exception>
            <returns>文字列の終わりの部分の書式を制御する FormattedStringFont インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">
            <summary>指定した文字数の指定した開始インデックスから文字列の書式プロパティを制御するフォントを取得します。</summary>
            <remarks>
            <p class="body">開始インデックスが書式化されていない文字列の長さ以上の場合、例外はスローされません。返された <see cref="T:Infragistics.Documents.Excel.FormattedStringFont" /> の書式プロパティのひとつが設定されると後で例外がスローされます。</p>
            </remarks>
            <param name="startIndex">返されるフォント制御の最初の文字のインデックス。</param>
            <param name="length">返されるフォントによって制御される開始インデックスの後の文字数。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> はゼロ未満です。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length" /> は 1 未満です。ゼロの長さの文字列は書式化されたフォントによって制御できません。
            </exception>
            <returns>文字列の部分の書式を制御する FormattedStringFont インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedString.GetFormattingRuns">
            <summary>文字列の最初文字に開始する同様な書式設定の接続ブロックを表す書式設定ランのコレクションを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedString.UnformattedString">
            <summary>書式化されていない文字列を取得または設定します。</summary>
            <remarks>
            <p class="body">指定された新しい書式化されていない文字列が古い書式化されていない文字列よりも短い場合、新しい値の範囲外のすべての書式は失われます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null 文字列です。
            </exception>
            <value>書式化されていない文字列。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedText">
            <summary>1 つのシェイプで複数の段落と複合型の書式設定を備えたテキストです。</summary>
            <remarks>
            <p class="body">文字列の書式は、Microsoft Excel と同様の方式で制御されます。Excel では、ユーザーはテキストの一部分を選択し、選択したテキストのさまざまな書式プロパティを設定します。</p>
            <p class="body">FormattedText では、<see cref="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32)" /> または <see cref="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32,System.Int32)" /> を呼び出すことによってテキストの一部分を「selected」(選択状態) に設定します。書式プロパティは、返される <see cref="T:Infragistics.Documents.Excel.FormattedTextFont" /> で設定され、フォントの選択範囲のすべての文字がこれらのプロパティで指定されます。</p>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.FormattedTextFont" /> の書式プロパティを取得すると、フォントの選択範囲で最初の文字の書式を返します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text" />
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.#ctor(System.String)">
            <summary><see cref="T:Infragistics.Documents.Excel.FormattedText" /> クラスの新しいインスタンスを作成します。</summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="unformattedString" /> が null です。
            </exception>
            <param name="unformattedString">このシェイプに表示される文字列です。文字列の各行は、<see cref="P:Infragistics.Documents.Excel.FormattedText.Paragraphs" /> コレクションの別個の段落に配置されます。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.ToString">
            <summary><see cref="T:Infragistics.Documents.Excel.FormattedText" /> を表す文字列を返します。この文字列は書式設定のない文字列です。</summary>
            <returns>この FormattedText を表す文字列です。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.Clone">
            <summary>このコピーである新しい <see cref="T:Infragistics.Documents.Excel.FormattedText" /> を作成します。</summary>
            <remarks>
            <p class="body">同じ書式付きテキストを複数のシェイプで使用する必要がある場合にはこれを使用します。FormattedText クラスを同時に複数のシェイプの <see cref="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text" /> として使用することはできません。すでに特定のシェイプのテキストとして使用されている FormattedText を別のシェイプのテキストとして使用する必要がある場合には、その FormattedText のクローンを作成し、そのクローンを当該のシェイプのテキストとして指定してください。</p>
            <p class="body">FormattedText のクローンは、複製元の FormattedText の設定値をコピーしただけものです。このインスタンスがクローンされて変更されると、クローンは変更されず、これがクローンされた時の状態のままになります。</p>
            </remarks>
            <returns>この FormattedText をコピーして新規に作成した FormattedText インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32)">
            <summary>指定した開始インデックスから文字列の終わりまでの文字列の書式プロパティを制御するフォントを取得します。</summary>
            <remarks>
            <p class="body">開始インデックスが書式化されていない文字列の長さ以上の場合、例外はスローされません。返された <see cref="T:Infragistics.Documents.Excel.FormattedTextFont" /> の書式プロパティのひとつが設定されると後で例外がスローされます。</p>
            </remarks>
            <param name="startIndex">返されるフォント制御の最初の文字のインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> はゼロ未満です。
            </exception>
            <returns>この文字列の末尾部分の書式を決定する FormattedTextFont インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFont(System.Int32,System.Int32)">
            <summary>指定した文字数の指定した開始インデックスから文字列の書式プロパティを制御するフォントを取得します。</summary>
            <remarks>
            <p class="body">開始インデックスが書式化されていない文字列の長さ以上の場合、例外はスローされません。返された <see cref="T:Infragistics.Documents.Excel.FormattedTextFont" /> の書式プロパティのひとつが設定されると後で例外がスローされます。</p>
            </remarks>
            <param name="startIndex">返されるフォント制御の最初の文字のインデックス。</param>
            <param name="length">返されるフォントによって制御される開始インデックスの後の文字数。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="startIndex" /> はゼロ未満です。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="length" /> は 1 未満です。ゼロの長さの文字列は書式化されたフォントによって制御できません。
            </exception>
            <returns>この文字列の一部分の書式を決定する FormattedTextFont インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedText.GetFormattingRuns">
            <summary>文字列の最初文字に開始する同様な書式設定の接続ブロックを表す書式設定ランのコレクションを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedText.Paragraphs">
            <summary>書式付きテキストの段落を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedText.VerticalAlignment">
            <summary>親シェイプ内における書式付きテキストの垂直方向の配置を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定した値が <see cref="T:Infragistics.Documents.Excel.VerticalTextAlignment" /> 列挙体に定義されていません。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Formula">
            <summary>セルまたはセルのグループの数式を表します。</summary>
            <remarks>
            <p class="body">数式は、セルで動的な値を表示する方法を提供します。この値は、他のセルや時刻の値などの要素の数によって異なります。これらの隔行セルはユーザーのコンピュータまたはインターネット上の異なるワークブック ファイルにも存在可能です。</p>
            <p class="body">数式の詳細は Microsoft Excel ヘルプを参照してください。</p>
            <p class="body">Parse または TryParse オーバー読み込みの 1 つを使用して新しい数式を作成します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString">
            <summary>数式を作成された文字列に似ている文字列表現に変換します。これはセル参照文字列を作成するために作成された数式で <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> を使用します。</summary>
            <returns>数式を表す文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>数式を指定したセルに適用します。</summary>
            <remarks>
            <p class="body">このメソッドまたは他の ApplyTo オーバーライドの 1 つは、セルの 1 つの値を数式に設定するために使用する必要があります。</p>
            <p class="body">このメソッドが返された後、指定したセルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" /> は数式を返します。</p>
            </remarks>
            <param name="cell">数式を適用するためのセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="cell" /> は配列数式の一部またはセルに制限されないデータ テーブルです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>数式をセルの指定した領域に適用します。</summary>
            <remarks>
            <p class="body">このメソッドまたは他の ApplyTo オーバーライドの 1 つは、セルの 1 つの値を数式に設定するために使用する必要があります。</p>
            <p class="body">このメソッドが返された後、指定した領域のすべてのセルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" /> は数式を返します。</p>
            </remarks>
            <param name="region">数式を適用するためのセルの領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="region" /> は、配列数式または領域の外に広がるデータ テーブルを含みます。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])">
            <summary>数式をセルのすべての指定した領域に適用します。</summary>
            <remarks>
            <p class="body">このメソッドまたは他の ApplyTo オーバーライドの 1 つは、セルの 1 つの値を数式に設定するために使用する必要があります。</p>
            <p class="body">このメソッドが返された後、すべての指定した領域のすべてのセルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" /> は数式を返します。</p>
            </remarks>
            <param name="regions">数式を適用するためのセルの領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regions" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="regions" /> は 0 の長さを持ちます。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定されたすべての領域は同じワークシートからではありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定された 1 つ以上の領域には、領域の外に広げられる配列数式またはデータ テーブルが含まれます。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString(Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>数式を作成された文字列に似ている文字列表現に変換します。</summary>
            <param name="cellReferenceMode">セル参照文字列を作成するために使用されるセル参照モード。</param>
            <returns>数式を表す文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>数式を作成された文字列に似ている文字列表現に変換します。</summary>
            <param name="cellReferenceMode">セル参照文字列を作成するために使用されるセル参照モード。</param>
            <param name="culture">数式文字列を生成するために使用されるカルチャー。</param>
            <returns>数式を表す文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Equals(Infragistics.Documents.Excel.Formula,Infragistics.Documents.Excel.Formula,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定したセル参照モードを使用して2 つの <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンスが等しいかどうかを決定します。</summary>
            <remarks>これは数式の空スペースを無視して大文字と小文字を区別しない文字列比較を実行します。</remarks>
            <param name="formulaA">比較する１つ目の数式。</param>
            <param name="formulaB">比較する２つ目の数式。</param>
            <param name="cellReferenceMode">2 つの数式を比較する時に使用するためのセル参照モード。</param>
            <returns>数式が両方とも null または両方が等しい場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定した数式値を解析し、それから作成した数式を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した数式を表す <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>指定した数式値を解析し、それから作成した数式を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した数式を表す <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>指定した数式値を解析し、それから作成した数式を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した数式を表す <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo)">
            <summary>指定した数式値を解析し、それから作成した数式を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した数式を表す <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Formula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.Formula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Formula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.Formula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための数式を定義する文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedFontBase">
            <summary><see cref="T:Infragistics.Documents.Excel.FormattedString" /> または <see cref="T:Infragistics.Documents.Excel.FormattedText" /> の文字の範囲の書式設定を制御する抽象基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.FormattedStringFont" />
            <seealso cref="T:Infragistics.Documents.Excel.FormattedTextFont" />
        </member>
        <member name="T:Infragistics.Documents.Excel.IWorkbookFont">
            <summary>関連するコンテキストでセルのフォントを表します。</summary>
            <remarks>
            <p class="body">フォントのプロパティがデフォルト値を持つ場合、解決チェインの前のフォントの値が使用されます。解決チェインの優先度は以下のようになります。<list type="number">
            <item>セル（最高の優先度）</item>
            <item>Row</item>
            <item>Column</item>
            <item>デフォルト セル書式（最低の優先度）</item>
            </list>たとえば、列のフォントが青、太字で、行のフォントが斜体、非太字の場合、行と列の交差セルのフォントは保存されたワークブックで青、斜体テキストになります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.IWorkbookFont.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)">
            <summary>すべてのフォントプロパティを特定のフォント書式設定に設定します。</summary>
            <param name="source">ソースとなるフォント書式。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Color">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Bold">
            <summary>フォントがボールドであるかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <value>フォントがボールドであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo">
            <summary>フォントの前景色を取得または設定します。</summary>
            <value>フォントの前景色。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Height">
            <summary>フォントの高さをトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">負の値はデフォルト フォントの高さを示し、この場合はデフォルト フォントの高さが使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は正の数で、20 から 8180 の有効なフォントの高さ範囲の外です。
            </exception>
            <value>フォントのトゥイップでの高さ（1 ポイントの 1/20）。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Italic">
            <summary>フォントがイタリックであるかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <value>フォントがイタリックであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Name">
            <summary>フォント ファミリ名を取得または設定します。</summary>
            <value>フォント ファミリ名。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.Strikeout">
            <summary>フォントが打ち消しであるかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <value>フォントが打ち消しであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.SuperscriptSubscriptStyle">
            <summary>フォントが上付または下付であるかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle" /> 列挙体で定義されません。
            </exception>
            <value>フォントが上付または下付であるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorkbookFont.UnderlineStyle">
            <summary>フォントの下線スタイルを取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.FontUnderlineStyle" /> 列挙体で定義されません。
            </exception>
            <value>フォントの下線スタイル。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedFontBase.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)">
            <summary>このフォントのすべてのプロパティを指定されたフォントのプロパティに設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属する場合、指定されたフォントのデフォルト値は無視されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="source" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <param name="source">プロパティがこのフォントにコピーされるべきフォント。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Color">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.FormattedFontBase.ColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Bold">
            <summary>フォントがボールドであるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントがボールドであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.ColorInfo">
            <summary>フォントの前景色を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントの前景色。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Height">
            <summary>フォントの高さを取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は正の数で、20 から 8180 の有効なフォントの高さ範囲の外です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントの高さです。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Italic">
            <summary>フォントがイタリックであるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントがイタリックであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Length">
            <summary>このフォントでカバーされる文字数を取得します。ゼロは、<see cref="P:Infragistics.Documents.Excel.FormattedFontBase.StartIndex" /> から文字列の終わりまでのフォント制御を示します。</summary>
            <value>
            このフォントでカバーされる文字数。ゼロは、StartIndex から文字列の終わりまでのフォント制御を示します。
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Name">
            <summary>フォントの名前を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントの名前。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.StartIndex">
            <summary>このフォントでカバーされる最初の文字のインデックスを取得します。</summary>
            <value>このフォントでカバーされる最初の文字のインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.Strikeout">
            <summary>フォントが打ち消しであるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントが打ち消しであるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.SuperscriptSubscriptStyle">
            <summary>フォントが上付または下付であるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントが上付または下付であるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedFontBase.UnderlineStyle">
            <summary>フォントの下線スタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの選択範囲のすべての文字は、このプロパティを設定することで影響を受けます。このプロパティを取得すると、このフォントの範囲の最初の文字の書式を示す値を返します。</p>
            <p class="note"><b>注:</b> デフォルト値はセルに適用される <see cref="T:Infragistics.Documents.Excel.FormattedString" /> 値で使用できません。このフォントがセルの値である FormattedString に属し、デフォルト値が割り当てられた場合、無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.FontUnderlineStyle" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントに関連付けられた書式設定済みの文字列またはテキストは、セル、コメント、または形状に割り当てられません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            フォントの選択範囲は、関連する書式設定済み文字列またはテキストの有効な文字範囲の外です。
            </exception>
            <value>フォントの下線スタイル。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.IWorksheetCellFormat">
            <summary>セルの書式を表します。</summary>
            <remarks>
            <p class="body">書式が公開される場所によって、それは異なる意味を持ちます。たとえば、セルの書式はそのセルのみにしか適用されず、行または列の書式はその行または列全体のセルに適用されます。スタイルの書式もあり、これは他の書式の親になることができます。つまり、それらは書式に設定されていない値のデフォルトを提供します。そして最後に、テーブル内の領域の書式などの、微分書式があります。これは、関連付けられた領域に存在するセルにデフォルト値を提供します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.RowColumnBase.GetResolvedCellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.GetResolvedCellFormat" />
        </member>
        <member name="M:Infragistics.Documents.Excel.IWorksheetCellFormat.SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)">
            <summary>すべてのセル書式プロパティを指定されたセル書式からコピーします。</summary>
            <param name="source">プロパティをコピーするセル書式。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPattern">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPatternBackgroundColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FillPatternForegroundColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment">
            <summary>セルのコンテンツの水平配置を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.HorizontalCellAlignment" /> 列挙体で定義されません。
            </exception>
            <value>セルのコンテンツの水平揃え。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo">
            <summary>下の境界色を取得または設定します。</summary>
            <remarks>
            <p class="body">境界色が非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" /> が Default に設定されている場合、Thin に解決されます。</p>
            </remarks>
            <value>下の境界線の色。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle">
            <summary>下の境界スタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">境界線のスタイルが非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" /> が null の場合、それは <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" /> に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>下枠線のスタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo">
            <summary>斜線の色を取得または設定します。</summary>
            <remarks>
            <p class="body">境界色が非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" /> が Default に設定されている場合、Thin に解決されます。</p>
            </remarks>
            <value>斜線の色。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders">
            <summary>斜線を取得または設定します。</summary>
            <remarks>
            <p class="body">斜線が None 以外に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" /> が Default に設定されている場合、Thin に解決されます。また、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" /> が null の場合、Color.Black に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>斜線のスタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle">
            <summary>斜線のスタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">境界線のスタイルが非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" /> が null の場合、それは <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" /> に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>斜線のスタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill">
            <summary>セルの塗りつぶしを取得または設定します。</summary>
            <value>セルの塗りつぶし。</value>
            <seealso cref="T:Infragistics.Documents.Excel.CellFill" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font">
            <summary>デフォルト フォント書式を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォント書式は、セルで使用されるデフォルト フォントです。これは、<see cref="T:Infragistics.Documents.Excel.FormattedString" /> クラスを使用して文字単位で文字列によって上書きすることができます。</p>
            </remarks>
            <value>デフォルト フォント書式。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions">
            <summary>書式が提供するプロパティのグループを取得または設定します。</summary>
            <remarks>
            <p class="body">スタイル書式の場合、この値は、スタイルをセルに適用する際に書式でどのプロパティを使用するかを示します。プロパティのその他の全てのグループはデフォルト値を返します。</p>
            <p class="body">セルおよび微分書式の場合は、この値は、書式によってどのプロパティを解決して返すかを示します。その他の全てのプロパティは、親 <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style" /> によって解決され、返されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString">
            <summary>数値書式文字列を取得または設定します。</summary>
            <remarks>
            <p class="body">Excel の書式文字列については、Microsoft Excel のヘルプを参照してください。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            割り当てられた値は無効な書式文字列であり <see cref="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings" /> は True です。
            </exception>
            <value>数値書式文字列。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Indent">
            <summary>平均の文字幅のインデントを単位で取得または設定します。</summary>
            <remarks>
            <p class="body">値が -1 のときは、デフォルト値が使用されることを示します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            割り当てられた値が -1 ではなく、0 ～ 250 の有効なインデント レベル範囲の外です。
            </exception>
            <value>文字の平均幅の単位のインデント、またはデフォルトのインデントを使用する場合は -1。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo">
            <summary>左の境界色を取得または設定します。</summary>
            <remarks>
            <p class="body">境界色が非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" /> が Default に設定されている場合、Thin に解決されます。</p>
            </remarks>
            <value>左の境界線の色。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle">
            <summary>左の境界スタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">境界線のスタイルが非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" /> が null の場合、それは <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" /> に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>左の境界スタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked">
            <summary>セルが保護モードでロックされるかどうかを示す有効性を取得または設定します。</summary>
            <remarks>
            <p class="body">Locked 値は、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> または <see cref="T:Infragistics.Documents.Excel.Workbook" /> が保護されている場合に限って、Excel ファイルで使用されます。そうでなければ、値は無視されます。</p>
            </remarks>
            <value>セルが保護モードでロックされるかどうかを示す有効性。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Protected" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo">
            <summary>右の境界色を取得または設定します。</summary>
            <remarks>
            <p class="body">境界色が非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" /> が Default に設定されている場合、Thin に解決されます。</p>
            </remarks>
            <value>右の境界色。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle">
            <summary>右の境界スタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">境界線のスタイルが非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" /> が null の場合、それは <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" /> に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>右の境界スタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Rotation">
            <summary>セル コンテンツの回転角度を取得または設定します。</summary>
            <remarks>
            <p class="body">0～90 は 0～90 度上がることを示し、91～180 は 1～90 度下がることを示します。255 を指定すると垂直になります。</p>
            </remarks>
            <value>セル コンテンツの回転角度。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.ShrinkToFit">
            <summary>セル コンテンツがセルを収めるために縮小するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">True の場合、セル フォントのサイズが縮小され、すべてのデータがセル内に収まります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <value>セル コンテンツがセルを収めるために縮小するかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style">
            <summary>書式の親 <see cref="T:Infragistics.Documents.Excel.WorkbookStyle" /> を取得または設定します。</summary>
            <remarks>
            <p class="body">セルの親スタイルまたは微分書式は、デフォルトの書式値を提供します。存在する <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions" /> フラグによって、書式プロパティの特定のグループのみが、親スタイルから解決されます。グループのいずれかのプロパティが非デフォルト値に設定された場合、FormatOptions は、スタイルの代わりに、書式がそのグループに値を提供するように、そのフラグを自動的に含めます。</p>
            <p class="body">デフォルトで、全てのセルおよび微分書式は、通常スタイルの親スタイルを持ち、これは <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle" /> プロパティによって公開されます。セルのスタイルまたは微分書式として null 値が割り当てられた場合、NormalStyle が実際に設定されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            割り当てられた値は非 null であり、書式はスタイル書式です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てられた値が異なる <see cref="T:Infragistics.Documents.Excel.Workbook" /> から来ています。
            </exception>
            <value>
            これがセルまたは微分書式の場合は <see cref="T:Infragistics.Documents.Excel.WorkbookStyle" /> インスタンス、スタイル書式の場合は null。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Styles" />
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo">
            <summary>上の境界色を取得または設定します。</summary>
            <remarks>
            <p class="body">境界色が非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" /> が Default に設定されている場合、Thin に解決されます。</p>
            </remarks>
            <value>上の境界線色。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle">
            <summary>上の境界スタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">境界線のスタイルが非デフォルト値に設定され、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" /> が null の場合、それは <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" /> に解決されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.CellBorderLineStyle" /> 列挙体で定義されません。
            </exception>
            <value>上の境界スタイル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment">
            <summary>セルのコンテンツの垂直配置を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.VerticalCellAlignment" /> 列挙体で定義されません。
            </exception>
            <value>セルのコンテンツの垂直揃え。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment" />
        </member>
        <member name="P:Infragistics.Documents.Excel.IWorksheetCellFormat.WrapText">
            <summary>テキストがセル内で折り返されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">True の場合、そしてセルに関連付けられた行がデフォルト <see cref="P:Infragistics.Documents.Excel.WorksheetRow.Height" /> を持つ場合、行の高さは自動的に折り返されたコンテンツを収めるために増加します。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean" /> 列挙体で定義されません。
            </exception>
            <value>テキストがセル内で折り返されるかどうかを示す値。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.RowColumnBase">
            <summary>ワークシート行とワークシート列の抽象基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow" />
        </member>
        <member name="M:Infragistics.Documents.Excel.RowColumnBase.GetResolvedCellFormat">
            <summary>行または列のセルに対して解決済みの書式設定を取得または設定します。</summary>
            <returns>書式オブジェクトは、この行または列が Microsoft Excel で表示されるときに使用される実際の書式を説明します。</returns>
            <exception cref="T:System.InvalidOperationException">オブジェクトがワークシートから削除された場合。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat" />
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Expanded">
            <summary>行または列の展開状態を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは非推奨です。代わりに <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> を使用します。</p>
            <p class="note"><B>注:</B> Hidden および Expanded は反対です (Expanded を True に設定することは Hidden を False に設定することと同じです)。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat">
            <summary>この行または列のセルに対するデフォルト セル書式を取得します。</summary>
            <remarks>
            <p class="body">解決された書式を取得する時に、セルの書式のデフォルト プロパティがこの書式から値を取ります。</p>
            </remarks>
            <value>この行または列のセルに対するデフォルト セル書式。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Hidden">
            <summary>行または列が非表示であるかどうかを示す値を取得または設定します。</summary>
            <remarks>非表示状態は、アウトライン グループの行または列の拡張状態も制御します。基本的に、アウトライン グループは単純に拡張インジケータから同時にグループのすべての行または列を表示または非表示にする簡単な方法を提供します。</remarks>
            <value>行または列が非表示であるかどうかを示す値。</value>
            <exception cref="T:System.InvalidOperationException">セッターでオブジェクトがワークシートから削除された場合、エラーは発生されます。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Index">
            <summary>ワークシートの行または列の 0 から始まるインデックスを取得します。</summary>
            <value>ワークシートの行または列の 0 から始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel">
            <summary>行または列のアウトライン レベルを取得または設定します。</summary>
            <remarks>
            <p class="body">Microsoft Excel は行および列の階層的なグループ化を最大 ７ レベルまでサポートします。グループを作成するには、隣接する行または列を同じアウトライン レベルに設定します。行または列がグループ化されると、アウトライン インジケータはアウトライン レベルの視覚的表現を提供します。さらに、アウトライン グループはグループのひとつのエンドに拡張インジケータを持ちます。これによってユーザーはシングルクリックでグループのすべての行または列を簡単に表示または非表示することができます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 7 の有効なアウトライン レベル範囲の外です。
            </exception>
            <exception cref="T:System.InvalidOperationException">セッターでオブジェクトがワークシートから削除された場合、エラーは発生されます。</exception>
            <value>行または列のアウトライン レベル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" />
        </member>
        <member name="P:Infragistics.Documents.Excel.RowColumnBase.Worksheet">
            <summary>行または列が属するワークシートを取得します。</summary>
            <value>行または列が属するワークシート。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Workbook">
            <summary>Microsoft Excel ワークブックを表します。</summary>
            <remarks>
            <p class="body">各ワークブックは１つまたは複数のワークシート（<see cref="T:Infragistics.Documents.Excel.Worksheet" />）で構成されています。デフォルト コンストラクターは空のワークブックを作成します。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelColorCount">
            <summary>廃止。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount">
            <summary>Excel 2007 ファイル形式で許可されているワークシート内の最大の行数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount">
            <summary>Excel 2007 ファイル形式で許可されている、ワークシート内の最大の列数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount">
            <summary>Excel 97-2003 ファイル形式で許可されている、ワークシート内の最大の行数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount">
            <summary>Excel 97-2003 ファイル形式で許可されている、ワークシート内の最大の列数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelCellFormatCount">
            <summary>Excel 97-2003 ファイル形式で許可されている、ワークブック内の最大のセル書式数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007CellFormatCount">
            <summary>Excel 2007 ファイル形式で許可されている、ワークブック内の最大のセル書式数。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Workbook.MaxExcelWorkbookFonts">
            <summary>Excel で許可されるワークブックのフォントの最大数です。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookPaletteMode)">
            <summary>廃止。代わりに <see cref="M:Infragistics.Documents.Excel.Workbook.#ctor" /> を使用します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.WorkbookPaletteMode)">
            <summary>廃止。代わりに <see cref="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat)" /> を使用します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,System.Boolean)">
            <summary>ファイルからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注釈セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックを読み取るファイル。</param>        
            <param name="verifyExcel2007Xml">&apos;Office Open XML - Open Packaging Conventions&apos; ドキュメントの Part 2 (<a href="http://www.ecma-international.org">ECMA</a> ドキュメントTC45 をご参照ください) で定義された規則に対してマークアップ コンテンツを検証するかどうかを指定するブール値です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName" /> は無効な Microsoft Excel ファイルのパスです。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0Excel アセンブリが使用されています。このケースでは、<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を取得するオーバーロードを使用することにより Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にファイルを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ファイルから読み込みされるワークブック。</returns>        
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>ファイルからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注釈セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックを読み取るファイル。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <param name="verifyExcel2007Xml">&apos;Office Open XML - Open Packaging Conventions&apos; ドキュメントの Part 2 (<a href="http://www.ecma-international.org">ECMA</a> ドキュメントTC45 をご参照ください) で定義された規則に対してマークアップ コンテンツを検証するかどうかを指定するブール値です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName" /> は無効な Microsoft Excel ファイルのパスです。        
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory" /> が null で、ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0 Excel アセンブリが使用されています。<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を指定すると Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にファイルを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ファイルから読み込みされるワークブック。</returns>        
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,System.Boolean)">
            <summary>ストリームからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。FileStream が指定されている場合にファイル拡張子が検証されます。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            </remarks>
            <param name="stream">ワークブックを読み取る元のストリーム。</param>
            <param name="verifyExcel2007Xml">&apos;Office Open XML - Open Packaging Conventions&apos; ドキュメントの Part 2 (<a href="http://www.ecma-international.org">ECMA</a> ドキュメントTC45 をご参照ください) で定義された規則に対してマークアップ コンテンツを検証するかどうかを指定するブール値です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream" /> は、有効な Microsoft Excel ファイル コンテンツを含みません。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0Excel アセンブリが使用されています。このケースでは、<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を取得するオーバーロードを使用することにより Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にストリームを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ストリームから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>ストリームからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。FileStream が指定されている場合にファイル拡張子が検証されます。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            </remarks>
            <param name="stream">ワークブックを読み取る元のストリーム。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <param name="verifyExcel2007Xml">&apos;Office Open XML - Open Packaging Conventions&apos; ドキュメントの Part 2 (<a href="http://www.ecma-international.org">ECMA</a> ドキュメントTC45 をご参照ください) で定義された規則に対してマークアップ コンテンツを検証するかどうかを指定するブール値です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream" /> は、有効な Microsoft Excel ファイル コンテンツを含みません。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory" /> が null で、ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0 Excel アセンブリが使用されています。<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を指定すると Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にストリームを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ストリームから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetEncryptionMode(Infragistics.Documents.Excel.WorkbookEncryptionMode)">
            <summary>2007 ファイル形式以後で保存される文書を暗号化するための暗号化モードを設定します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)">
            <summary>ファイルを自動書き込みから保護するために使用されるパスワードを設定します。</summary>
            <param name="password">ファイルを保護するために使用されるパスワード。null または空の文字列はファイルから書き込み保護を解除します。</param>
            <param name="userName"><see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy" /> 値として保存するユーザー名。null が指定され、有効なパスワードが指定された場合、Silverlight および WinRT 以外のすべてのプラットフォームで Environment.UserName は使用されます。</param>
            <remarks>
            <p class="body"><paramref name="userName" /> が指定され、パスワードが null または空の文字列に設定された場合、ユーザー名は無視され、<see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy" /> は null に設定されます。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)">
            <summary>ファイルを自動書き込みから保護するために使用されるパスワードを設定します。</summary>
            <param name="password">ファイルを保護するために使用されるパスワード。null または空の文字列はファイルから書き込み保護を解除します。</param>
            <param name="userName"><see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy" /> 値として保存するユーザー名。null が指定され、有効なパスワードが指定された場合、Silverlight および WinRT 以外のすべてのプラットフォームで Environment.UserName は使用されます。</param>
            <remarks>
            <p class="body"><paramref name="userName" /> が指定され、パスワードが null または空の文字列に設定された場合、ユーザー名は無視され、<see cref="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy" /> は null に設定されます。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)">
            <summary>以後の保存操作で文書を暗号化するために使用されるパスワードを設定します。</summary>
            <param name="password">文書を暗号化するために使用されるパスワード。null または空の文字列は、以後の保存操作で暗号化を許可しません。</param>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)">
            <summary>以後の保存操作で文書を暗号化するために使用されるパスワードを設定します。</summary>
            <param name="password">文書を暗号化するために使用されるパスワード。null は、以後の保存操作で暗号化を許可しません。</param>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)">
            <summary>書き込み禁止と読み込まれた <see cref="T:Infragistics.Documents.Excel.Workbook" /> のパスワードを検証します。保護が正常に無効されたかどうかを示す値を返します。</summary>
            <remarks>
            <p class="body">書き込み禁止のファイルまたはストリームから読み込んだ Workbook インスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> は最初に True に設定されます。このインスタンスのユーザーは、インスタンスが読み込んだファイルまたはストリームを自動的に上書きしないことをユーザーに通知するか、回避することを推薦します。このインスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" /> は初期状態では True に設定されません。ValidateFileWriteProtectionPassword により提供されたファイルの書き込み禁止のパスワードを検証できますが、読み込んだファイルまたはストリームから元のパスワードを取得することはできません。読み込まれた正しいファイル書き込み禁止のパスワードが検証されないファイル書き込み禁止の Workbook インスタンスは、ファイル書き込み禁止を使用せずに保存されます。パスワードが ValidateFileWriteProtectionPassword によって検証されたか、SetFileWriteProtectionPassword によって上書きされた場合のみ HasFileWriteProtectionPassword は True を返します。以後保存するファイルまたはストリームにファイル書き込み禁止が追加されたことを示します。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <returns>ワークブック ファイルは書き込み禁止か、以後の保存で使用するファイル書き込み禁止パスワードがあり、指定したパスワードはファイルのパスワードと一致する場合に True。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)">
            <summary>書き込み禁止と読み込まれた <see cref="T:Infragistics.Documents.Excel.Workbook" /> のパスワードを検証します。保護が正常に無効されたかどうかを示す値を返します。</summary>
            <remarks>
            <p class="body">書き込み禁止のファイルまたはストリームから読み込んだ Workbook インスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> は最初に True に設定されます。このインスタンスのユーザーは、インスタンスが読み込んだファイルまたはストリームを自動的に上書きしないことをユーザーに通知するか、回避することを推薦します。このインスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" /> は初期状態では True に設定されません。ValidateFileWriteProtectionPassword により提供されたファイルの書き込み禁止のパスワードを検証できますが、読み込んだファイルまたはストリームから元のパスワードを取得することはできません。読み込まれた正しいファイル書き込み禁止のパスワードが検証されないファイル書き込み禁止の Workbook インスタンスは、ファイル書き込み禁止を使用せずに保存されます。パスワードが ValidateFileWriteProtectionPassword によって検証されたか、SetFileWriteProtectionPassword によって上書きされた場合のみ HasFileWriteProtectionPassword は True を返します。以後保存するファイルまたはストリームにファイル書き込み禁止が追加されたことを示します。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <returns>ワークブック ファイルは書き込み禁止か、以後の保存で使用するファイル書き込み禁止パスワードがあり、指定したパスワードはファイルのパスワードと一致する場合に True。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)">
            <summary>ワークブックをファイルに書き出します。</summary>
            <remarks>
            <p class="body">ワークブックは <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> で指定された書式で書き出されます。</p>
            <p class="body">指定された <paramref name="fileName" /> には 現在の形式に適応する拡張子があるので、デフォルトで Microsoft Excel (インストールされている場合) で開くことができます。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/tyhc0kft.aspx">FileStream(string, FileMode, FileAccess)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注記セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックに書き込むためのファイル。</param>
            <param name="saveOptions">ファイルを保存するために使用されるオプション。デフォルト オプションを使用する場合は null。</param>
            <exception cref="T:System.InvalidOperationException">
            ワークブックには、<see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションにワークシートはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このワークブックに <see cref="P:Infragistics.Documents.Excel.DisplayOptions.Visibility" /> が Visible に設定されている Worksheets コレクションはありません。ワークブックの少なくとも1つのワークシートがVisibleの必要があります
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックの <see cref="T:Infragistics.Documents.Excel.CustomView" /> コレクションの <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" /> は、すべてのワークシートが非表示です。
            すくなくともひとつのワークシートがすべてのカスタム表示で表示可能でなければなりません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>ワークブックをファイルに書き出します。</summary>
            <remarks>
            <p class="body">ワークブックは <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> で指定された書式で書き出されます。</p>
            <p class="body">指定された <paramref name="fileName" /> には 現在の形式に適応する拡張子があるので、デフォルトで Microsoft Excel (インストールされている場合) で開くことができます。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/tyhc0kft.aspx">FileStream(string, FileMode, FileAccess)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注記セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックに書き込むためのファイル。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <exception cref="T:System.InvalidOperationException">
            ワークブックには、<see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションにワークシートはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このワークブックに <see cref="P:Infragistics.Documents.Excel.DisplayOptions.Visibility" /> が Visible に設定されている Worksheets コレクションはありません。ワークブックの少なくとも1つのワークシートがVisibleの必要があります
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックの <see cref="T:Infragistics.Documents.Excel.CustomView" /> コレクションの <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" /> は、すべてのワークシートが非表示です。
            すくなくともひとつのワークシートがすべてのカスタム表示で表示可能でなければなりません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Excel.WorkbookLoadOptions)">
            <summary>ファイルからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注釈セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックを読み取るファイル。</param>
            <param name="loadOptions">ファイルを読み込むために使用されるオプション。デフォルト オプションを使用する場合は null。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName" /> は無効な Microsoft Excel ファイルのパスです。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0Excel アセンブリが使用されています。このケースでは、<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を取得するオーバーロードを使用することにより Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.InvalidPasswordException">
            ワークブックが暗号化され、<paramref name="loadOptions" /> に指定した開くパスワードが正しくない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<paramref name="loadOptions" /> にファイルを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ファイルから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>ファイルからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            <p class="note"><B>注:</B> このメソッドは、コンストラクターの <a href="http://msdn2.microsoft.com/en-us/library/47ek66wy.aspx">FileStream(string, FileMode)</a> オーバー読み込みを使用して <see cref="T:System.IO.FileStream" /> を作成します。スローされる可能性のある例外については、このオーバー読み込みの注釈セクションを参照してください。</p>
            </remarks>
            <param name="fileName">ワークブックを読み取るファイル。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="fileName" /> は無効な Microsoft Excel ファイルのパスです。        
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory" /> が null で、ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0 Excel アセンブリが使用されています。<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を指定すると Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にファイルを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ファイルから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>ストリームからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。FileStream が指定されている場合にファイル拡張子が検証されます。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            </remarks>
            <param name="stream">ワークブックを読み取る元のストリーム。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream" /> は、有効な Microsoft Excel ファイル コンテンツを含みません。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            <paramref name="packageFactory" /> が null で、ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0 Excel アセンブリが使用されています。<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を指定すると Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<see cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" /> にストリームを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ストリームから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)">
            <summary>指定したパスにあるワークブックは開くパスワードと暗号化されるかどうかを決定します。</summary>
            <param name="path">暗号化のために確認するファイルへのパス。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="path" /> が null の場合に発生します。
            </exception>
            <returns>ファイルは暗号化されたワークブックを含む場合は True。それ以外の場合は False。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> クラスの新しいインスタンスを作成します。</summary>
            <remarks>
            <p class="body">作成された新しいワークブックは空です。<see cref="T:Infragistics.Documents.Excel.Worksheet" /> を少なくともひとつ追加していなければワークブックを保存できません。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.#ctor(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> クラスの新しいインスタンスを作成します。</summary>
            <param name="format">形式制限の設定と保存をする時に使用するファイル形式です。</param>
            <remarks>
            <p class="body">作成された新しいワークブックは空です。<see cref="T:Infragistics.Documents.Excel.Worksheet" /> を少なくともひとつ追加していなければワークブックを保存できません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)">
            <summary>平均文字幅の 1/256 の単位をピクセルへ変換します。</summary>
            <param name="characterWidth256ths">平均文字幅の1/256 の単位数。</param>
            <returns><paramref name="characterWidth256ths" /> 値に相当するピクセル数。</returns>
            <remarks>
            <p class="body">デフォルト フォントの高さを基にした平均文字幅の 1/256 の単位。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ClearPivotTableData">
            <summary>すべてのピボット テーブルおよび関連したスライサーを <see cref="T:Infragistics.Documents.Excel.Workbook" /> からクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CreateNewWorkbookFont">
            <summary>新しいワークブック フォントを作成する Factory メソッド。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.IWorkbookFont" /> は Excel ワークブックで使用されるフォントを表します。Excelワークブックの多くの部分で同じ複雑な（複数のプロパティが通常のものでない）フォント書式設定を使用する場合は、このメソッドを次のように使用します。<ol>
            <li class="taskitem"><span class="taskitemtext"><see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorkbookFont" />で新しいフォント書式を作成します。</span></li>
            <li class="taskitem"><span class="taskitemtext">特定のフォント書式に対して必要なプロパティをすべて設定します。</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="M:Infragistics.Documents.Excel.IWorkbookFont.SetFontFormatting(Infragistics.Documents.Excel.IWorkbookFont)" />メソッドを使用して、そのフォント書式を使用するすべての Excel オブジェクトにセル書式を適用します。</span></li>
            </ol></p>
            <p class="body">この手順を使用すると、複雑なフォント書式のコーディングが簡単になり、作成されたプログラムの速度も向上します。どのような方法を使用してもフォント書式は内部的にキャッシュされるため、この手順を使用してもワークブック内のフォント書式の総数は減りません。</p>
            </remarks>
            <returns>作成されたExcelフォントオブジェクト。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat">
            <summary>新しいワークシートセル書式を作成します。</summary>
            <returns>作成されたセル フォーマット。</returns>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.IWorksheetCellFormat" />はセル固有の書式設定（フォント、数値書式、外観など）を表します。Excel ワークブック内のセル書式の総数は <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelCellFormatCount" /> に制限されます。Excelワークブックの多くの部分で同じ複雑な（複数のプロパティが通常のものでない）セル書式設定を使用する場合は、このメソッドを次のように使用します。<ol>
            <li class="taskitem"><span class="taskitemtext"><see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat" />で新しいセル書式を作成します。</span></li>
            <li class="taskitem"><span class="taskitemtext">特定のセル書式に対して必要なプロパティをすべて設定します。</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="M:Infragistics.Documents.Excel.IWorksheetCellFormat.SetFormatting(Infragistics.Documents.Excel.IWorksheetCellFormat)" />メソッドを使用して、そのセル書式を使用するすべての Excel オブジェクトにセル書式を適用します。</span></li>
            </ol></p>
            <p class="body">この手順を使用すると、複雑なセル書式のコーディングが簡単になり、作成されたプログラムの速度も向上します。どのような方法を使用してもセル書式は内部的にキャッシュされるため、この手順を使用してもワークブック内のセル書式の総数は減りません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetTable(System.String)">
            <summary>指定した名前を持つテーブルを取得します。</summary>
            <param name="name">取得するテーブルの名前。</param>
            <remarks>
            <p class="body">テーブル名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <returns>指定した名前を持つテーブルが存在する場合は <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンス、そうでなければ null。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)">
            <summary>平均文字幅の 1/256 のピクセル単位へ変換します。</summary>
            <param name="pixels">ピクセル数。</param>
            <returns><paramref name="pixels" /> 値に相当する 平均文字幅の1/256 の単位数。</returns>
            <remarks>
            <p class="body">デフォルト フォントの高さを基にした平均文字幅の 1/256 の単位。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Recalculate">
            <summary>ワークブックにすべての計算が保留されているダーティ数式を再計算します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" /> が Manual の場合に使用できます。Manual モードでは、セルがダーティされると Recalculate が呼び出されるか <see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" /> が True、およびワークブックが保存されるまでは、そのセルを参照する数式は再計算されません。</p>
            <p class="body">ダーティではない数式の再計算を実行するには、<see cref="M:Infragistics.Documents.Excel.Workbook.Recalculate(System.Boolean)" /> オーバーロードを使用して includeNonDirtyFormulas パラメーターを True に設定します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Recalculate(System.Boolean)">
            <summary>ワークブックの全ての数式を再計算します。</summary>
            <param name="includeNonDirtyFormulas">保留中の評価があるかどうかと関係なくワークブックのすべての数式を再計算するには True を設定します。ダーティ数式のみを計算するには False を設定します。</param>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" /> が Manual の場合に使用できます。Manual モードでは、セルがダーティされると Recalculate が呼び出されるか <see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" /> が True、およびワークブックが保存されるまでは、そのセルを参照する数式は再計算されません。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> 型を含むアセンブリを登録します。</summary>
            <param name="assembly">登録する読み込み済みアセンブリ。</param>
            <returns>アセンブリが正常に登録された場合はTrue、登録が失敗した場合はFalseを返します。</returns>
            <remarks>
            <p class="body">登録するアセンブリに含まれるすべての型が列挙され、<see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" />  クラスから派生した型がすべて数式の関数リストに追加されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunction(Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction)">
            <summary>1 つの <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> インスタンスを登録します。</summary>
            <param name="userDefinedFunction">登録するユーザー定義関数のインスタンス。</param>
            <returns>型が正常に登録された場合は True、登録が失敗した場合は False を返します。</returns>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> クラスをサブクラス化することによって、数式で使用するカスタム関数を作成できます。インスタンス化された派生クラスを数式から利用できるようにするためには、RegisterUserDefinedFunction メソッドを使用して派生クラスを登録する必要があります。関数ライブラリをアセンブリにパッケージ化して、アセンブリに含まれるすべての関数を一度に登録することもできます。この場合は <see cref="M:Infragistics.Documents.Excel.Workbook.RegisterUserDefinedFunctionLibrary(System.Reflection.Assembly)" /> メソッドを使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations">
            <summary>数式の計算を再開します。</summary>
            <remarks>
            <p class="body">これが呼び出された時に全ての計算が中断されていない場合には、効果がなくなります。</p>
            <p class="body"><see cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations" /> を呼び出す度に、ResumeCalculations を呼ぶ出す必要があります。ResumeCalculations の呼び出し数が、SuspendCalculations の呼び出し数以上になると計算が再開します。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)">
            <summary>ワークブックをストリームに書き出します。</summary>
            <remarks>
            <p class="body">ワークブックは <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> で指定された書式で書き出されます。</p>
            </remarks>
            <param name="stream">ワークブックに書き込むためのストリーム。</param>
            <param name="saveOptions">ストリームを保存するために使用されるオプション。デフォルト オプションを使用する場合は null。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="stream" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックには、<see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションにワークシートはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このワークブックに <see cref="P:Infragistics.Documents.Excel.DisplayOptions.Visibility" /> が Visible に設定されている Worksheets コレクションはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックの <see cref="T:Infragistics.Documents.Excel.CustomView" /> コレクションの <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" /> は、すべてのワークシートが非表示です。
            すくなくともひとつのワークシートがすべてのカスタム表示で表示可能でなければなりません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>ワークブックをストリームに書き出します。</summary>
            <remarks>
            <p class="body">ワークブックは <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> で指定された書式で書き出されます。</p>
            </remarks>
            <param name="stream">ワークブックに書き込むためのストリーム。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="stream" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックには、<see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションにワークシートはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このワークブックに <see cref="P:Infragistics.Documents.Excel.DisplayOptions.Visibility" /> が Visible に設定されている Worksheets コレクションはありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックの <see cref="T:Infragistics.Documents.Excel.CustomView" /> コレクションの <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" /> は、すべてのワークシートが非表示です。
            すくなくともひとつのワークシートがすべてのカスタム表示で表示可能でなければなりません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SetCurrentFormat(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>ワークブックの現在フォーマットを設定します。</summary>
            <param name="format">形式制限の設定と保存をする時に使用するファイル形式です。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブックは <paramref name="format" /> が設定した制限を超えるデータを含みます。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.SuspendCalculations">
            <summary>数式の計算を一時的に中断します。</summary>
            <remarks>
            <p class="body">これは、さまざまな数式を追加したりワークブックの膨大なデータを変更したりする場合に一度だけ使用されます。それによりセルがダーティーされるたびに数式が計算されることがなくなります。</p>
            <p class="body"><see cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations" /> を呼び出す度に、ResumeCalculations を呼ぶ出す必要があります。ResumeCalculations の呼び出し数が、SuspendCalculations の呼び出し数以上になると計算が再開します。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ResumeCalculations" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Excel.WorkbookLoadOptions)">
            <summary>ストリームからワークブックを読み取ります。</summary>
            <remarks>
            <p class="body">ワークブックを読み込む時にフォーマットがファイルの拡張子またはファイルのコンテンツを決定します。FileStream が指定されている場合にファイル拡張子が検証されます。拡張子が標準 Excel 形式の拡張子の場合、ワークブックが適応する形式であると見なされます。そうでない場合は、形式を決定するためにファイルのコンテンツが検証されます。返されたワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> が、読み込まれたワークブックの形式を示します。</p>
            </remarks>
            <param name="stream">ワークブックを読み取る元のストリーム。</param>
            <param name="loadOptions">ストリームを読み込むために使用されるオプション。デフォルト オプションを使用する場合は null。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stream" /> は、有効な Microsoft Excel ファイル コンテンツを含みません。
            </exception>
            <exception cref="T:System.ArgumentException">
            このファイル形式は、指定したファイルから確定できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            ワークブック データの書式はサポートされていない書式です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            ワークブックは、Excel 2007 形式で読み込まれていて、CLR 2.0Excel アセンブリが使用されています。このケースでは、<see cref="T:Infragistics.Documents.Core.Packaging.IPackageFactory" /> を取得するオーバーロードを使用することにより Excel 2007 ファイル パッケージにアクセスできます。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.InvalidPasswordException">
            ワークブックが暗号化され、<paramref name="loadOptions" /> に指定した開くパスワードが正しくない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.DocumentEncryptedException">
            ワークブックが暗号化され、<paramref name="loadOptions" /> にストリームを開くためのパスワードが指定されない場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Core.EncryptionAlgorithmNotSupportedException">
            ワークブックはサポートされていない暗号化アルゴリズムで暗号化されているため、暗号化の解除を実行できない場合に発生します。
            </exception>
            <returns>ストリームから読み込みされるワークブック。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetWorkbookFormat(System.String)">
            <summary>指定したファイルのファイル拡張子に基づいて WorkbookFormat を返します。</summary>
            <param name="fileName">Excel ファイルのファイル名。</param>
            <returns>ファイルのファイル拡張子に基づくワークブック形式、または正しい形式が確定できない場合は、null。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)">
            <summary>指定したストリームにあるワークブックは開くパスワードと暗号化されるかどうかを決定します。</summary>
            <param name="stream">暗号化のために確認するストリーム。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="stream" /> が null の場合に発生します。
            </exception>
            <returns>ストリームは暗号化されたワークブックを含む場合は True。それ以外の場合は False。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetMaxColumnCount(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>指定した書式でサポートされる列数を返します。</summary>
            <param name="format">ワークブックに使用されるフォーマット。</param>
            <returns>書式でサポートされる最大列数。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.GetMaxRowCount(Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>指定した書式でサポートされる行数を返します。</summary>
            <param name="format">ワークブックに使用されるフォーマット。</param>
            <returns>書式でサポートされる最大行数。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Workbook.IsValidFunctionName(System.String)">
            <summary>ワークブックが保存された時に指定した機能を Microsoft Excel が認識および解決するかどうかを示す値を取得します。</summary>
            <param name="functionName">大文字と小文字を区別しない機能。</param>
            <returns>Microsoft Excel が機能を認識する場合は True。そうでない場合は、False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ActiveWorksheet">
            <summary>アクティブ ワークシートを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは非推奨です。代わりに <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet" /> を使用します。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DefaultFontHeight">
            <summary>廃止。デフォルト フォントの高さをトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、20 および 8180 の有効なフォントの高さ範囲の外です。
            </exception>
            <value>デフォルト フォントのトゥイップでの高さ（1 ポイントの 1/20）。</value>
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.Height" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.FileWriteProtectedBy">
            <summary>文書にファイル書き込み禁止を最初に追加されたユーザー名を取得します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、この値は有効です。SetFileWriteProtectionPassword が呼び出され、ユーザー名および新しいパスワードが指定された場合に更新されます。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> は、保存されたファイルまたはストリームを保護するファイル書き込み禁止パスワードがあるかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">書き込み禁止のファイルまたはストリームから読み込んだ Workbook インスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> は最初に True に設定されます。このインスタンスのユーザーは、インスタンスが読み込んだファイルまたはストリームを自動的に上書きしないことをユーザーに通知するか、回避することを推薦します。このインスタンスの HasFileWriteProtectionPassword は最初に True に設定されません。ValidateFileWriteProtectionPassword により提供されたファイルの書き込み禁止のパスワードを検証できますが、読み込んだファイルまたはストリームから元のパスワードを取得することはできません。読み込まれた正しいファイル書き込み禁止のパスワードが検証されないファイル書き込み禁止の Workbook インスタンスは、ファイル書き込み禁止を使用せずに保存されます。パスワードが ValidateFileWriteProtectionPassword によって検証されたか、SetFileWriteProtectionPassword によって上書きされた場合のみ HasFileWriteProtectionPassword は True を返します。以後で保存するファイルまたはストリームにファイル書き込み禁止は追加されたことを示します。</p>
            <p class="body">ファイル書き込み禁止パスワードは、SetOpenPassword によってクリアまたはリセットできます。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> は開くパスワードを持ち、以後の保存で暗号化するかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">暗号化されたファイルまたはストリームから読み込んだ Workbook インスタンスは、暗号化の解除で使用されるパスワードをキャッシュし、以後の保存で再使用します。したがって、暗号化されたファイルまたはストリームから読み込んだ Workbook で最初に True に設定されます。その他の Workbook で False に設定されます。</p>
            <p class="body">開くパスワードは、SetOpenPassword によってクリアするか、リセットできます。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> がファイル書き込み禁止と読み込んで、正しいパスワードがまだ ValidateFileWriteProtectionPassword に提供されないかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">書き込み禁止のファイルまたはストリームから読み込んだ Workbook インスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> は最初に True に設定されます。このインスタンスのユーザーは、インスタンスが読み込んだファイルまたはストリームを自動的に上書きしないことをユーザーに通知するか、回避することを推薦します。このインスタンスの <see cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" /> は初期状態では True に設定されません。ValidateFileWriteProtectionPassword により提供されたファイルの書き込み禁止のパスワードを検証できますが、読み込んだファイルまたはストリームから元のパスワードを取得することはできません。読み込まれた正しいファイル書き込み禁止のパスワードが検証されないファイル書き込み禁止の Workbook インスタンスは、ファイル書き込み禁止を使用せずに保存されます。パスワードが ValidateFileWriteProtectionPassword によって検証されたか、SetFileWriteProtectionPassword によって上書きされた場合のみ HasFileWriteProtectionPassword は True を返します。以後保存するファイルまたはストリームにファイル書き込み禁止が追加されたことを示します。</p>
            <p class="body">IsFileWriteProtected が true で、ファイル書き込み禁止パスワードが ValidateFileWriteProtectionPassword によって検証されたか、SetFileWriteProtectionPassword によって上書きされた場合、Workbook が読み込んだファイルまたはストリームを自動的に上書きできることを示すために IsFileWriteProtected は False を返します。</p>
            <p class="note"><b>注:</b> <see cref="T:Infragistics.Documents.Excel.Workbook" /> および関連するサブオブジェクトは、書き込み禁止ファイルの場合、ランタイムで変更を許可します。Microsoft Excel は、有効なパスワードとロック解除されていない書き込み禁止のファイルに UI 変更を許可します。また、書き込み禁止の Workbook インスタンスは、読み込んだファイル場所への保存を許可します。この場合、Microsoft Excel の「名前を付けて保存」ダイアログによってファイルを上書きできます。<see cref="P:Infragistics.Documents.Excel.Workbook.IsFileWriteProtected" /> が True の場合、ファイルの自動上書きを回避するのは Workbook のユーザーです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasFileWriteProtectionPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetFileWriteProtectionPassword(System.Security.SecureString,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.ValidateFileWriteProtectionPassword(System.Security.SecureString)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CalculationMode">
            <summary>参照される値が変更される時に数式が再計算される方法を示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">これが Manual の値に設定されている場合、<see cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" /> プロパティは数式がファイルを保存する直前に再計算されるかどうかを決定します。そうでなければ、このプロパティは無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" /> 列挙体で定義されていません。
            </exception>
            <value>参照される値が変更される時に数式が再計算される方法を示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode">
            <summary>ワークブックのセルが参照される方法を示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、Microsoft Excel で開かれる時にワークブックの行ラベルと列ラベルに影響を及ぼします。さらに、これは異なるセルを参照する数式の表示に影響を及ぼします。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> 列挙体で定義されていません。
            </exception>
            <value>ワークブックのセルが参照される方法を示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Culture">
            <summary>カルチャを意識した変換または比較をじっこするう際にワークブックの現在のカルチャとして使用するためのカルチャを取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> カルチャがワークブック ファイルに保存または読み込まれない場合、ワークブックに関連付けられているか所有されているオブジェクトへアクセスおよび操作する際にのみ使用されます。</p>
            </remarks>
            <value>ワークブックの現在のカルチャまたはスレッドの現在のカルチャを使用する場合 Null。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">
            <summary>ワークブックの現在のフォーマットを取得します。これは、保存や形式の制限を設定するために使用される形式です。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetCurrentFormat(Infragistics.Documents.Excel.WorkbookFormat)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles">
            <summary>このワークブック内のカスタム テーブルのコレクションを取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.CustomViews">
            <summary>ワークブックのカスタム表示のコレクションを取得します。</summary>
            <remarks>
            <p class="body">各カスタム表示は表示設定を保存し、オプションで設定を印刷します。これは <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドを呼び出すことによって、Microsoft Excel UI および Excel アセンブリの両方から後でワークブックおよびそのワークシートにひとつの操作として適用できます。</p>
            </remarks>
            <value>ワークブックのカスタム表示のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.CustomView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DateSystem">
            <summary>Microsoft Excel によって内部的に使用される日付システムを取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.Workbook.DateSystem" /> 列挙体で定義されていません。
            </exception>
            <value>Microsoft Excel によって内部的に使用される日付システム。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle">
            <summary>ワークブック内のテーブルのデフォルトのスタイルを取得または設定します。</summary>
            <remarks>
            <p class="body">これは、<see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" /> コレクション内の任意の <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> に設定できます。</p>
            <p class="body">これは決して null 値を返しません。null に設定された場合、これは TableStyleMedium2 テーブル スタイルにリセットされます。</p>
            <p class="body">この値が変更された場合、ワークブック内の既存のテーブルには適用されません。新しく作成されたテーブルのみが、ワークブック内のデフォルトのテーブル スタイルを使用します。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定された値は <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" /> コレクションにはありません。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.DocumentProperties">
            <summary>ワークブック文書に関連付けられたプロパティを取得します。</summary>
            <remarks>
            <p class="body">文書プロパティは、ワークブックの作者、タイトル、題名などのワークブックのコンテンツの詳細を提供する情報のピースです。</p>
            </remarks>
            <value>ワークブック文書に関連付けられたプロパティ。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled">
            <summary>循環参照の数式を計算中に繰り返しが許可されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">繰り返し計算が有効である場合、数式は循環参照の使用が許されるか、それが属するセルを直接または間接的に参照します。Microsoft Excel は、<see cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations" /> を繰り返した後、またはすべての数式値が 2 つの繰り返しの間の <see cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration" /> より少ない回数で変更すると、数式の繰り返し計算を停止します。</p>
            <p class="body">反復計算が無効である場合、循環参照は許可されず、それが直接または間接的に属するセルを参照する数式は、Microsoft Excel でエラー メッセージを表示して、セルは <see cref="P:Infragistics.Documents.Excel.ErrorValue.Circularity">Circularity</see> エラーを含みます。</p>
            </remarks>
            <value>
            再帰数式の計算中に繰り返しが許可されるかどうかを示す値。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.ErrorValue.Circularity" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration">
            <summary>繰り返しを終了する繰り返し間の数式で値の最大変更を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled" /> が True の場合のみ有効です。そうでなければ、これは無視されます。</p>
            <p class="body">繰り返し計算または循環参照が有効である場合、このプロパティは数式で繰り返しの計算を終了させる 2 つの繰り返しの数式のすべての値で最大の変更を決定します。繰り返しの計算は、数式が <see cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations" /> 回繰り返された場合も停止します。</p>
            </remarks>
            <value>繰り返しを終了する繰り返し間の数式で値の最大変更。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxColumnCount">
            <summary><see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> に基づいて各ワークシートの列の最大数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxRecursionIterations">
            <summary>数式が繰り返し計算される最大回数を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled" /> が True の場合のみ有効です。そうでなければ、これは無視されます。</p>
            <p class="body">繰り返しの計算または循環参照が有効である場合、このプロパティは計算が繰り返される時に許可される繰り返しの回数を決定します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、1 および 32767 の有効範囲の外です。
            </exception>
            <value>数式が繰り返し計算される最大回数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.MaxChangeInIteration" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.MaxRowCount">
            <summary><see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> に基づいて各ワークシートの行の最大数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.NamedReferences">
            <summary>このワークブック内の名前付き参照のコレクションを取得します。</summary>
            <remarks>
            <p class="body">名前付き参照は通常、名前によってセルまたはセルの範囲を参照するために使用されます。名前付き参照の名前は、セルまたはセル範囲を明示的に命名する代わりに数式によって使用されます。</p>
            </remarks>
            <value>このワークブック内の名前付き参照のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.NamedReference" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Palette">
            <summary>保存済みのファイルを Microsoft Excel 2003 およびそれ以前のバージョンで開いたときに使用される色パレットを取得します。</summary>
            <remarks>
            <p class="body">Microsoft Excel 2003 およびそれ以前のバージョンでファイルを開いたときに、セルおよび形状で使用される実際の色が表示されない場合があります。その代わりに、パレット内の最も近い色が表示されます。このため、古いバージョンの Excel で色をできる限り正確に維持するために、パレットは必要に応じてカスタマイズできます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Precision">
            <summary>セルの値を取得する時に使用する精度を取得または設定します。</summary>
            <remarks>
            <p class="body">精度はセルの実際の値またはセルの表示値を使用するかどうかを決定します。これらは通常は同じですが、セルの書式は表示された値では精度を失う場合があります。たとえば、セルの値が 18.975 で、通貨書式がセルで使用される場合、表示値は 18.98 になります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="T:Precision" /> 列挙体で定義されていません。
            </exception>
            <value>セルの値を取得する時に使用する精度。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Protected">
            <summary>ワークブックが保護されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">True の場合、ワークシートまたはロックされたセルの変更を防ぎます。</p>
            </remarks>
            <value>ワークブックが保護されるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.RecalculateBeforeSave">
            <summary>ワークブックが保存前にすべての数式を再計算するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティは、<see cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" /> が Manual の場合に限って適用されます。そうでなければ、これは無視されます。</p>
            </remarks>
            <value>ワークブックが保存前にすべての数式を再計算するかどうかを示す値。</value>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Recalculate" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.SaveExternalLinkedValues">
            <summary>外部のワークブックからリンクされる値を保存するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値は、Microsoft Excel でワークブックが開かれた時に限って使用されます。外部値を参照して Excel アセンブリからワークブックを保存する場合、外部にリンクされた値は保存されません。</p>
            </remarks>
            <value>外部のワークブックからリンクされる値を保存するかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ScreenDpi">
            <summary>ワークブックの行および列のサイズを計算するときに使用する Dpi を取得または設定します。空の場合、システム Dpi が使用されます。</summary>
            <exception cref="T:System.ArgumentException">
            指定した値は空ではなく、2 つの正の値がない場合に発生します。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ShouldRemoveCarriageReturnsOnSave">
            <summary>ワークブックが Excel ファイルへ保存される時にセルの文字列の値から改行文字が削除される必要があるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">Microsoft Excel 2003 では、復帰文字がボックスとして表示されます。殆どの場合には改行文字を表示する必要はなく、削除されてもセル内のテキスト レイアウトに影響はありません。このプロパティのデフォルトは True です。</p>
            </remarks>
            <value>
            保存したワークブックは、セルの値から復帰文字を含まない場合は True。セルに設定されている文字列の値をエクスポートする場合は、False。
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles">
            <summary>ワークブック内のプリセットのテーブル スタイルの読み取り専用コレクションを取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Styles">
            <summary>このワークブック内のカスタム スタイルのコレクションを取得します。</summary>
            <remarks>
            <p class="body">このコレクションは、Excel ワークブックにカスタムスタイルを追加するために使用します。ユーザーは Excel ワークブックのさまざまな部分にそのスタイルを適用することで、複雑な書式設定を容易に設定できます。</p>
            </remarks>
            <value>このワークブック内のカスタム スタイルのコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.ValidateFormatStrings">
            <summary>設定される時に書式文字列の検証を実行するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">後方互換性を維持するためにこの値はデフォルトで False です。</p>
            <p class="body">True の場合、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" /> プロパティが設定されると書式文字列の検証が実行されます。無効な書式文字列は例外の原因になります。False の場合、無効な書式文字列が許可されますが、セルの表示テキストが要求されると、その時には例外がスローされます。無効な書式文字列が許可され、ワークブックが保存されて Microsoft Excel で開かれる場合、エラーを表示します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.WindowOptions">
            <summary>さまざまなワークブック レベルの表示プロパティを制御するオプションを取得します。</summary>
            <remarks>
            <p class="body">ウィンドウ オプションは、Microsoft Excel のワークブックを表示する子 MDIウィンドウのプロパティを制御します。これらは選択したワークシートに基づき変更しないワークブックの表示オプションも制御します。</p>
            </remarks>
            <value>さまざまなワークブック レベルの表示プロパティを制御するオプション。</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Workbook.Worksheets">
            <summary>このワークブック内のワークシートのコレクションを取得します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet">WindowOptions.SelectedWorksheet</see> を使用して選択するワークシートを設定します。選択したワークシートは、Microsoft Excel でワークブックを開いた時に表示されるワークシートです。</p>
            </remarks>
            <value>このワークブック内のワークシートのコレクション。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookPaletteMode">
            <summary>廃止。WorkbookPaletteMode 列挙体は使用されていません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookPaletteMode.CustomPalette">
            <summary>実際の色に基づくカスタムパレットを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookPaletteMode.StandardPalette">
            <summary>標準Excelパレットを使用し、最も近い色に合わせます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDisplayOptions">
            <summary>ワークシートから制御のみが可能な表示オプションを公開するクラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions" />
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewDisplayOptions" />
        </member>
        <member name="T:Infragistics.Documents.Excel.DisplayOptions">
            <summary>ワークシートとカスタム表示の両方で保存できるワークシートで使用できるさまざまな表示オプションを公開する抽象基本クラス。</summary>
            <remarks>
            <p class="body">このクラスは、Microsoft Excel で表示した時にどのようにワークシートが表示されるかを制御する方法を提供します。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewDisplayOptions" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDisplayOptions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptions.Reset">
            <summary>表示オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptions.ResetCore">
            <summary>表示オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayOptions.ClearSelection">
            <summary>保存した選択情報を削除します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings">
            <summary>ワークシートで固定されたペインを制御する設定を取得します。</summary>
            <remarks>
            <p class="body">ワークブック ファイルで保存されるこれらの設定については、<see cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" /> は True でなければなりません。</p>
            <p class="note"><B>注:</B> 固定または固定されていないペインは同時に使用できません。したがって、ペインが固定されているかされていないかによって異なり、これらの設定は使用されない場合があります。</p>
            </remarks>
            <value>ワークシートで固定されたペインを制御する設定。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.GridlineColor">
            <summary>ワークシート上のグリッド線の色を取得または設定します。</summary>
            <remarks>
            <p class="body">ワークブックが標準パレットを使用している場合、カラー セットはパレットになければ変更される場合があります。この場合、標準パレットに最も近いカラーが使用されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            ワークブックがカスタム パレットを使用してこのカラーを設定している場合、カスタム パレットは過度のカラーを使用します。
            </exception>
            <value>ワークシートのグリッド線のカラー。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen">
            <summary>ワークシートのペインが固定されているかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値に基づいて、<see cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings" /> または <see cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings" /> がワークシートで使用されます。未使用の設定は無視され、ワークブック ストリームで保存されません。</p>
            </remarks>
            <value>ワークシートのペインが固定されているかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowExpansionIndicatorBelowGroupedRows">
            <summary>展開インジケーターをグループ化またはインデントされる行の下に表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowExpansionIndicatorToRightOfGroupedColumns">
            <summary>展開インジケーターをグループ化またはインデントされる行の右に表示するかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowFormulasInCells">
            <summary>数式がセルで表示されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値が True の場合、数式の文字列はセルで表示されます。この値が False であれば、数式の結果はセルで表示されます。</p>
            </remarks>
            <value>数式がセルで表示されるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowGridlines">
            <summary>グリッド線がセル間で表示されるかどうかを示す値を取得または設定します。</summary>
            <value>グリッド線がセル間で表示されるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintGridlines" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowOutlineSymbols">
            <summary>アウトライン記号がアウトライン列および行で表示されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">アウトライン記号が表示される場合、Microsoft Excel のアウトライン レベルまたは行および列の視覚表示を提供します。さらに、アウトライン記号にはアウトライン グループを展開および縮小することができる拡張インジケータが含まれます。</p>
            </remarks>
            <value>アウトライン記号がアウトライン列および行で表示されるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.OutlineLevel" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowRowAndColumnHeaders">
            <summary>行および列ヘッダを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">行および列ヘッダは、行または列の識別子を表示します。それらをクリックすることで行または列ですべてのセルをユーザーは簡単に選択することもできます。</p>
            </remarks>
            <value>行および列ヘッダを表示するかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintRowAndColumnHeaders" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowRulerInPageLayoutView">
            <summary>ページ レイアウト表示でルーラーを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値が True の場合、ルーラーはページ レイアウト表示でアクティブ ページの列ヘッダの上に表示されます。他のルーラーはアクティブ ページの行ヘッダの前にも表示されます。</p>
            <p class="note"><b>注:</b> このプロパティは、<see cref="P:Infragistics.Documents.Excel.DisplayOptions.View" /> が PageLayout の場合に限ってワークシート表示に影響を与えます。</p>
            <p class="note"><b>注:</b> PageLayout の <see cref="T:Infragistics.Documents.Excel.WorksheetView" /> 値は Excel 2007 に限ってサポートされます。その View のあるワークシートが Microsoft Excel のそれ以前のバージョンで表示されている場合、その表示は Normal 表示にデフォルト設定されます。</p>
            </remarks>
            <value>ページ レイアウト表示でルーラーを表示するかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.ShowZeroValues">
            <summary>ゼロ値がセルで表示されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値が True の場合、ゼロの値を持つセルはそれらの値を表示し、そうでなければそれらのセルは空で表示されます。</p>
            </remarks>
            <value>ゼロ値がセルで表示されるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.UnfrozenPaneSettings">
            <summary>ワークシートで固定されていないペインを制御する設定を取得します。</summary>
            <remarks>
            <p class="body">ワークブック ファイルで保存されるこれらの設定については、<see cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" /> は False でなければなりません。</p>
            <p class="note"><B>注:</B> 固定または固定されていないペインは同時に使用できません。したがって、ペインが固定されているかされていないかによって異なり、これらの設定は使用されない場合があります。</p>
            </remarks>
            <value>ワークシートで固定されていないペインを制御する設定。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.FrozenPaneSettings" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.View">
            <summary>ワークシートのカスタム表示を取得または設定します。</summary>
            <remarks>
            <p class="body">この表示は、Microsoft Excel のワークシートの全体表示を決定します。</p>
            <p class="note"><b>注:</b> PageLayout の <see cref="T:Infragistics.Documents.Excel.WorksheetView" /> 値は Excel 2007 に限ってサポートされます。その View のあるワークシートが Microsoft Excel のそれ以前のバージョンで表示されている場合、その表示は Normal 表示にデフォルト設定されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、WorksheetView 列挙体で定義されません。
            </exception>
            <value>ワークシートの現在の表示。</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayOptions.Visibility">
            <summary>ワークシートの可視性を取得または設定します。</summary>
            <remarks>
            <p class="body">可視性は、ワークシートのタブが Microsoft Excel の下のタブ バーに表示されるかどうかを決定します。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.WorksheetVisibility" /> 列挙体で定義されません。
            </exception>
            <value>ワークシートの可視性。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDisplayOptions.ResetCore">
            <summary>表示オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColor">
            <summary>廃止。代わりに <see cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColorInfo" /> を使用します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView">
            <summary>これが通常表示として表示される時にワークシートの拡大レベルを取得または設定します。</summary>
            <remarks>
            <p class="body">拡大率は、通常の表示拡大率のパーセントとして保存されます。100 の値は標準の拡大率を示し、200 の値は標準の表示サイズの 2 倍にズームされることを示します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は、ワークシートの拡大率レベルの有効範囲の外です。レベルは 10 から 400 の間にある必要があります
            </exception>
            <value>これが通常表示として表示される時のワークシートの拡大レベル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView">
            <summary>これが改ページ プレビューで表示される時にワークシートの拡大レベルを取得または設定します。</summary>
            <remarks>
            <p class="body">拡大率は、通常の表示拡大率のパーセントとして保存されます。100 の値は標準の拡大率を示し、200 の値は標準の表示サイズの 2 倍にズームされることを示します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は、ワークシートの拡大率レベルの有効範囲の外です。レベルは 10 から 400 の間にある必要があります
            </exception>
            <value>これが改ページ プレビューで表示される時のワークシートの拡大レベル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView">
            <summary>これがページ レイアウト表示として表示される時にワークシートの拡大レベルを取得または設定します。</summary>
            <remarks>
            <p class="body">拡大率は、通常の表示拡大率のパーセントとして保存されます。100 の値は標準の拡大率を示し、200 の値は標準の表示サイズの 2 倍にズームされることを示します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は、ワークシートの拡大率レベルの有効範囲の外です。レベルは 10 から 400 の間にある必要があります
            </exception>
            <value>これがページ レイアウト表示として表示される時のワークシートの拡大レベル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView" />
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.OrderColumnsRightToLeft">
            <summary>列が右から左に順番に並べられるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">列が右から左に順番に並べられる場合、ワークシートの他の要素は異なって表示されます。垂直スクロール バーはワークシートの左側に表示され、通常はワークシートの左側に表示されるワークシート タブ バ―は右側に表示されます。</p>
            </remarks>
            <value>列が右から左に順番に並べられるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.ShowWhitespaceInPageLayoutView">
            <summary>ページ レイアウト表示のワークシートのページの空白を表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="note"><B>注:</B> ワークシートの表示に影響を及ぼすこの値については、<see cref="P:Infragistics.Documents.Excel.DisplayOptions.View" /> を PageLayout に設定する必要があります。ただし、異なる表示が使用される場合、これはワークブックで保存されます。</p>
            <p class="note"><b>注:</b> PageLayout の <see cref="T:Infragistics.Documents.Excel.WorksheetView" /> 値は Excel 2007 に限ってサポートされます。その View のあるワークシートが Microsoft Excel のそれ以前のバージョンで表示されている場合、その表示は Normal 表示にデフォルト設定されます。</p>
            </remarks>
            <value>ページ レイアウト表示のワークシートのページの空白を表示するかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.View" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.TabColorInfo">
            <summary>Microsoft Excel のタブ バーの関連するワークシートのタブで使用するための <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得または設定します。</summary>
            <remarks>
            <p class="body">タブ バーが表示できない場合、この色は表示されません。</p>
            </remarks>
            <value>Microsoft Excel のタブ バーの関連するワークシートのタブで使用するための WorkbookColorInfo。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Resources">
            <summary>このアセンブリ用の <see cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer" /> インスタンスを公開します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Resources.Customizer" /> 
            <seealso cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer" /> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetString(System.String,System.Object[])">
            <summary>指定された名前とデフォルト使用言語を使用してリソース文字列を返します。</summary>
            <param name="name">取得する文字列リソースの名前。</param>
            <param name="args">文字列を書式設定するとき、string.Format メソッドに提供される引数。</param>
            <returns>指定したリソース名とデフォルトカルチャを使用して、リソース文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetString(System.String)">
            <summary>指定したリソース名とデフォルト使用言語を使用して リソース文字列を返します。この文字列は指定した引数を使用して書式設定されます。</summary>
            <param name="name">取得する文字列リソースの名前。</param>
            <returns>指定したリソース名とデフォルトカルチャを使用して、リソース文字列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Resources.GetObject(System.String)">
            <summary>指定された名前を使用してリソース オブジェクトを返します。</summary>
            <param name="name">リソース項目の名前。</param>
            <returns>項目のオーナーデータを返します。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Resources.Customizer">
            <summary>このアセンブリの <see cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer" /> を返します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.ExcelResourceCustomizer" /> 
        </member>
        <member name="M:Infragistics.Documents.Excel.Utilities.IsRotatedShapeAngle(System.Single)">
            <summary>図形のアンカー セルが指定した角度に基づいて変更されるかどうかを決定するために使用されます。</summary>
            <param name="angle">評価する角度</param>
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookLoadOptions">
            <summary>ワークブックをファイルまたはストリームからの読み込みと関連するオプションを含みます。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Load(System.String,Infragistics.Documents.Excel.WorkbookLoadOptions)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Load(System.IO.Stream,Infragistics.Documents.Excel.WorkbookLoadOptions)" /> 
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookOptionsBase">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions" /> または <see cref="T:Infragistics.Documents.Excel.WorkbookSaveOptions" /> の抽象基本クラス。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookOptionsBase.PackageFactory">
            <summary>ストリームで IPackage を作成するか、開くために使用できる IPackageFactory を取得または設定します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(System.String,Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions" /> インスタンスを作成します。</summary>
            <param name="openPassword">暗号化された場合、文書を暗号化の解除するために使用するパスワード。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(System.Security.SecureString,Infragistics.Documents.Core.Packaging.IPackageFactory,System.Boolean)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions" /> インスタンスを作成します。</summary>
            <param name="openPasswordSecure">暗号化された場合、文書を暗号化の解除するために使用するパスワード。</param>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
            <param name="verifyExcel2007Xml">&apos;Office Open XML - Open Packaging Conventions&apos; ドキュメントの Part 2 (<a href="http://www.ecma-international.org">ECMA</a> ドキュメントTC45 をご参照ください) で定義された規則に対してマークアップ コンテンツを検証するかどうかを指定するブール値です。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookLoadOptions.#ctor(Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorkbookLoadOptions" /> インスタンスを作成します。</summary>
            <param name="packageFactory">ストリームから IPackage を開くために使用できる IPackageFactory です。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword">
            <summary>暗号化された場合、文書を暗号化の解除するために使用するパスワードを取得または設定します。</summary>
            <remarks>
            <p class="body">文書が暗号化されていない場合、開くパスワードは無視されます。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPasswordSecure">
            <summary>暗号化された場合、文書を暗号化の解除するために使用するパスワードを取得または設定します。</summary>
            <remarks>
            <p class="body">文書が暗号化されていない場合、開くパスワードは無視されます。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.IsWorkbookEncrypted(System.IO.Stream)" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.HasOpenPassword" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.SetOpenPassword(System.Security.SecureString)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookLoadOptions.OpenPassword" />
        </member>
        <member name="T:Infragistics.InfragisticsFeatureAttribute">
            <summary>新機能の部分として追加された公開タイプまたはメンバーを示します。</summary>
        </member>
        <member name="M:Infragistics.InfragisticsFeatureAttribute.#ctor">
            <summary>新しい <see cref="T:Infragistics.InfragisticsFeatureAttribute" /> インスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.Exclude">
            <summary>メンバーまたはタイプは内部の機能ドキュメントから除外されるかどうかを示す値を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.FeatureName">
            <summary>機能の短い名称説明を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.SubFeatureName">
            <summary>機能の詳細のサブ機能名称説明を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.InfragisticsFeatureAttribute.Version">
            <summary>機能が追加されたバージョンを取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Shared.AssemblyVersion">
            <summary>Infragistics アセンブリのバージョン情報を含みます。</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.MajorMinor">
            <summary>アセンブリ バージョンの Major.Minor 番号部分</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Build">
            <summary>アセンブリ バージョンの Build 番号部分</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Revision">
            <summary>アセンブリ バージョンの Revision 番号部分</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Version">
            <summary>アセンブリ バージョン番号</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.CompanyName">
            <summary>アセンブリ会社名。</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.EndCopyrightYear">
            <summary>アセンブリ著作権の終了年。</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.SatelliteContractVersion">
            <summary>サテライト アセンブリのアセンブリ バージョン番号。</summary>
        </member>
        <member name="F:Infragistics.Shared.AssemblyVersion.Configuration">
            <summary>アセンブリ用の現在のビルド構成。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ArrayFormula">
            <summary>セルのグループの配列数式を表します。</summary>
            <remarks>
            <p class="body">配列数式は同じ文法の正規数式に似ています。ただし、配列数式はセルのみのシングル領域に設定される必要があります。配列数式がセルの領域に適用される場合、各セルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula">Formula</see> プロパティは配列数式になります。各セルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula">Value</see> は、 <see cref="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange" /> が配列数式で呼び出されるか、他の値が配列数式の領域を完全に含むセルの領域に適用されない限り変更できません。</p>
            <p class="body">配列数式はセルの領域を <see cref="P:Infragistics.Documents.Excel.ArrayFormula.CellRange" /> プロパティに適用されるセルの領域に保存するので、配列数式はセルの 1 つのセルに限って適用できます。</p>
            <p class="body">配列数式は、セルの領域を選択し、その範囲に対する数式を入力し、Ctrl+Shift+Enter を押して、Microsoft Excel で作成されます。これによって、以下のように領域の各セルの数式が表示されます。: {=Formula}。</p>
            <p class="body">数式の詳細は Microsoft Excel のマニュアルを参照してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[],Infragistics.Documents.Excel.WorksheetRow,System.Int16)">
            <summary>数式をセルのすべての指定した領域に適用します。</summary>
            <remarks>
            <p class="body">このメソッドまたは他の ApplyTo オーバーライドの 1 つは、セルの 1 つの値を数式に設定するために使用する必要があります。</p>
            <p class="body">このメソッドが返された後、すべての指定した領域のすべてのセルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" /> は配列数式を返します。</p>
            </remarks>
            <param name="regions">数式を適用するためのセルの領域。</param>
            <param name="anchorRow">数式が作成された領域内の行。null の場合、上の行。</param>
            <param name="anchorColumnIndex">数式が作成された領域内の列。-1 の場合、最初の列が使用されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="regions" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            長さ <paramref name="regions" /> は全く別のものです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            配列数式はすでにセル領域に適用されています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定された 1 つ以上の領域には、領域の外に広げられる配列数式またはデータ テーブルが含まれます。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange">
            <summary>この配列数式を適用されたセルの数式として削除します。</summary>
            <remarks>
            <p class="body">このメソッドが返した後は、<see cref="P:Infragistics.Documents.Excel.ArrayFormula.CellRange" /> は null になります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定した数式値を解析し、それから作成した配列数式を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した配列数式値を表す <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>指定した数式値を解析し、それから作成した配列数式を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した配列数式値を表す <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat)">
            <summary>指定した数式値を解析し、それから作成した配列数式を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">配列数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した配列数式値を表す <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.Parse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo)">
            <summary>指定した数式値を解析し、それから作成した配列数式を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">配列数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <returns>指定した配列数式値を表す <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.ArrayFormula.TryParse(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorkbookFormat,System.Globalization.CultureInfo,Infragistics.Documents.Excel.ArrayFormula@,Infragistics.Documents.Excel.FormulaParseException@)">
            <summary>指定された数式値を解析します。操作が成功したかどうかを示す値を返します。</summary>
            <param name="value">解析するための配列数式を定義する文字列。</param>
            <param name="cellReferenceMode">配列数式のセル参照を解釈するために使用されるモード。</param>
            <param name="fileFormat">数式解析の時に使用するファイル形式です。形式に依存する制約を決定するのに使用されます。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <param name="formula">このメソッドが返す場合、変換が成功した場合は <paramref name="value" /> から解析された配列数式を含み、変換が失敗した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <param name="exception">このメソッドが返す場合、変換が失敗した場合はエラー情報を含み、変換が成功した場合は null を含みます。このパラメーターは初期化されずに渡されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="fileFormat" />が<see cref="T:Infragistics.Documents.Excel.WorkbookFormat" />列挙体で定義されていないです。
            </exception>
            <returns><paramref name="value" /> が変換に成功した場合は True、そうでない場合は False を返します。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ArrayFormula.CellRange">
            <summary>配列数式が適用されるセルを取得します。</summary>
            <remarks>
            <p class="body">これが null の場合、数式は未だ適用されていません。</p>
            </remarks>
            <value>配列数式が適用されるセル。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFill">
            <summary>セルの塗りつぶしを表す抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillGradient" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>セルの塗りつぶしに適用できる線形グラデーションを作成します。</summary>
            <param name="angle">線形グラデーションの向きを左から右方向へ時計回りに何度傾けるかを示す角度。</param>
            <param name="color1">グラデーションの開始の色。</param>
            <param name="color2">グラデーションの終了の色。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1" /> または <paramref name="color2" /> は色がない状態かシステム カラーである、または不透明ではないアルファ チャネルがあります。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>セルの塗りつぶしに適用できる線形グラデーションを作成します。</summary>
            <param name="angle">線形グラデーションの向きを左から右方向へ時計回りに何度傾けるかを示す角度。</param>
            <param name="colorInfo1">グラデーションの開始の色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" />。</param>
            <param name="colorInfo2">グラデーションの終了の色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" />。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1" /> または <paramref name="colorInfo2" /> は自動またはシステム カラーです。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateLinearGradientFill(System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>セルの塗りつぶしに適用できる線形グラデーションを作成します。</summary>
            <param name="angle">線形グラデーションの向きを左から右方向へ時計回りに何度傾けるかを示す角度。</param>
            <param name="stops">グラデーションの色遷移と配置を記述する 2 つ以上のグラデーション境界。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops" /> に 2 つ以上のグラデーション境界が含まれていません。グラデーションを定義するには最低 2 つの境界が必要です。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreatePatternFill(System.Drawing.Color,System.Drawing.Color,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>セルに適用できる無地またはパターンの塗りつぶしを作成します。</summary>
            <param name="backgroundColor"><paramref name="patternStyle" /> が None でない場合にのみ見えるようになるセルの背景色です。</param>
            <param name="patternColor"><paramref name="patternStyle" /> が None でも Solid でもない場合にのみ見えるようになるセルのパターン色です。</param>
            <param name="patternStyle">セルの塗りつぶしパターン。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="backgroundColor" /> または <paramref name="patternColor" /> は色がない状態か、または不透明ではないアルファ チャネルがあります。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle" /> が Default であるか、もしくは <see cref="T:Infragistics.Documents.Excel.FillPatternStyle" /> 列挙体で定義されていません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreatePatternFill(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>セルに適用できる無地またはパターンの塗りつぶしを作成します。</summary>
            <remarks>
            <p class="body"><paramref name="backgroundColorInfo" /> と <paramref name="patternColorInfo" /> に null 値を指定すると、既定色が使用されます。</p>
            </remarks>
            <param name="backgroundColorInfo">セルの背景色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。セルの背景色は、<paramref name="patternStyle" /> が None でない場合にのみ見えるようになります。</param>
            <param name="patternColorInfo">セルのパターン色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。このパターン色は、<paramref name="patternStyle" /> が None でも Solid でもない場合にのみ見えるようになります。</param>
            <param name="patternStyle">セルの塗りつぶしパターン。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle" /> が Default であるか、もしくは <see cref="T:Infragistics.Documents.Excel.FillPatternStyle" /> 列挙体で定義されていません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Drawing.Color,System.Drawing.Color)">
            <summary>セルの塗りつぶしに適用できる長方形グラデーションを作成します。</summary>
            <param name="color1">グラデーションのインナー矩形 (セルの中心) の色。</param>
            <param name="color2">グラデーションのアウター矩形 (セルの縁) の色。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1" /> または <paramref name="color2" /> は色がない状態かシステム カラーである、または不透明ではないアルファ チャネルがあります。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>セルの塗りつぶしに適用できる長方形グラデーションを作成します。</summary>
            <remarks>
            <p class="body">長方形グラデーションは、インナー長方形とワンセットのグラデーション境界を指定するという形で定義します。グラデーションはインナー矩形の縁からセルの縁に向かって進みます。インナー矩形の高さや幅がゼロでない場合、インナー矩形の中心は最初のグラデーション境界の色で塗りつぶされます。</p>
            <p class="body">インナー矩形は、<paramref name="left" />、<paramref name="top" />、<paramref name="right" />、および <paramref name="bottom" /> の各パラメーターによって定義されます。こうしたパラメーターは、0.0 から 1.0 の範囲の相対値で、左上から右下に向かって増えていきます。したがって、たとえば、中心から外に向かって進むグラデーションを指定するには、すべての値を 0.5 に設定します。また、セルの左下隅から外に向かって進むグラデーションを指定するには、以下の値を使用します: left = 0.0、top = 1.0、right = 0.0、bottom = 1.0。</p>
            </remarks>
            <param name="left">グラデーションのインナー矩形の左辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="top">グラデーションのインナー矩形の上辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="right">グラデーションのインナー矩形の右辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="bottom">グラデーションのインナー矩形の底辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="color1">グラデーションのインナー矩形の色。</param>
            <param name="color2">グラデーションのアウター矩形 (セルの縁) の色。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left" />、<paramref name="top" />、<paramref name="right" />、または <paramref name="bottom" /> が 0.0 未満の値であるか、または 1.0 を超える値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="color1" /> または <paramref name="color2" /> は色がない状態かシステム カラーである、または不透明ではないアルファ チャネルがあります。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>セルの塗りつぶしに適用できる長方形グラデーションを作成します。</summary>
            <param name="colorInfo1">グラデーションのインナー矩形 (セルの中心) の色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。</param>
            <param name="colorInfo2">グラデーションのアウター矩形 (セルの縁) の色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1" /> または <paramref name="colorInfo2" /> は自動またはシステム カラーです。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>セルの塗りつぶしに適用できる長方形グラデーションを作成します。</summary>
            <remarks>
            <p class="body">長方形グラデーションは、インナー長方形とワンセットのグラデーション境界を指定するという形で定義します。グラデーションはインナー矩形の縁からセルの縁に向かって進みます。インナー矩形の高さや幅がゼロでない場合、インナー矩形の中心は最初のグラデーション境界の色で塗りつぶされます。</p>
            <p class="body">インナー矩形は、<paramref name="left" />、<paramref name="top" />、<paramref name="right" />、および <paramref name="bottom" /> の各パラメーターによって定義されます。こうしたパラメーターは、0.0 から 1.0 の範囲の相対値で、左上から右下に向かって増えていきます。したがって、たとえば、中心から外に向かって進むグラデーションを指定するには、すべての値を 0.5 に設定します。また、セルの左下隅から外に向かって進むグラデーションを指定するには、以下の値を使用します: left = 0.0、top = 1.0、right = 0.0、bottom = 1.0。</p>
            </remarks>
            <param name="left">グラデーションのインナー矩形の左辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="top">グラデーションのインナー矩形の上辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="right">グラデーションのインナー矩形の右辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="bottom">グラデーションのインナー矩形の底辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="colorInfo1">グラデーションのインナー矩形の色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。</param>
            <param name="colorInfo2">グラデーションのアウター矩形 (セルの縁) の色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo1" /> または <paramref name="colorInfo2" /> は自動またはシステム カラーです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left" />、<paramref name="top" />、<paramref name="right" />、または <paramref name="bottom" /> が 0.0 未満の値であるか、または 1.0 を超える値です。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateRectangularGradientFill(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>セルの塗りつぶしに適用できる長方形グラデーションを作成します。</summary>
            <remarks>
            <p class="body">長方形グラデーションは、インナー長方形とワンセットのグラデーション境界を指定するという形で定義します。グラデーションはインナー矩形の縁からセルの縁に向かって進みます。インナー矩形の高さや幅がゼロでない場合、インナー矩形の中心は最初のグラデーション境界の色で塗りつぶされます。</p>
            <p class="body">インナー矩形は、<paramref name="left" />、<paramref name="top" />、<paramref name="right" />、および <paramref name="bottom" /> の各パラメーターによって定義されます。こうしたパラメーターは、0.0 から 1.0 の範囲の相対値で、左上から右下に向かって増えていきます。したがって、たとえば、中心から外に向かって進むグラデーションを指定するには、すべての値を 0.5 に設定します。また、セルの左下隅から外に向かって進むグラデーションを指定するには、以下の値を使用します: left = 0.0、top = 1.0、right = 0.0、bottom = 1.0。</p>
            </remarks>
            <param name="left">グラデーションのインナー矩形の左辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="top">グラデーションのインナー矩形の上辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="right">グラデーションのインナー矩形の右辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="bottom">グラデーションのインナー矩形の底辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="stops">グラデーションの色遷移と配置を記述する 2 つ以上のグラデーション境界。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left" />、<paramref name="top" />、<paramref name="right" />、または <paramref name="bottom" /> が 0.0 未満の値であるか、または 1.0 を超える値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops" /> に 2 つ以上のグラデーション境界が含まれていません。グラデーションを定義するには最低 2 つの境界が必要です。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateSolidFill(System.Drawing.Color)">
            <summary>セルに適用できる無地の塗りつぶしを作成します。</summary>
            <param name="solidColor">無地の塗りつぶしの色。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="solidColor" /> は色がない状態か、不透明ではないアルファ チャネルがあります。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFill.CreateSolidFill(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>セルに適用できる無地の塗りつぶしを作成します。</summary>
            <param name="solidColorInfo">無地の塗りつぶしの色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。</param>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillPattern" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFill.NoColor">
            <summary>セルの塗りつぶしに使用される既定色を取得します。これは背景色ではありません。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillPattern">
            <summary>セルに適用される無地またはパターンの塗りつぶしを表す不変オブジェクトです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.FillPatternStyle)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CellFillPattern" /> インスタンスを作成します。</summary>
            <remarks>
            <p class="body"><paramref name="backgroundColorInfo" /> と <paramref name="patternColorInfo" /> に null 値を指定すると、既定色が使用されます。</p>
            </remarks>
            <param name="backgroundColorInfo">セルの背景色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。セルの背景色は、<paramref name="patternStyle" /> が None でない場合にのみ見えるようになります。</param>
            <param name="patternColorInfo">セルのパターン色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> です。このパターン色は、<paramref name="patternStyle" /> が None でも Solid でもない場合にのみ見えるようになります。</param>
            <param name="patternStyle">セルの塗りつぶしパターン。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="patternStyle" /> が Default であるか、もしくは <see cref="T:Infragistics.Documents.Excel.FillPatternStyle" /> 列挙体で定義されていません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.CellFillPattern" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillPattern.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CellFillPattern" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.BackgroundColorInfo">
            <summary>セルの背景色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得します。セルの背景色は、<see cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle" /> が None でない場合にのみ見えるようになります。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle">
            <summary>セルの塗りつぶしパターンを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillPattern.PatternColorInfo">
            <summary>セルのパターン色を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得します。このパターン色は、<see cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternStyle" /> が None でも Solid でもない場合にのみ見えるようになります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillGradient">
            <summary>セルのグラデーション塗りつぶしを表す抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradient.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.CellFillGradient" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradient.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CellFillGradient" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradient.Stops">
            <summary>グラデーションの色遷移と配置を記述する読み取り専用のグラデーション境界コレクションを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillLinearGradient">
            <summary>セルに適用される線状グラデーション塗りつぶしを表す不変オブジェクトです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.#ctor(System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> インスタンスを作成します。</summary>
            <param name="angle">線形グラデーションの向きを左から右方向へ時計回りに何度傾けるかを示す角度。</param>
            <param name="stops">グラデーションの色遷移と配置を記述する 2 つ以上のグラデーション境界。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops" /> に 2 つ以上のグラデーション境界が含まれていません。グラデーションを定義するには最低 2 つの境界が必要です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillLinearGradient.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillLinearGradient.Angle">
            <summary>線状グラデーションの向きを左から右方向へ時計回りに何度傾けるかを示す角度を取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillRectangularGradient">
            <summary>セルに適用される長方形グラデーション塗りつぶしを表す不変オブジェクトです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.#ctor(System.Double,System.Double,System.Double,System.Double,Infragistics.Documents.Excel.CellFillGradientStop[])">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> インスタンスを作成します。</summary>
            <remarks>
            <p class="body">長方形グラデーションは、インナー長方形とワンセットのグラデーション境界を指定するという形で定義します。グラデーションはインナー矩形の縁からセルの縁に向かって進みます。インナー矩形の高さや幅がゼロでない場合、インナー矩形の中心は最初のグラデーション境界の色で塗りつぶされます。</p>
            <p class="body">インナー矩形は、<paramref name="left" />、<paramref name="top" />、<paramref name="right" />、および <paramref name="bottom" /> の各パラメーターによって定義されます。こうしたパラメーターは、0.0 から 1.0 の範囲の相対値で、左上から右下に向かって増えていきます。したがって、たとえば、中心から外に向かって進むグラデーションを指定するには、すべての値を 0.5 に設定します。また、セルの左下隅から外に向かって進むグラデーションを指定するには、以下の値を使用します: left = 0.0、top = 1.0、right = 0.0、bottom = 1.0。</p>
            </remarks>
            <param name="left">グラデーションのインナー矩形の左辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="top">グラデーションのインナー矩形の上辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="right">グラデーションのインナー矩形の右辺です。0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</param>
            <param name="bottom">グラデーションのインナー矩形の底辺です。0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</param>
            <param name="stops">グラデーションの色遷移と配置を記述する 2 つ以上のグラデーション境界。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="left" />、<paramref name="top" />、<paramref name="right" />、または <paramref name="bottom" /> が 0.0 未満の値であるか、または 1.0 を超える値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="stops" /> に 2 つ以上のグラデーション境界が含まれていません。グラデーションを定義するには最低 2 つの境界が必要です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillRectangularGradient.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Bottom">
            <summary>グラデーションのインナー矩形の底辺を取得します。これは 0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Left">
            <summary>グラデーションのインナー矩形の左辺を取得します。これは 0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Right">
            <summary>グラデーションのインナー矩形の右辺を取得します。これは 0.0 (セルの左辺) から 1.0 (セルの右辺) までの値をとります。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillRectangularGradient.Top">
            <summary>グラデーションのインナー矩形の上辺を取得します。これは 0.0 (セルの上辺) から 1.0 (セルの底辺) までの値をとります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellFillGradientStop">
            <summary>セル塗りつぶしグラデーションの色遷移を記述する不変クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" />
            <seealso cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.#ctor(System.Drawing.Color,System.Double)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop" /> インスタンスを作成します。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> で使用する場合、<paramref name="offset" /> はグラデーションの開始位置で 0.0、グラデーションの終了位置で 1.0 という値になります。<see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> で使用する場合、オフセットは、セルのインナー矩形で 0.0、アウター矩形で 1.0 という値になります。</p>
            </remarks>
            <param name="color">グラデーション境界の色遷移。</param>
            <param name="offset">グラデーションにおいてグラデーション境界を表す色遷移の位置です。これは 0.0 から 1.0 までの値をとります。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="offset" /> が、0.0 未満、または 1.0 を超える値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="color" /> は色がない状態かシステム カラーである、または不透明ではないアルファ チャネルがあります。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,System.Double)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop" /> インスタンスを作成します。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> で使用する場合、<paramref name="offset" /> はグラデーションの開始位置で 0.0、グラデーションの終了位置で 1.0 という値になります。<see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> で使用する場合、オフセットは、セルのインナー矩形で 0.0、アウター矩形で 1.0 という値になります。</p>
            </remarks>
            <param name="colorInfo">グラデーション境界の色遷移を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" />。</param>
            <param name="offset">グラデーションにおいてグラデーション境界を表す色遷移の位置です。これは 0.0 から 1.0 までの値をとります。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="colorInfo" /> は自動またはシステム カラーです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="offset" /> が、0.0 未満、または 1.0 を超える値です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.CellFillGradientStop" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CellFillGradientStop.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CellFillGradientStop" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo">
            <summary>グラデーション境界の色遷移を記述する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.Offset" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CellFillGradientStop.Offset">
            <summary>グラデーションにおいてグラデーション境界を表す色遷移の位置です。これは 0.0 から 1.0 までの値をとります。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.CellFillLinearGradient" /> で使用する場合、この値は、グラデーションの開始位置で 0.0、グラデーションの終了位置で 1.0 になります。<see cref="T:Infragistics.Documents.Excel.CellFillRectangularGradient" /> で使用する場合、この値は、セルのインナー矩形で 0.0、アウターの縁で 1.0 になります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary>Microsoft Excel のワークブックにおける色を表す不変オブジェクト。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.CellFillPattern.BackgroundColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.CellFillPattern.PatternColorInfo" />
            <seealso cref="P:Infragistics.Documents.Excel.CellFillGradientStop.ColorInfo" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(System.Drawing.Color)">
            <summary>Color を指定して <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を新規作成します。</summary>
            <param name="color">WorkbookColorInfo の使用時に表示する色。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color" /> は色がない状態か、不透明ではないアルファ チャネルがあります。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(System.Drawing.Color,System.Double)">
            <summary>Color と濃淡を指定して <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を新規作成します。</summary>
            <param name="color">WorkbookColorInfo の使用時に表示する基本色。</param>
            <param name="tint">基本色に適用する濃淡。-1.0 (暗度 100%) から 1.0 (明度 100%) までの値です。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="color" /> は色がない状態か、不透明ではないアルファ チャネルがあります。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="tint" /> に指定した値が、有効な指定範囲 (両端の値を含む -1.0 から 1.0 までの値範囲) から外れた値です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(Infragistics.Documents.Excel.WorkbookThemeColorType)">
            <summary>テーマ色を指定して <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を新規作成します。</summary>
            <param name="themeColorType">WorkbookColorInfo の使用時に表示するテーマ色のタイプ。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="themeColorType" />が<see cref="T:Infragistics.Documents.Excel.WorkbookThemeColorType" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.#ctor(Infragistics.Documents.Excel.WorkbookThemeColorType,System.Double)">
            <summary>テーマ色と濃淡を指定して <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を新規作成します。</summary>
            <param name="themeColorType">WorkbookColorInfo の使用時に基本色として使用するテーマ色のタイプ。</param>
            <param name="tint">基本色に適用する濃淡。-1.0 (暗度 100%) から 1.0 (明度 100%) までの値です。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="themeColorType" />が<see cref="T:Infragistics.Documents.Excel.WorkbookThemeColorType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="tint" /> に指定した値が、有効な指定範囲 (両端の値を含む -1.0 から 1.0 までの値範囲) から外れた値です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.ToString">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> の文字列表示を取得します。</summary>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Equality(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>2 つの <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> インスタンスが等しいかどうかを判定します。</summary>
            <param name="a">1 つめの WorkbookColorInfo インスタンス。</param>
            <param name="b">2 つめの WorkbookColorInfo インスタンス。</param>
            <returns>2 つの WorkbookColorInfo インスタンスが等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Inequality(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>2 つの <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> が異なるものであるかどうかを調べます。</summary>
            <param name="a">1 つめの WorkbookColorInfo インスタンス。</param>
            <param name="b">2 つめの WorkbookColorInfo インスタンス。</param>
            <returns>2 つの WorkbookColorInfo インスタンスが異なる場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Implicit(System.Drawing.Color)~Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary>Color から <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> へ変換します。</summary>
            <param name="color">WorkbookColorInfo に使用する色。</param>
            <returns>指定した色を含む WorkbookColorInfo。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.op_Implicit(Infragistics.Documents.Excel.WorkbookThemeColorType)~Infragistics.Documents.Excel.WorkbookColorInfo">
            <summary><see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" /> から <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> へ変換します。</summary>
            <param name="themeColorType">WorkbookColorInfo に使用するテーマ色タイプ。</param>
            <returns>指定したテーマ色タイプを含む WorkbookColorInfo。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を使用した場合に Microsoft Excel で表示されることになる実際の色を取得します。</summary>
            <exception cref="T:System.ArgumentNullException">
            <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" /> は、Null ではありません。ThemeColorType を設定した場合、<see cref="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor(Infragistics.Documents.Excel.Workbook)" /> メソッドを呼び出すときに <see cref="T:Infragistics.Documents.Excel.Workbook" /> を null 値以外の値に設定する必要があります。
            </exception>
            <returns><see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color" /> と <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint" /> を組み合わせた色が設定されている場合にはその色が表示されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorInfo.GetResolvedColor(Infragistics.Documents.Excel.Workbook)">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を使用した場合に Microsoft Excel で表示されることになる実際の色を取得します。</summary>
            <param name="workbook">WorkbookColorInfo が使用されるワークブック。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="workbook" /> が null 値で、<see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" /> が null 値ではありません。ThemeColorType を設定した場合、このメソッドを呼び出すときに <see cref="T:Infragistics.Documents.Excel.Workbook" /> を null 値以外の値に設定する必要があります。
            </exception>
            <returns>設定内容に応じて、<see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color" />/<see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" />/<see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint" /> を任意に組み合わせた色が表示されます。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic">
            <summary>ウィンドウ テキストのシステム色として自動的に生成される色を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.IsAutomatic" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> の関連付けられた基本色を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.IsAutomatic">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> が自動的に生成される色、つまり、ウィンドウ テキストのシステム色であるかどうかを示す値を取得します。</summary>
            <see cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Automatic" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType">
            <summary><see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> に関連付けられている基本テーマ色を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorInfo.Tint">
            <summary>基本色に適用する濃淡を取得します。これは、-1.0 (暗度 100%) から 1.0 (明度 100%) までの値として表されます。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.Color" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" />
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomView">
            <summary>Microsoft Excel のカスタム表示を表します。</summary>
            <remarks>
            <p class="body">カスタム表示は、表示オプションを保存する方法を提供し、オプションでワークブックおよびワークブックの各ワークシートのオプションを印刷します。これらのオプションは、ワークブックおよびワークシートで現在設定されているオプションで異なります。</p>
            <p class="body">複数のカスタム表示はワークブックで保存でき、カスタム表示のオプションは、その <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドを呼び出して関係するワークブックに適用できます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.Apply">
            <summary>関連するワークブックおよびそのワークシートにカスタム表示のすべてのオプションを適用します。</summary>
            <remarks>
            <p class="body">現在適用されているカスタム表示を示すワークブックの状態がないので、カスタム表示の適用は、単純にそれで保存されたすべてのオプションをワークブックおよびそのワークシートにコピーします。適用されたカスタム表示が変更されると、それらの変更はワークブックまたはワークシートで更新されません。その代わりに、カスタム表示は、ワークブックまたはワークシートで変更を半径するために再適用する必要があります。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            カスタム表示は、関係するワークブックから以前に削除されました。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートに関連付けられた表示オプションを取得します。</summary>
            <remarks>
            <p class="body">返された <see cref="T:Infragistics.Documents.Excel.DisplayOptions" /> インスタンスでプロパティを設定しても、ワークシートの実際の表示は変わりません。プロパティの設定後、<see cref="T:Infragistics.Documents.Excel.CustomView" /> の <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが変更内容をワークシートに適用します。</p>
            </remarks>
            <param name="worksheet">関連する表示オプションのワークシートが取得されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <returns>ワークシートがこのカスタム表示に関連するワークブックに属しない場合は null、そうでなければワークシートに関連する表示オプション。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートに関連付けられた非表示列を取得します。</summary>
            <remarks>
            <p class="body">返された <see cref="T:Infragistics.Documents.Excel.HiddenColumnCollection" /> インスタンスで列を追加しても、ワークシートの列が実際には非表示になることはありません。このコレクション内で非表示の列を変更した後、<see cref="T:Infragistics.Documents.Excel.CustomView" /> の <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが列の表示/非表示を変更します。</p>
            </remarks>
            <param name="worksheet">関連する非表示列のワークシートが取得されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <returns><see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns" /> が False またはワークシートがこのカスタム表示に関連するワークブックに属しない場合は null、そうでなければワークシートに関連する非表示列のコレクション。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートに関連付けられた非表示行を取得します。</summary>
            <remarks>
            <p class="body">返された <see cref="T:Infragistics.Documents.Excel.HiddenRowCollection" /> インスタンスで行を追加しても、ワークシートの行が実際に非表示になることはありません。このコレクション内で非表示の行を変更した後、<see cref="T:Infragistics.Documents.Excel.CustomView" /> の <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが行の表示/非表示を変更します。</p>
            </remarks>
            <param name="worksheet">関連する非表示行のワークシートが取得されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <returns><see cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns" /> が False またはワークシートがこのカスタム表示に関連するワークブックに属しない場合は null、そうでなければワークシートに関連する非表示行のコレクション。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートに関連付けられた印刷オプションを取得します。</summary>
            <remarks>
            <p class="body">返される <see cref="T:Infragistics.Documents.Excel.PrintOptions" /> インスタンスでプロパティを設定しても、ワークシートの印刷設定が実際に変更されることはありません。プロパティの設定後、<see cref="T:Infragistics.Documents.Excel.CustomView" /> の <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが変更内容をワークシートに適用します。</p>
            </remarks>
            <param name="worksheet">関連する印刷オプションのワークシートが取得されます。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <returns><see cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions" /> が False またはワークシートがこのカスタム表示に関連するワークブックに属しない場合は null、そうでなければワークシートに関連する印刷オプション。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.Name">
            <summary>カスタム表示の名前を取得または設定します。</summary>
            <remarks>
            <p class="body">カスタム表示の名前は Microsoft Excel のカスタム表示ダイアログに表示され、ワークブックの他のカスタム表示に対して大文字と小文字を識別しない一意でなければなりません。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            割り当てた値が null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定される値は、このカスタム表示の関連するワークブック (カスタム表示名は大文字と小文字を区別せずに比較される) の他のカスタム表示の名前になります。
            </exception>
            <value>カスタム表示の名前です。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.SaveHiddenRowsAndColumns">
            <summary>非表示行および列設定がカスタム表示で保存されるかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">この値が False の場合、指定されたワークシートに関係なく、<see cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet)" /> および <see cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet)" /> の戻り値は常に null になります。</p>
            </remarks>
            <value>非表示行および列設定がカスタム表示で保存されるかどうかを示す値。</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="T:Infragistics.Documents.Excel.HiddenColumnCollection" />
            <seealso cref="T:Infragistics.Documents.Excel.HiddenRowCollection" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.SavePrintOptions">
            <summary>印刷オプションがカスタム表示で保存されるかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">この値が False の場合、指定されたワークシートに関係なく、<see cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet)" /> の戻り値は常に null になります。</p>
            </remarks>
            <value>印刷オプションがカスタム表示で保存されるかどうかを示す値。</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="T:Infragistics.Documents.Excel.PrintOptions" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomView.WindowOptions">
            <summary>カスタム表示に関連するワークブックのウィンドウ オプションを取得します。</summary>
            <remarks>
            <p class="body">返された <see cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions" /> インスタンスでプロパティを設定しても、関連するワークブックのウィンドウ オプションが実際に変更されることはありません。プロパティの設定後、<see cref="T:Infragistics.Documents.Excel.CustomView" /> の <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが変更内容をワークブックに適用します。</p>
            </remarks>
            <value>カスタム表示に関連するワークブックのウィンドウ オプション。</value>
            <seealso cref="T:Workbook.WindowOptions" />
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewDisplayOptions">
            <summary>カスタム表示からのみの制御が可能なワークシート表示オプションを公開するクラス。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDisplayOptions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewDisplayOptions.ResetCore">
            <summary>表示オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView">
            <summary>現在の <see cref="P:Infragistics.Documents.Excel.DisplayOptions.View" /> のワークシートの拡大レベルを取得または設定します。</summary>
            <remarks>
            <p class="body">拡大率は、通常の表示拡大率のパーセントとして保存されます。100 の値は標準の拡大率を示し、200 の値は標準の表示サイズの 2 倍にズームされることを示します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された値は、ワークシートの拡大率レベルの有効範囲の外です。レベルは 10 から 400 の間にある必要があります
            </exception>
            <value>現在の View のワークシートの拡大レベル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView" />
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewCollection">
            <summary>ワークシートの <see cref="T:Infragistics.Documents.Excel.CustomView" /> インスタンスのコレクション。</summary>
            <see cref="P:Infragistics.Documents.Excel.Workbook.CustomViews" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Add(System.String,System.Boolean,System.Boolean)">
            <summary>コレクションに新規のカスタム表示を追加します。</summary>
            <param name="name">新しく作成されたカスタム表示に付けられる名前。</param>
            <param name="savePrintOptions">カスタム表示で各ワークシートに対する印刷オプションを保存する場合は True、そうでなければ False。</param>
            <param name="saveHiddenRowsAndColumns">カスタム表示で各ワークシートに対する非表示の行および列についての情報を保存する場合は True、そうでなければ False。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> が null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> はコレクションの他のカスタム表示の名前です (カスタム表示名は、大文字と小文字を区別せずに比較されます)。
            </exception>
            <returns>新規作成された <see cref="T:Infragistics.Documents.Excel.CustomView" /> インスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Clear">
            <summary>このコレクションからすべてのカスタム表示をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Contains(Infragistics.Documents.Excel.CustomView)">
            <summary>カスタム表示がこのコレクションにあるかどうかを決定します。</summary>
            <param name="customView">このコレクションで指定するためのカスタム表示。</param>
            <returns>カスタム表示が見つかる場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.Remove(Infragistics.Documents.Excel.CustomView)">
            <summary>指定したカスタム表示をコレクションから削除します。</summary>
            <param name="customView">コレクションから削除するカスタム表示。</param>
            <returns>カスタム表示の削除が成功した場合は True、カスタム表示がコレクションになかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewCollection.RemoveAt(System.Int32)">
            <summary>コレクションから指定したインデックスにあるカスタム表示を削除します。</summary>
            <param name="index">コレクションでカスタム表示の 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.CustomViewCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewCollection.Count">
            <summary>コレクションのカスタム表示数を取得します。</summary>
            <value>コレクションのカスタム表示数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewCollection.Item(System.Int32)">
            <summary>指定したインデックスにあるカスタム表示を取得します。</summary>
            <param name="index">取得するためのカスタム表示の 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.CustomViewCollection.Count" /> 以上です。
            </exception>
            <value>指定したインデックスにあるカスタム表示。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomViewWindowOptions">
            <summary>カスタム表示で保存されるワークブックのウィンドウ オプションを表します。</summary>
            <remarks>
            <p class="body">このクラスで明示的に定義され、基本クラスから継承されていないプロパティである <see cref="T:Infragistics.Documents.Excel.WindowOptions" /> は、カスタム表示で保存可能ですがワークブックでは保存できないなオプションです。したがって、これらのプロパティは <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> メソッドが呼び出されると適用されません。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.CustomView.WindowOptions" />
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WindowOptions">
            <summary>ワークブックとカスタム表示の両方で保存できるさまざまなワークブック ウィンドウ オプションを公開する抽象基本クラス。</summary>
            <remarks>
            <p class="body">このクラスは、Microsoft Excel で表示した時にどのようにワークブックが表示されるかを制御する方法を提供します。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" />
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WindowOptions.Reset">
            <summary>ウィンドウ オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.ObjectDisplayStyle">
            <summary>オブジェクトおよび形状がワークブックに表示される方法を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.WindowOptions.ObjectDisplayStyle" /> 列挙体で定義されていません。
            </exception>
            <value>オブジェクトおよび形状がワークブックに表示される方法。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetShape" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Shapes" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars">
            <summary>ワークブック ウィンドウで表示されるスクロール バーを取得または設定します。</summary>
            <remarks>
            <p class="body">垂直スクロール バーは、表示可能な場合、アプリケーションの高さ全体を占有します。</p>
            <p class="body">垂直スクロール バーは、表示可能な場合、ワークシートのタブ バーで使用されないアプリケーションの幅を占有します。そうでなければ、アプリケーションの幅全体を占有します。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars" /> 列挙体で定義されていません。
            </exception>
            <value>ワークブック ウィンドウで表示されるスクロール バー。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth" />
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet">
            <summary>ワークブックの選択したワークシートを取得または設定します。</summary>
            <remarks>
            <p class="body">これが <see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" /> のインスタンスであり、SelectedWorksheet 値が null である場合、ワークブックの選択されたワークシートは、関連する <see cref="T:Infragistics.Documents.Excel.CustomView" /> が適用される時は変更されません。</p>
            <p class="note"><B>注:</B> 選択したワークシートが、そのワークブックが保存される時に Visible に設定された <see cref="P:Infragistics.Documents.Excel.DisplayOptions.Visibility" /> を持たない場合、他のワークシートが選択されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            割り当てられた値が null であり、かつ、これが、少なくとも 1 つの <see cref="T:Infragistics.Documents.Excel.Worksheet" /> を持つ  <see cref="P:Infragistics.Documents.Excel.WindowOptions.Workbook" /> に関連付けられている<see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" /> のインスタンスです。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てた値がこの <see cref="T:Infragistics.Documents.Excel.WindowOptions" /> インスタンスに関連付けられたワークブックに含まれていません。
            </exception>
            <value>ワークブックの選択したワークシート。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible">
            <summary>ワークシート タブ バーが表示可能であるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値が False の場合、<see cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth" /> は使用されませんが、ワークブックでシリアル化されることに変わりはありません。</p>
            </remarks>
            <value>ワークシート タブ バーが表示可能であるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth">
            <summary>ワークシート タブ バーの幅を取得または設定し、アプリケーションの幅の 1/1000 で表現します。</summary>
            <remarks>
            <p class="body">この値は、<see cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible" /> が true である場合にのみ使用されます。タブ バーが表示可能であるかどうかに関係なく、幅の値は常にワークブックで保存されます。</p>
            <p class="body">1000 の値は、ワークシート タブ バーがアプリケーションの幅全体を占有することを示し、0 の値はワークシート タブ バーに幅が存在しないことを示します。</p>
            <p class="body">ワークシート タブ バーで占有されないすべてのスペースは、それが表示可能である場合、水平スクロール バーによって使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 1000 の有効範囲の外です。
            </exception>
            <value>ワークシート タブ バーの幅で、アプリケーションの幅の 1/1000 で表現します。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible" />
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.ScrollBars" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomViewWindowOptions.Reset">
            <summary>ウィンドウ オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.BoundsInPixels">
            <summary>これらのウィンドウ オプションが所有する <see cref="T:Infragistics.Documents.Excel.CustomView" /> が適用される場合、ワークブックの MDI 子ウィンドウのピクセル境界線を取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> このプロパティは <see cref="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized" /> が True の場合、ワークブックに影響を持ちません。ただし、この場合、このプロパティの値はワークブックで保存されます。</p>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.Workbook" /> で保存できません。これは CustomView に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" /> に対応するプロパティはなく、関連する CustomView での <see cref="T:CustomView.Apply" /> の呼び出しは、このプロパティに適用されません。Microsoft Excel ユーザー インタフェースを通してカスタム表示を適用することによってのみ、このプロパティの設定が適用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定される値の左または上は、-32768 および 32767 の境界の外です。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定される値の幅または高さは、0 および 65535 の境界の外です。
            </exception>
            <value>
            これらのウィンドウ オプションが所有する CustomView が適用される場合、ワークブックの MDI 子ウィンドウのピクセル境界線。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized">
            <summary>これらのウィンドウ オプションが所有する <see cref="T:Infragistics.Documents.Excel.CustomView" /> が適用される場合、ワークブックの MDI 子ウィンドウが最大化されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.Workbook" /> で保存できません。これは CustomView に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" /> に対応するプロパティはなく、関連する CustomView での <see cref="T:CustomView.Apply" /> の呼び出しは、このプロパティに適用されません。Microsoft Excel ユーザー インタフェースを通してカスタム表示を適用することによってのみ、このプロパティの設定が適用されます。</p>
            </remarks>
            <value>
            これらのウィンドウ オプションが所有する CustomView が適用される場合、ワークブックの MDI 子ウィンドウが最大化されるかどうかを示す値。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookWindowOptions.Minimized" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.ShowFormulaBar">
            <summary>これらのウィンドウ オプションが所有する <see cref="T:Infragistics.Documents.Excel.CustomView" /> が適用される場合、Microsoft Excel が数式バーを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.Workbook" /> で保存できません。これは CustomView に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" /> に対応するプロパティはなく、関連する CustomView での <see cref="M:Infragistics.Documents.Excel.CustomView.Apply" /> の呼び出しは、このプロパティに適用されません。Microsoft Excel ユーザー インタフェースを通してカスタム表示を適用することによってのみ、このプロパティの設定が適用されます。</p>
            </remarks>
            <value>
            これらのウィンドウ オプションが所有する CustomView が適用される場合、Microsoft Excel が数式バーを表示するかどうかを示す値。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply" />
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomViewWindowOptions.ShowStatusBar">
            <summary>これらのウィンドウ オプションが所有する <see cref="T:Infragistics.Documents.Excel.CustomView" /> が適用される場合、Microsoft Excel がステータス バーを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.Workbook" /> で保存できません。これは CustomView に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.WorkbookWindowOptions" /> に対応するプロパティはなく、関連する CustomView での <see cref="T:CustomView.Apply" /> の呼び出しは、このプロパティに適用されません。Microsoft Excel ユーザー インタフェースを通してカスタム表示を適用することによってのみ、このプロパティの設定が適用されます。</p>
            </remarks>
            <value>
            これらのウィンドウ オプションが所有する CustomView が適用される場合、Microsoft Excel がステータスバーを表示するかどうかを示す値。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.Apply" />
        </member>
        <member name="T:Infragistics.Documents.Excel.AnyValueDataValidationRule">
            <summary>任意の値のターゲット セルへの設定を許可するデータの入力規則ルールを表します。これは、セルが選択されたときにユーザーに入力メッセージを表示するために使用します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.AnyValueDataValidationRule.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomDataValidationRule">
            <summary>セルに適用された値を検証するために任意の数式を使用できるデータの入力規則ルールを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.LimitedValueDataValidationRule">
            <summary>特定の値のセルへの適用を禁止する、すべてのデータの入力規則の基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
        </member>
        <member name="P:Infragistics.Documents.Excel.LimitedValueDataValidationRule.AllowNull">
            <summary>null または空白の値をセルに設定できるかどうかを示す値を取得または設定します。</summary>
            <value>null 値をセルに設定できる場合は True、そうでない場合は False。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)">
            <summary>セルに適用された値を検証するために使用する数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">数式の評価結果が False、0、<see cref="T:Infragistics.Documents.Excel.ErrorValue" /> (#VALUE! など)、または「True」(大文字と小文字は区別しません) 以外の文字列の場合、値が無効であることを示します。True、「True」(大文字と小文字は区別しません)、null、およびゼロ以外の数値は、有効な値が適用されたことを示します。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セルに適用された値を検証するために使用する数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を生成するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">数式の評価結果が False、0、<see cref="T:Infragistics.Documents.Excel.ErrorValue" /> (#VALUE! など)、または「True」(大文字と小文字は区別しません) 以外の文字列の場合、値が無効であることを示します。True、「True」(大文字と小文字は区別しません)、null、およびゼロ以外の数値は、有効な値が適用されたことを示します。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String)">
            <summary>セルに適用される値を検証するために使用する数式を設定します。</summary>
            <param name="formula">ルールに使用する検証式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">数式の評価結果が False、0、<see cref="T:Infragistics.Documents.Excel.ErrorValue" /> (#VALUE! など)、または「True」(大文字と小文字は区別しません) 以外の文字列の場合、値が無効であることを示します。True、「True」(大文字と小文字は区別しません)、null、およびゼロ以外の数値は、有効な値が適用されたことを示します。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="formula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セルに適用される値を検証するために使用する数式を設定します。</summary>
            <param name="formula">ルールに使用する検証式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を解析するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">数式の評価結果が False、0、<see cref="T:Infragistics.Documents.Excel.ErrorValue" /> (#VALUE! など)、または「True」(大文字と小文字は区別しません) 以外の文字列の場合、値が無効であることを示します。True、「True」(大文字と小文字は区別しません)、null、およびゼロ以外の数値は、有効な値が適用されたことを示します。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="formula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.GetFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomDataValidationRule.SetFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationRuleCollection">
            <summary>ワークシートの <see cref="T:Infragistics.Documents.Excel.DataValidationRule" /> インスタンスのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>データの入力規則ルールを一連の参照に適用します。</summary>
            <param name="rule">一連の参照に適用するデータの入力規則ルール。</param>
            <param name="references">このデータの入力規則ルールを適用する参照。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> の中の 1 つ以上のセルがテーブルの集計行内にある場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)">
            <summary>データの入力規則ルールを一連の参照に適用します。</summary>
            <param name="rule">一連の参照に適用するデータの入力規則ルール。</param>
            <param name="references">このデータの入力規則ルールを適用する参照。</param>
            <param name="overwriteExistingRules">参照コレクション内の、すでにデータの入力規則ルールがあるセルのルールを上書きするかどうかを示します。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="overwriteExistingRules" /> が False で、<paramref name="references" /> コレクションの中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> の中の 1 つ以上のセルがテーブルの集計行内にある場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary><see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> に適用します。</summary>
            <param name="rule">セルに適用するデータの入力規則ルール。</param>
            <param name="cell">このデータの入力規則ルールを適用するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> にすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> がテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.AnyValueDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary><see cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> 内のセルに適用します。</summary>
            <param name="rule">領域に適用するデータの入力規則ルール。</param>
            <param name="region">データの入力規則ルールを適用する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルがテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary><see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> に適用します。</summary>
            <param name="rule">セルに適用するデータの入力規則ルール。</param>
            <param name="cell">このデータの入力規則ルールを適用するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> にすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> がテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.CustomDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary><see cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> 内のセルに適用します。</summary>
            <param name="rule">領域に適用するデータの入力規則ルール。</param>
            <param name="region">データの入力規則ルールを適用する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルがテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary><see cref="T:Infragistics.Documents.Excel.ListDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> に適用します。</summary>
            <param name="rule">セルに適用するデータの入力規則ルール。</param>
            <param name="cell">このデータの入力規則ルールを適用するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> にすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> がテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary><see cref="T:Infragistics.Documents.Excel.ListDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> 内のセルに適用します。</summary>
            <param name="rule">領域に適用するデータの入力規則ルール。</param>
            <param name="region">データの入力規則ルールを適用する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルがテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary><see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> に適用します。</summary>
            <param name="rule">セルに適用するデータの入力規則ルール。</param>
            <param name="cell">このデータの入力規則ルールを適用するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> にすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> がテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary><see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> 内のセルに適用します。</summary>
            <param name="rule">領域に適用するデータの入力規則ルール。</param>
            <param name="region">データの入力規則ルールを適用する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルがテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)">
            <summary><see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> に適用します。</summary>
            <param name="rule">セルに適用するデータの入力規則ルール。</param>
            <param name="cell">このデータの入力規則ルールを適用するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> にすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> がテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary><see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" /> を <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> 内のセルに適用します。</summary>
            <param name="rule">領域に適用するデータの入力規則ルール。</param>
            <param name="region">データの入力規則ルールを適用する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rule" /> がすでに別のワークシートに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に元づいて <paramref name="rule" /> が無効な場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルにすでにデータの入力規則ルールが適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> の中の 1 つ以上のセルがテーブルの集計セルである場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Clear">
            <summary>すべてのデータの入力規則ルールを <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> から削除します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>指定したデータの入力規則ルールが <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> に存在するかどうかを判定します。</summary>
            <param name="rule">テストするルール。</param>
            <returns>ワークシートの 1 つ以上のセルにルールが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したセルにデータの入力規則ルールが適用されているかどうかを判定します。</summary>
            <param name="cell">テストするセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>セルにデータの入力規則ルールが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>指定した参照コレクションのいずれかのセルにデータの入力規則ルールが適用されているかどうかを判定します。</summary>
            <param name="references">テストする参照コレクション。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>参照コレクションのいずれかのセルにデータの入力規則ルールが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>指定した領域のいずれかのセルにデータの入力規則ルールが適用されているかどうかを判定します。</summary>
            <param name="region">テストする領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>領域のいずれかのセルにデータの入力規則ルールが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.FindRule(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したセルに適用されているデータの入力規則ルールを探します。</summary>
            <param name="cell">テストするセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns><see cref="T:Infragistics.Documents.Excel.DataValidationRule" /> から派生したインスタンスか、セルにルールが適用されていない場合は null。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>指定したルールを <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> から削除します。</summary>
            <param name="rule">削除するルール。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <returns>削除前にルールが Worksheet に含まれていた場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>データの入力規則ルールが適用されている場合、セルから削除します。</summary>
            <remarks>
            <p class="body">ルールが指定したセルのみに適用されている場合、ルールはコレクションから削除されます。</p>
            </remarks>
            <param name="cell">データの入力規則ルールをクリアするセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>データの入力規則ルールが見つかりセルから削除された場合は True、セルにデータの入力規則ルールが適用されていない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetReferenceCollection)">
            <summary>指定したコレクションのすべてのセルからデータの入力規則ルールを削除します。</summary>
            <remarks>
            <p class="body">この操作の後、コレクション中のいずれかのルールがどのセルにも適用されていない場合、そのルールはコレクションから削除されます。</p>
            </remarks>
            <param name="references">データの入力規則ルールをクリアするコレクション参照。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="references" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>データの入力規則ルールが見つかりコレクション中のいずれかのセルから削除された場合は True、セルにデータの入力規則ルールが適用されていない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>指定した領域のすべてのセルからデータの入力規則ルールを削除します。</summary>
            <remarks>
            <p class="body">この操作の後、コレクション中のいずれかのルールがどのセルにも適用されていない場合、そのルールはコレクションから削除されます。</p>
            </remarks>
            <param name="region">データの入力規則ルールをクリアする領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、このコレクション以外のワークシートにある場合に発生します。
            </exception>
            <returns>データの入力規則ルールが見つかり領域中のいずれかのセルから削除された場合は True、領域にデータの入力規則ルールが適用されていない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DataValidationRuleCollection.TryGetReferences(Infragistics.Documents.Excel.DataValidationRule,Infragistics.Documents.Excel.WorksheetReferenceCollection@)">
            <summary>指定したルールが適用されている参照を取得します。<see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> でルールが使用されていない場合は null を返します。</summary>
            <param name="rule">テストするルール。</param>
            <param name="references">[出力] このメソッドが返すとき、ルールが適用された参照が格納されます。ワークシートにルールが適用されていない場合は null が格納されます。</param>
            <returns>ワークシートにルールが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Count">
            <summary><see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> に適用されているデータの入力規則ルールの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Item(Infragistics.Documents.Excel.DataValidationRule)">
            <summary>データの入力規則ルールが適用されている参照を取得または設定します</summary>
            <param name="rule">データの入力規則ルール。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="rule" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">
            プロパティが取得され、<paramref name="rule" /> が <see cref="P:Infragistics.Documents.Excel.DataValidationRuleCollection.Worksheet" /> に適用されていない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            プロパティが設定され、値がこのコレクション以外のワークシートからのものである場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            プロパティが設定されており、<paramref name="rule" /> がそのルール タイプの要件に基づいて無効な場合に発生します。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationCriteria">
            <summary>どのようなタイプのセル値が許可されるかと、制約に対してセル値が検証される方法を決定します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.WholeNumber">
            <summary>メンバーのみが許可され、小数部があってはなりません。制約に対して比較するとき、セル値が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Decimal">
            <summary>数値のみが許可されます。制約に対して比較するとき、セル値が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Date">
            <summary>時刻部分の有無に関係なく、有効な日付と同等の数値が許可されます。制約に対して比較するとき、セル値が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.Time">
            <summary>時刻と、日付部分のない有効な時刻と同等の数値が許可されます。制約に対して比較するとき、セル値が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationCriteria.TextLength">
            <summary>エラーのない値が許可されます。制約に対して比較するとき、セル値のテキスト相当の長さが使用されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DataValidationErrorStyle">
            <summary>無効な値が Microsoft Excel で扱われるさまざまなスタイルを表します。無効な値についてエラー メッセージが表示されない場合、エラー スタイルは無視され、すべての無効な値をセルに設定することが許可されます。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ErrorStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.DataValidationRule.ShowErrorMessageForInvalidValue" />
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Stop">
            <summary>無効な値は許可されません。Microsoft Excel で表示されるエラー ダイアログには、エラー アイコンと、再試行ボタンおよびキャンセル ボタンが表示されます。再試行ボタンをクリックすると、セルにフォーカスが戻り、新しい値を入力できます。キャンセル ボタンをクリックすると、編集がキャンセルされ、セルに編集操作前に格納されていた値が復元されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Warning">
            <summary>無効な値は許可されます。Microsoft Excel で表示されるエラー ダイアログには、警告アイコンが表示され、続行するかどうかが質問され、「はい」、「いいえ」、キャンセル ボタンが表示されます。「はい」ボタンをクリックすると値がセルにコミットされます。「いいえ」ボタンをクリックすると、セルにフォーカスが戻り、新しい値を入力できます。キャンセル ボタンをクリックすると、編集がキャンセルされ、セルに編集操作前に格納されていた値が復元されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DataValidationErrorStyle.Information">
            <summary>無効な値は許可されます。Microsoft Excel で表示されるエラー ダイアログには、情報アイコンと、「OK」ボタンおよびキャンセル ボタンが表示されます。「OK」ボタンをクリックすると値がセルにコミットされます。キャンセル ボタンをクリックすると、編集がキャンセルされ、セルに編集操作前に格納されていた値が復元されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator">
            <summary>セル値を制約に対して検証するときに使用できるさまざまな演算を表します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.EqualTo">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約と等しい場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.NotEqualTo">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約と等しくない場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.GreaterThan">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約よりも大きい場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.GreaterThanOrEqualTo">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約よりも大きいか等しい場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.LessThan">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約よりも小さい場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.OneConstraintDataValidationOperator.LessThanOrEqualTo">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約よりも小さいか等しい場合にのみ、セル値を許可します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator">
            <summary>セル値を 2 つの制約に対して検証するときに使用できるさまざまな演算を表します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="F:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator.Between">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約の間に収まっている場合にのみ、セル値を許可します。制約値自身が含まれます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator.NotBetween">
            <summary>セル値またはそのテキスト長が、検証条件に基づいて、検証ルールに適用されている制約の間に収まっていない場合にのみ、セル値を許可します。制約値自身は含まれません。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ListDataValidationRule">
            <summary>指定可能な値のリストに含まれている値のセルへの適用を許可するデータの入力規則ルールを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.ListDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.ListDataValidationRule" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)">
            <summary>指定可能な値を指定する数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">これは指定可能な値のリストが格納された文字列か、同じブック内の指定可能な値が格納されたセルまたは領域の参照です。</p>
            <p class="body">数式が文字列に等しい場合、=「A,B,C」のように、指定可能な値のリストです。いずれかの値に二重引用符 (&quot;) が含まれる場合、=&quot;A,&quot;&quot;B&quot;&quot;,C&quot; のように、リスト中で二重引用符を繰り返します。これは、値 A、&quot;B&quot;、および C を許可します。現在のカルチャーの小数点記号がカンマ (,) でない限り、値の区切り文字はカンマです。現在のカルチャーの小数点記号がカンマである場合は、区切り文字はセミコロン (;) です。</p>
            <p class="body">数式が 1 つ以上の参照に等しい場合、同じブック内の 1 つのセルまたは領域の参照になります。和集合、論理積、範囲演算子は許可されません。数式は、=$A$1 または =Sheet2!$A$1:$A$5 のようになります。1 つのセルまたは領域を参照している場合、1 つのセルまたは領域に加えて、名前付き参照も使用できます。領域が指定された場合や、領域を参照する名前付き参照が指定された場合、領域は 1 つの行または列で構成されます。エラー値に等しい数式も返すことができますが、セルはいずれの値も受け入れず、ドロップ ダウンは空になるため、あまり有用ではありません。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>指定可能な値を指定する数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を生成するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">これは指定可能な値のリストが格納された文字列か、同じブック内の指定可能な値が格納されたセルまたは領域の参照です。</p>
            <p class="body">数式が文字列に等しい場合、=「A,B,C」のように、指定可能な値のリストです。いずれかの値に二重引用符 (&quot;) が含まれる場合、=&quot;A,&quot;&quot;B&quot;&quot;,C&quot; のように、リスト中で二重引用符を繰り返します。これは、値 A、&quot;B&quot;、および C を許可します。現在のカルチャーの小数点記号がカンマ (,) でない限り、値の区切り文字はカンマです。現在のカルチャーの小数点記号がカンマである場合は、区切り文字はセミコロン (;) です。</p>
            <p class="body">数式が 1 つ以上の参照に等しい場合、同じブック内の 1 つのセルまたは領域の参照になります。和集合、論理積、範囲演算子は許可されません。数式は、=$A$1 または =Sheet2!$A$1:$A$5 のようになります。1 つのセルまたは領域を参照している場合、1 つのセルまたは領域に加えて、名前付き参照も使用できます。領域が指定された場合や、領域を参照する名前付き参照が指定された場合、領域は 1 つの行または列で構成されます。エラー値に等しい数式も返すことができますが、セルはいずれの値も受け入れず、ドロップ ダウンは空になるため、あまり有用ではありません。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])">
            <summary>セルが受け付けることができる指定可能な値のリストを設定します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.LimitedValueDataValidationRule.AllowNull" /> が True の場合、指定可能な値のリストの他に、null 値が許可されます。</p>
            <p class="body">指定可能な値のリストを数式に変換するため、すべての値に対して ToString が呼び出されます。</p>
            <p class="note"><b>注記:</b> 指定可能な値の数式は、関数パラメーター セパレーターを使用して各値を分離し、1 つの文字列に連結することで作成されます。そのため、1、2、3 のリストに対しては数式 =&quot;1,2,3&quot; が作成されます。ただし、現在のカルチャーの小数点記号がカンマ (,) の場合、値を区切るために、代わりにセミコロンが使用されます。このため、値の ToString がこれらの区切り文字のいずれかを含む文字列を返す場合、値は 2 つ以上の指定可能な値に分割されます。</p>
            </remarks>
            <param name="values">指定可能な値のリスト。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="values" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="values" /> 配列が空の場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)">
            <summary>指定可能な値を指定する数式を設定します。</summary>
            <param name="valuesFormula">ルールの指定可能な値を提供する数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">数式は指定可能な値のリストが格納された文字列か、同じブック内の指定可能な値が格納されたセルまたは領域の参照である必要があります。</p>
            <p class="body">文字列に等しい数式が指定された場合、文字列リテラルでなくてはならず、連結できません。たとえば、指定可能な数式は =&quot;A,B,C&quot; です。いずれかの値に二重引用符 (&quot;) が含まれる場合、=&quot;A,&quot;&quot;B&quot;&quot;,C&quot; のように、リスト中で二重引用符を繰り返します。これは、値 A、&quot;B&quot;、および C を許可します。現在のカルチャーの小数点記号がカンマ (,) でない限り、値の区切り文字はカンマである必要があります。現在のカルチャーの小数点記号がカンマである場合は、区切り文字はセミコロン (;) である必要があります。</p>
            <p class="body">1 つ以上の参照に等しい数式が指定された場合、同じブック内の 1 つのセルまたは領域の参照である必要があります。和集合、論理積、範囲演算子は許可されません。指定可能な数式は =$A$1 または =Sheet2!$A$1:$A$5 のようになります。1 つのセルまたは領域を参照している場合、1 つのセルまたは領域に加えて、名前付き参照も使用できます。領域が指定された場合や、領域を参照する名前付き参照が指定された場合、領域は 1 つの行または列で構成されている必要があります。エラー値に等しい数式も許可されますが、セルはいずれの値も受け入れず、ドロップ ダウンは空になるため、あまり有用ではありません。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="valuesFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="valuesFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値に文字または参照以外のものが含まれている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値に、複数の行と列がある領域参照が含まれている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>指定可能な値を指定する数式を設定します。</summary>
            <param name="valuesFormula">ルールの指定可能な値を提供する数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を解析するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">数式は指定可能な値のリストが格納された文字列か、同じブック内の指定可能な値が格納されたセルまたは領域の参照である必要があります。</p>
            <p class="body">文字列に等しい数式が指定された場合、文字列リテラルでなくてはならず、連結できません。たとえば、指定可能な数式は =&quot;A,B,C&quot; です。いずれかの値に二重引用符 (&quot;) が含まれる場合、=&quot;A,&quot;&quot;B&quot;&quot;,C&quot; のように、リスト中で二重引用符を繰り返します。これは、値 A、&quot;B&quot;、および C を許可します。現在のカルチャーの小数点記号がカンマ (,) でない限り、値の区切り文字はカンマである必要があります。現在のカルチャーの小数点記号がカンマである場合は、区切り文字はセミコロン (;) である必要があります。</p>
            <p class="body">1 つ以上の参照に等しい数式が指定された場合、同じブック内の 1 つのセルまたは領域の参照である必要があります。和集合、論理積、範囲演算子は許可されません。指定可能な数式は =$A$1 または =Sheet2!$A$1:$A$5 のようになります。1 つのセルまたは領域を参照している場合、1 つのセルまたは領域に加えて、名前付き参照も使用できます。領域が指定された場合や、領域を参照する名前付き参照が指定された場合、領域は 1 つの行または列で構成されている必要があります。エラー値に等しい数式も許可されますが、セルはいずれの値も受け入れず、ドロップ ダウンは空になるため、あまり有用ではありません。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="valuesFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="valuesFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値に文字または参照以外のものが含まれている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値に、複数の行と列がある領域参照が含まれている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.GetValuesFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ListDataValidationRule.TryGetValues(System.Object[]@)">
            <summary>制約の値の取得を試みます。</summary>
            <remarks>
            <p class="body">値のリストは、<see cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValues(System.Object[])" /> メソッドで設定されるか、いずれかの SetValuesFormula メソッドで数式が適用され、数式が、=&quot;A,B,C&quot; のように、値のリストからなる定数文字列に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="values">メソッドが返るとき、値の配列か、値のリストを取得できない場合は null になります。</param>
            <returns>値のリストを取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ListDataValidationRule.SetValuesFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.ListDataValidationRule.ShowDropdown">
            <summary>指定可能な値のリストが格納されたドロップ ダウンを Microsoft Excel で表示する必要があるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">True の場合、セルを選択したときに、ドロップ ダウン矢印がセルの横に表示されます。ユーザーがドロップ ダウン矢印をクリックすると、ドロップ ダウンに指定可能な値のリストが表示されます。</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule">
            <summary>単一の制約値または数式に対してセルの値を検証するデータの入力規則ルールを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.OneConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator" />
        </member>
        <member name="T:Infragistics.Documents.Excel.ValueConstraintDataValidationRule">
            <summary>セル値の有効性を判定するときにセル値を 1 つ以上の制約と比較する、すべてのデータの入力規則ルールの基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
        </member>
        <member name="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria">
            <summary>セル値を制約に対して検証するときに使用する条件を取得または設定します。</summary>
            <remarks>
            <p class="body">指定した値に応じて、セル値またはそれに相当するテキストの長さが制約に対して比較されます。また、特定の ValidationCriteria 値は、制約と比較するときに、セル値が有効であっても拒否することがあります。たとえば、ValidationCriteria.WholeNumber 値は、小数部分がある数値を許可しません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            値が <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria" /> 列挙体のメンバーでない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.#ctor(Infragistics.Documents.Excel.OneConstraintDataValidationOperator,Infragistics.Documents.Excel.DataValidationCriteria)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" /> インスタンスを作成します。</summary>
            <param name="validationOperator">セル値を制約値と比較するときに使用する演算子。</param>
            <param name="validationCriteria">セル値を検証するときに使用する条件。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="validationCriteria" /> が <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria" /> 列挙体のメンバーでない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)">
            <summary>セル値を検証するために使用する制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約数式の値と比較されます。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を生成するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約数式の値と比較されます。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)">
            <summary>セル値を検証するために使用する制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約値と比較されます。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が WholeNumber、Decimal、または TextLength の場合に優先されます。ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する制約値。</param>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)">
            <summary>セル値を検証するために使用する制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約値と比較されます。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Date の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する制約値。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> を Excel で日付として表現できない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)">
            <summary>セル値を検証するために使用する制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約値と比較されます。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Time の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する制約値。</param>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)">
            <summary>セル値を検証するために使用する制約数式を設定します。</summary>
            <param name="constraintFormula">ルールに使用する検証式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約数式の値と比較されます。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="constraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する制約数式を設定します。</summary>
            <param name="constraintFormula">ルールに使用する検証式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を解析するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが制約数式の値と比較されます。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="constraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="constraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)">
            <summary>制約の値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetConstraint メソッドで制約値が設定されているか、いずれかの SetConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は 0 になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)">
            <summary>制約の値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetConstraint メソッドで制約値が設定されているか、いずれかの SetConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は DateTime.MinValue になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.TimeSpan@)">
            <summary>制約の値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetConstraint メソッドで制約値が設定されているか、いずれかの SetConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は TimeSpan.Zero になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.TryGetConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.OneConstraintDataValidationRule.ValidationOperator">
            <summary>セル値を制約値または数式に対して比較するときに使用する検証演算子を取得または設定します。</summary>
            <remarks>
            <p class="body">ルールの <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> に応じて、セル値自体またはセル値に相当するテキストの長さが制約値または数式と比較されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            値が <see cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationOperator" /> 列挙体のメンバーでない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.GetConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.OneConstraintDataValidationRule.SetConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule">
            <summary>2 つの制約値または数式に対してセルの値を検証するデータの入力規則ルールを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.DataValidationRuleCollection.Add(Infragistics.Documents.Excel.TwoConstraintDataValidationRule,Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.#ctor(Infragistics.Documents.Excel.TwoConstraintDataValidationOperator,Infragistics.Documents.Excel.DataValidationCriteria)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" /> インスタンスを作成します。</summary>
            <param name="validationOperator">セル値を制約値と比較するときに使用する演算子。</param>
            <param name="validationCriteria">セル値を検証するときに使用する条件。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="validationCriteria" /> が <see cref="T:Infragistics.Documents.Excel.DataValidationCriteria" /> 列挙体のメンバーでない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)">
            <summary>セル値を検証するために使用する下限制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を下限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する下限制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を生成するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を下限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)">
            <summary>セル値を検証するために使用する上限制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を上限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する上限制約数式を取得します。</summary>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を生成するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を上限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。たとえば、適用された数式が =B1 で、データの入力規則ルールが領域 A1:A5 に適用されるとします。A1 の数式を取得すると、数式 =B1 が返されます。A2 の数式を取得すると、=B2 が返されます。同様に、セル A5 では =B5 が返されます。ただし、数式に参照が含まれていないかすべてが絶対参照の場合、<paramref name="address" /> は無視されます。そのため、上の例で、元の数式が =$B$1 の場合、指定したアドレスにかかわらず同じ数式が返されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <returns>セルに適用される値を検証するために使用する数式。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)">
            <summary>セル値を検証するために使用する下限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を下限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が WholeNumber、Decimal、または TextLength の場合に優先されます。ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            指定した値が上限制約値よりも大きい場合に発生します。上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)">
            <summary>セル値を検証するために使用する下限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を下限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Date の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> を Excel で日付として表現できない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が上限制約値よりも大きい場合に発生します。上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)">
            <summary>セル値を検証するために使用する下限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を下限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Time の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            指定した値が上限制約値よりも大きい場合に発生します。上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)">
            <summary>セル値を検証するために使用する下限制約数式を取得します。</summary>
            <param name="lowerConstraintFormula">ルールで使用する下限制約数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を下限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="lowerConstraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="lowerConstraintFormula" /> が <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="lowerConstraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が =5 などの定数に等しく、定数値が上限制約値よりも大きい場合に発生します。
            上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する下限制約数式を取得します。</summary>
            <param name="lowerConstraintFormula">ルールで使用する下限制約数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を解析するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を下限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが下限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="lowerConstraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="lowerConstraintFormula" /> が <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="lowerConstraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が =5 などの定数に等しく、定数値が上限制約値よりも大きい場合に発生します。
            上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)">
            <summary>セル値を検証するために使用する上限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を上限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が WholeNumber、Decimal、または TextLength の場合に優先されます。ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            指定した値が下限制約値よりも小さい場合に発生します。下限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)">
            <summary>セル値を検証するために使用する上限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を上限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Date の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Time の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> を Excel で日付として表現できない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が下限制約値よりも小さい場合に発生します。下限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)">
            <summary>セル値を検証するために使用する上限制約値を設定します。</summary>
            <remarks>
            <p class="body">セル値を上限制約値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">このオーバーロードは、ValidationCriteria が Time の場合に優先されます。ValidationCriteria が WholeNumber、Decimal、または TextLength の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" /> オーバーロードが優先され、ValidationCriteria が Date の場合は <see cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" /> オーバーロードが優先されます。</p>
            </remarks>
            <param name="value">セル値に対して比較するために使用する下限制約値。</param>
            <exception cref="T:System.ArgumentException">
            指定した値が下限制約値よりも小さい場合に発生します。下限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)">
            <summary>セル値を検証するために使用する上限制約数式を取得します。</summary>
            <param name="upperConstraintFormula">ルールで使用する上限制約数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <remarks>
            <p class="body">セル値を上限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            <p class="body">データの入力規則ルールがブック内のワークシートに適用されていない限り、<paramref name="address" /> を解析するセル参照モードは A1 であると仮定されます。データの入力規則ルールがブック内のワークシートに適用されている場合は、<see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> が使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="upperConstraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="upperConstraintFormula" /> が <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="upperConstraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が =5 などの定数に等しく、定数値が上限制約値よりも大きい場合に発生します。
            上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>セル値を検証するために使用する上限制約数式を取得します。</summary>
            <param name="upperConstraintFormula">ルールで使用する上限制約数式。</param>
            <param name="address">相対参照の基準となるセルまたは領域のアドレスか、ワークシートの左上のセルを使用する場合は null。</param>
            <param name="format"><paramref name="address" /> を解析するために使用するブック形式。</param>
            <param name="cellReferenceMode"><paramref name="address" /> を解析するために使用するセル参照モード。</param>
            <param name="culture">数式文字列を解析するときに使用するカルチャー。</param>
            <remarks>
            <p class="body">セル値を上限制約数式の値と比較する方法は、<see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> および <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> で決定されます。</p>
            <p class="body">ルールの ValidationCriteria に応じて、セル値自体またはセル値に相当するテキストの長さが上限制約数式の値と比較されます。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" /> が Between の場合、値は下限制約に等しいかそれよりも大きく、上限制約に等しいかそれよりも小さい必要があります。ValidationOperator が NotBetween の場合、値は下限制約よりも小さいか上限制約よりも大きい必要があります。</p>
            <p class="body">渡されたアドレスは、数式中で相対アドレスを使用する場合にのみ必要です。データの入力規則ルールがセルまたは領域に適用されている場合、各個別のセルで使用されている数式内の参照は、渡された <paramref name="address" /> に対するセルのオフセットによってシフトされます。たとえば、指定された式が =B1 で指定されたアドレスが A1 の場合を考えます。データの入力規則ルールが A5 セルに適用されている場合、使用される数式は =B5 になります。ただし、数式中の参照が =$B$1 のように絶対参照の場合、指定したアドレスにかかわらず同じ数式が適用されます。</p>
            <p class="body"><paramref name="address" /> は、ワークシート上の任意の有効なセルまたは領域参照です。領域アドレスが指定された場合、左上のセルまたは領域が使用されます。指定されたセルまたは領域には、データの入力規則ルールが適用されている必要はありません。すべての参照が許可されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="upperConstraintFormula" /> が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="upperConstraintFormula" /> が <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> が有効なセル アドレスまたは領域アドレスでない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値が null でルールが現在 <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に適用されている場合に発生します。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="upperConstraintFormula" /> が有効な数式でない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値が =5 などの定数に等しく、定数値が上限制約値よりも大きい場合に発生します。
            上限制約数式が定数に等しくない場合、この検証は実行されません。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="format" /> が <see cref="T:Infragistics.Documents.Excel.WorkbookFormat" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.Double@)">
            <summary>下限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetLowerConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は 0 になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.DateTime@)">
            <summary>下限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetLowerConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は DateTime.MinValue になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetLowerConstraint(System.TimeSpan@)">
            <summary>下限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetLowerConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は TimeSpan.Zero になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.Double@)">
            <summary>上限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetUpperConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は 0 になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.DateTime@)">
            <summary>上限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetUpperConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は DateTime.MinValue になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.TryGetUpperConstraint(System.TimeSpan@)">
            <summary>上限制約値の取得を試みます。</summary>
            <remarks>
            <p class="body">制約値は、いずれかの SetUpperConstraint メソッドで制約値が設定されているか、いずれかの SetLowerConstraintFormula メソッドで数式が設定され、数式が =5 のように定数値に等しい場合にのみ取得できます。</p>
            </remarks>
            <param name="value">メソッドが返るとき、制約値か、値を取得できなかった場合は TimeSpan.Zero になります。</param>
            <returns>制約値を取得できた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.ValidationOperator">
            <summary>セル値を制約値または数式に対して比較するときに使用する検証演算子を取得または設定します。</summary>
            <remarks>
            <p class="body">ルールの <see cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" /> に応じて、セル値自体またはセル値に相当するテキストの長さが制約値または数式と比較されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            値が <see cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationOperator" /> 列挙体のメンバーでない場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.DateTime)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraint(System.TimeSpan)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetLowerConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.GetUpperConstraintFormula(System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetLowerConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.TwoConstraintDataValidationRule.SetUpperConstraintFormula(System.String,System.String,Infragistics.Documents.Excel.WorkbookFormat,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)" />
            <seealso cref="P:Infragistics.Documents.Excel.ValueConstraintDataValidationRule.ValidationCriteria" />
        </member>
        <member name="T:Infragistics.Documents.Excel.DisplayValueCollection">
            <summary>表示テキストの値のコレクション。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues" />
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Add(System.String)">
            <summary>このコレクションに表示テキスト値を追加します。</summary>
            <param name="item">このコレクションに追加する表示テキスト値。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> はこのコレクションに含まれる別の値に一致します。値は大文字と小文字を区別せずに比較されます。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Clear">
            <summary>コレクションを消去します。</summary>
            <exception cref="T:System.InvalidOperationException">
            コレクションは、そのコレクション内の値のみを許可した <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> によって所有されます。
            コレクションをクリアするとフィルターが値を含まないようにします。これは FixedValuesFilter には許可されません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Contains(System.String)">
            <summary>指定した値がこのコレクションに含まれているかどうかを調べます。</summary>
            <remarks>
            <p class="body">表示テキストの値は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="item">このコレクションに含まれているかどうかを調べたい表示テキスト値。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.IndexOf(System.String)">
            <summary>このコレクション内における指定した表示テキスト値のインデックスを取得します。</summary>
            <param name="item">このコレクションに含まれているかどうかを調べたい表示テキスト値。</param>
            <returns>このコレクション内における指定した表示テキスト値の 0 から始まるインデックスが返されます。指定した項目がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Insert(System.Int32,System.String)">
            <summary>このコレクションに表示テキスト値を挿入します。</summary>
            <param name="index">値の挿入位置を表す 0 から始まるインデックス。</param>
            <param name="item">このコレクションに挿入する表示テキストの値。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> はこのコレクションに含まれる別の値に一致します。値は大文字と小文字を区別せずに比較されます。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> は 0 未満、または <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count" /> を超える値です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.Remove(System.String)">
            <summary>このコレクションから表示テキスト値を削除します。</summary>
            <param name="item">このコレクションから削除する表示テキスト値。</param>
            <remarks>
            <p class="body">表示テキストの値は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <returns>指定した値が見つかり削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.DisplayValueCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある表示テキストの値を削除します。</summary>
            <param name="index">削除する値の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count" /> 以上の値です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この操作はコレクション内の最後の項目を削除し、コレクション内の値のみを許可した <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> によって所有されます。コレクションをクリアするとフィルターが値を含まないようにします。これは FixedValuesFilter には許可されません。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayValueCollection.Count">
            <summary>このコレクションに含まれている表示テキスト値の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.DisplayValueCollection.Item(System.Int32)">
            <summary>インデックスを指定して表示テキスト値を取得または設定します。</summary>
            <param name="index">取得または設定する値の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.DisplayValueCollection.Count" /> 以上の値です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てられた値はこのコレクションに含まれる別の値に一致します。値は大文字と小文字を区別せずに比較されます。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.DocumentProperties">
            <summary>Microsoft Excel ファイルのドキュメント レベル プロパティを公開するクラス。</summary>
            <remarks>
            <p class="body">このクラスによって公開されるプロパティは、Windows Explorer を右クリックして [集計] タブのプロパティを編集することで Microsoft Excel ファイルで変更できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Author">
            <summary>ドキュメントの作者を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントの作者を指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Category">
            <summary>文書のカテゴリを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントのカテゴリを指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Comments">
            <summary>ドキュメントに関連するコメントを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントに関連するコメントを指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Company">
            <summary>ドキュメントが属する会社を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントが属する会社を指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Keywords">
            <summary>ドキュメントを説明するキーワードを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントを説明するキーワードを指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Manager">
            <summary>ドキュメントに関連する管理者を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントに関連する管理者を指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Status">
            <summary>ドキュメントの現在の状態を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントの現在の状態を表す文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Subject">
            <summary>ドキュメントのコンテンツの題名を取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントのコンテンツの題名を指定する文字列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.DocumentProperties.Title">
            <summary>ドキュメントのタイトルを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティの値は、ホスト アプリケーションで開いている時、コンテンツに影響を与えません。これは単にドキュメントに関連する補足データです。</p>
            </remarks>
            <value>ドキュメントのタイトルを指定する文字列。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalculationMode">
            <summary>参照値が変更した時に数式が再計算される方法を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CalculationMode" />
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.Manual">
            <summary>Microsoft Excel インタフェースでボタンをクリックして、数式は手動で再計算する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.Automatic">
            <summary>参照されているセルの値が変更されると、数式およびデータ テーブルは自動的に再計算されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalculationMode.AutomaticExceptForDataTables">
            <summary>参照されているセルの値が変更されると、数式だけが自動的に再計算されます。データ テーブルは手動で再計算する必要があります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellBorderLineStyle">
            <summary>異なるセル境界線のスタイルを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Default">
            <summary>デフォルトの境界線スタイルを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.None">
            <summary>境界線なし</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Thin">
            <summary>境界線 - 細線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Medium">
            <summary>境界線 - 中太線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Dashed">
            <summary>境界線 - 破線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Dotted">
            <summary>境界線 - 点線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Thick">
            <summary>境界線 - 太線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Double">
            <summary>境界線 - 二重線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.Hair">
            <summary>境界線 - 小さい点線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashed">
            <summary>境界線 - 大きい点線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.DashDot">
            <summary>境界線 - 一点鎖線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashDot">
            <summary>境界線 - 中太の一点鎖線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.DashDotDot">
            <summary>境界線 - 二点鎖線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.MediumDashDotDot">
            <summary>境界線 - 中太の二点鎖線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellBorderLineStyle.SlantedDashDot">
            <summary>境界線 - 傾斜した一点鎖線</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CellReferenceMode">
            <summary>数式で参照可能なさまざまな方法のセルを表します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> にこれを設定すると、行および列ラベルにも影響があります。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellReferenceMode.A1">
            <summary>セルは、最初に列および行を指定する基本番号（R54 または CA56）を表す文字を指定することで参照されます。ドル記号（$）は、ひとつまたは両方の識別子の前に配置して、絶対参照にすることができます（$A$7）。ドル記号なしで、参照は絶対行および列アドレスを使用しますが、新しいセルに数式をシフトすると、すべての相対参照で同様のシフトが実行されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CellReferenceMode.R1C1">
            <summary>セルは以下の R&lt;RowIndex&gt;C&lt;ColumnIndex&gt; (R34C5 または R2C345) フォーマットで参照されます。これらのインデックスは 1 から始まり、絶対参照を表します。R1C1 モードで相対参照を作成するには、相対インデックスは以下の R および C（R[-1]C[5] または R9C[-3]）のようにかぎ括弧内に配置する必要があります。R はそれ自体が相対参照を表し、R[0] に相当します。同様に、C は C[0] に相当し、=RC の数式は常に数式を含むセルを参照します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DateSystem">
            <summary>日付が内部的に保存できるさまざまな方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DateSystem.From1900">
            <summary>日付は 1900 年からの経過時間として保存されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DateSystem.From1904">
            <summary>日付は 1904 年からの経過時間として保存されます（主に Apple コンピュータで使用される）。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.DiagonalBorders">
            <summary>セルに表示できる斜線を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.Default">
            <summary>斜線のデフォルト値。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.None">
            <summary>セルに表示される斜線はありません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.DiagonalDown">
            <summary>左上から右下の角へ斜線がセルに表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.DiagonalUp">
            <summary>左下から右上の角へ斜線がセルに表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.DiagonalBorders.All">
            <summary>両方の斜線がセルに表示されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ExcelDefaultableBoolean">
            <summary>デフォルト設定に使用できるブール型プロパティの列挙体。これはプロパティをオーバーライドする状況で使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.Default">
            <summary>現在のデフォルトを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.True">
            <summary>true。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ExcelDefaultableBoolean.False">
            <summary>False。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FillPatternStyle">
            <summary>塗りつぶしパターン スタイルの列挙体。プロパティをオーバーライドする状況では、Default値を使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Default">
            <summary>廃止。代わりに None を使用してください。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.None">
            <summary>網掛けパターンなし</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Solid">
            <summary>網掛けパターンの前景色による塗りつぶし</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray50percent">
            <summary>網掛けパターン - 50%灰色</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray75percent">
            <summary>網掛けパターン - 75%灰色</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray25percent">
            <summary>網掛けパターン - 25%灰色</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.HorizontalStripe">
            <summary>網掛けパターン - 横、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.VerticalStripe">
            <summary>網掛けパターン - 縦、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ReverseDiagonalStripe">
            <summary>網掛けパターン - 右下がり斜線、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.DiagonalStripe">
            <summary>網掛けパターン - 左下がり斜線、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.DiagonalCrosshatch">
            <summary>網掛けパターン - 左下がり斜線、格子</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThickDiagonalCrosshatch">
            <summary>網掛けパターン - 極太線、左下がり斜線、格子</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinHorizontalStripe">
            <summary>網掛けパターン - 実線、横、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinVerticalStripe">
            <summary>網掛けパターン - 実線、縦、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinReverseDiagonalStripe">
            <summary>網掛けパターン - 実線、右下がり斜線、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinDiagonalStripe">
            <summary>網掛けパターン - 実線、左下がり斜線、縞</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinHorizontalCrosshatch">
            <summary>網掛けパターン - 実線、横、格子</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.ThinDiagonalCrosshatch">
            <summary>網掛けパターン - 実線、左下がり斜線、格子</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray12percent">
            <summary>網掛けパターン - 12.5%灰色</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FillPatternStyle.Gray6percent">
            <summary>網掛けパターン - 6.25%灰色</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle">
            <summary>フォントの上付きまたは下付きスタイルの列挙体。プロパティをオーバーライドする状況では、Default値を使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Default">
            <summary>現在のデフォルトを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.None">
            <summary>上付きまたは下付きスタイルなし</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Superscript">
            <summary>上付きスタイル</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontSuperscriptSubscriptStyle.Subscript">
            <summary>下付きスタイル</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.FontUnderlineStyle">
            <summary>フォントの下線スタイルの列挙体。プロパティをオーバーライドする状況では、Default値を使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Default">
            <summary>現在のデフォルトを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.None">
            <summary>下線スタイルなし</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Single">
            <summary>下線スタイル - 下線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.Double">
            <summary>下線スタイル - 二重下線</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.SingleAccounting">
            <summary>下線スタイル - 下線（会計）</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.FontUnderlineStyle.DoubleAccounting">
            <summary>下線スタイル - 二重下線（会計）</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalCellAlignment">
            <summary>横方向の配置スタイルの列挙体。プロパティをオーバーライドする状況では、Default値を使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Default">
            <summary>現在のデフォルトを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.General">
            <summary>基になるデータ型によって配置が変わります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Left">
            <summary>左詰め</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Center">
            <summary>中央揃え</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Right">
            <summary>右詰め</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Fill">
            <summary>セル値を繰り返してセル全体を埋め尽くします。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Justify">
            <summary>両端揃え</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.CenterAcrossSelection">
            <summary>一番左のセルの内容をCenterAcrossSelectionグループ内で中央揃えにします。CenterAcrossSelectionグループ内の他のセルはすべて空にする必要があります。セルは結合されません。 一番左のセル以外にデータが存在するように見える場合があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalCellAlignment.Distributed">
            <summary>分散型の配置です。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalTextAlignment">
            <summary>様々な水平方向のテキスト配置タイプを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Center">
            <summary>テキストを線の中心に配置。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Distributed">
            <summary>線全体にワードを配分します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Justified">
            <summary>線をまたがって揃うように、テキストを配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.JustifiedLow">
            <summary>アラビア語テキストの場合は、調整済みの kashida の長さに合わせてテキストを配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Left">
            <summary>テキストを線の左側に寄せて配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.Right">
            <summary>テキストを線の右側に寄せて配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.HorizontalTextAlignment.ThaiDistributed">
            <summary>各文字をワードとして扱うことによって、タイ語のテキストを配分します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ObjectDisplayStyle">
            <summary>オブジェクトおよび形状がワークブックに表示される方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.ShowAll">
            <summary>すべてのオブジェクトが表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.ShowPlaceholders">
            <summary>プレースホルダは、オブジェクトの場所で表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ObjectDisplayStyle.HideAll">
            <summary>オブジェクトまたは形状は表示されません。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Orientation">
            <summary>ワークシートが印刷される時に使用できるページの方向を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Landscape">
            <summary>このページはより大きな水平方向のサイズで印刷されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Portrait">
            <summary>このページはより大きな垂直方向のサイズで印刷されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Orientation.Default">
            <summary>ページはデフォルト設定で印刷されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageOrder">
            <summary>複数ページのワークシートを並び替える方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageOrder.DownThenOver">
            <summary>印刷される最初のページは左上ページです。印刷される次のページは、最初のページの下です。下にページがなければ、左上ページの右のページが印刷され、その次に下のページとなります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageOrder.OverThenDown">
            <summary>印刷される最初のページは左上ページです。印刷される次のページは、最初のページの右です。右にページがなければ、左上ページの下のページが印刷され、その次に右のページとなります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageNumbering">
            <summary>印刷時のページ番号がふられる方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageNumbering.Automatic">
            <summary>ページは、ワークシートのスタイルに基づき自動的に番号がふられます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PageNumbering.UseStartPageNumber">
            <summary>指定した開始ペ―ジ番号は、最初のページで使用され、追加ページは前ページよりもひとつ大きな数字を受け取ります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PaneLocation">
            <summary>ワークシートのマルチペイン表示で存在するさまざまなペインの位置を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.BottomRight">
            <summary>ワークシートのの右下ペイン。ワークシートが水平および垂直の両方に分割される場合に限って、この位置は有効です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.TopRight">
            <summary>ワークシートのの右上ペイン。ワークシートが垂直に分割される場合に限って、この位置は有効です。ワークシートに左右のペインしかない場合、これは右側のペインの位置となります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.BottomLeft">
            <summary>ワークシートのの左下ペイン。ワークシートが水平に分割される場合に限って、この位置は有効です。ワークシートに上下のペインしかない場合、これは下側のペインの位置となります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaneLocation.TopLeft">
            <summary>ワークシートの左上のペインこの位置は常に有効です。ワークシートにペインの分割がなければ、これが唯一のペインです。ワークシートに上下のペインしかない場合、これは上側のペインの位置となります。ワークシートに左右のペインしかない場合、これは左側のペインの位置となります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PaperSize">
            <summary>印刷のために使用できるさまざまな用紙サイズを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Undefined">
            <summary>未定義</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Letter">
            <summary>レター 8 1/2\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterSmall">
            <summary>レター（小） 8 1/2\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Tabloid">
            <summary>タブロイド 11\&quot; x 17\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Ledger">
            <summary>帳票 17\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Legal">
            <summary>リーガル 8 1/2\&quot; x 14\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Statement">
            <summary>計算書 5 1/2\&quot; x 8 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Executive">
            <summary>エグゼクティブ 7 1/4\&quot; x 10 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3">
            <summary>A3 297mm x 420mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4">
            <summary>A4 210mm x 297mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Small">
            <summary>A4（小）210mm x 297mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5">
            <summary>A5 148mm x 210mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4JIS">
            <summary>B4 (JIS) 257mm x 364mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JIS">
            <summary>B5 (JIS) 257mm x 364mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Folio">
            <summary>二つ折り 8 1/2\&quot; x 13\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Quarto">
            <summary>四つ折り 215mm x 275mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size10x14">
            <summary>10x14 10\&quot; x 14\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size11x17">
            <summary>11x17 11\&quot; x 17\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Note">
            <summary>ノート 8 1/2\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope9">
            <summary>封筒 #9 3 7/8\&quot; x 8 7/8\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope10">
            <summary>封筒 #10 4 1/8\&quot; x 9 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope11">
            <summary>封筒 #11 4 1/2\&quot; x 10 3/8\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope12">
            <summary>封筒 #12 4 3/4\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Envelope14">
            <summary>封筒 #14 5\&quot; x 11 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.C">
            <summary>C 17\&quot; x 22\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.D">
            <summary>D 22\&quot; x 34\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.E">
            <summary>E 34\&quot; x 44\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeDL">
            <summary>封筒 DL 110mm x 220mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC5">
            <summary>封筒 C5 162mm x 229mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC3">
            <summary>封筒 C3 324mm x 458mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC4">
            <summary>封筒 C4 229mm x 324mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC6">
            <summary>封筒 C6 114mm x 162mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeC6C5">
            <summary>封筒 C6/C5 114mm x 229mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4ISO_1">
            <summary>B4 (ISO) 250mm x 353mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5ISO">
            <summary>B5 (ISO) 250mm x 353mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6ISO">
            <summary>B6 (ISO) 125mm x 176mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeItaly">
            <summary>封筒 Italy 110mm x 230mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeMonarch">
            <summary>封筒 Monarch 3 7/8\&quot; x 7 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size634Envelope">
            <summary>6 3/4 封筒 3 5/8\&quot; x 6 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.USStandardFanfold">
            <summary>US 標準ファンフォールド 14 7/8\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.GermanStandardFanfold">
            <summary>German Std.ファンフォールド 8 1/2\&quot; x 12\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.GermanLegalFanfold">
            <summary>German リーガル ファンフォールド 8 1/2\&quot; x 13\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4ISO_2">
            <summary>B4 (ISO) 250mm x 353mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.JapanesePostcard">
            <summary>日本郵便ハガキ 100mm x 148mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size9x11">
            <summary>9x11 9\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size10x11">
            <summary>10x11 10\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size15x11">
            <summary>15x11 15\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.EnvelopeInvite">
            <summary>封筒招待 220mm x 220mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterExtra">
            <summary>書簡エクストラ 9 1/2\&quot; x 12\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LegalExtra">
            <summary>リーガル エクストラ 9 1/2\&quot; x 15\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.TabloidExtra">
            <summary>タブロイド エクストラ 11 11/16\&quot; x 18\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Extra">
            <summary>A4 エクストラ 235mm x 322mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterTransverse">
            <summary>レター トランスバース 8 1/2\&quot; x 11\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Transverse">
            <summary>A4 トランスバース 210mm x 297mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterExtraTransverse">
            <summary>レター エクストラ トランスバース9 1/2\&quot; x 12\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.SuperAA4">
            <summary>スーパー A/A4 227mm x 356mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.SuperBA3">
            <summary>スーパー B/A3 305mm x 487mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterPlus">
            <summary>レター プラス 8 1/2\&quot; x 12 11/16\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Plus">
            <summary>A4 プラス 210mm x 330mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Transverse">
            <summary>A5 トランスバース 148mm x 210mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JISTransverse">
            <summary>B5 (JIS) トランスバース 182mm x 257mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Extra">
            <summary>A3 エクストラ 322mm x 445mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Extra">
            <summary>A5 エクストラ 174mm x 235mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5ISOExtra">
            <summary>B5 (ISO) エクストラ 201mm x 276mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A2">
            <summary>A2 420mm x 594mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Transverse">
            <summary>A3 トランスバース 297mm x 420mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3ExtraTransverse">
            <summary>A3 エクストラ トランスバース 322mm x 445mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.DblJapanesePostcard">
            <summary>Dbl.日本郵便ハガキ 200mm x 148mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A6">
            <summary>A6 105mm x 148mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.LetterRotated">
            <summary>レター Rotated 11\&quot; x 8 1/2\&quot;</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A3Rotated">
            <summary>A3 Rotated 420mm x 297mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A4Rotated">
            <summary>A4 Rotated 297mm x 210mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A5Rotated">
            <summary>A5 Rotated 210mm x 148mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B4JISRotated">
            <summary>B4 (JIS) Rotated 364mm x 257mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B5JISRotated">
            <summary>B5 (JIS) Rotated 364mm x 257mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.JapanesePostcardRotated">
            <summary>日本郵便ハガキ Rot.148mm x 100mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.DblJapanesePostcardRotated">
            <summary>Dbl.Jap.郵便ハガキ Rot.148mm x 200mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.A6Rotated">
            <summary>A6 Rotated 148mm x 105mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6JIS">
            <summary>B6 (JIS) 128mm x 182mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.B6JISRotated">
            <summary>B6 (JIS) Rotated 182mm x 128mm</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PaperSize.Size12x11">
            <summary>12x11 12\&quot; x 11\&quot;</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PositioningOptions">
            <summary>図形、セル、または領域の境界線の取得または設定するオプションを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.None">
            <summary>特殊なオプションを使用しません。現在の状態では、ワークシートの実際の境界線を取得または設定します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.IgnoreHiddenRowsAndColumns">
            <summary>非推奨。代わりに TreatAllRowsAndColumnsAsVisible を使用してください。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PositioningOptions.TreatAllRowsAndColumnsAsVisible">
            <summary>すべての行および列について <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> 値を無視します。すべての行および列が表示されているとして境界線を取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Precision">
            <summary>セルの値を取得する時に使用できる精度のタイプを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Precision.UseDisplayValues">
            <summary>セルの表示値が使用されます。セルの実際の値が 10.005 であるが現在の書式を使用している場合、$10.01 と表示されます。このセルが計算で使用される場合、10.01 の表示値が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Precision.UseRealCellValues">
            <summary>セルの実際の値が使用されます。セルの実際の値が 10.005 であるが現在の書式を使用している場合、$10.01 と表示されます。このセルが計算で使用される場合、10.005 の保存値が使用され、表示は若干異なる値を表示します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapeType">
            <summary>Microsoft Excel で定義済みの形状のタイプを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Diamond">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Ellipse">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Heart">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.IrregularSeal1">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.IrregularSeal2">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.LightningBolt">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Line">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Pentagon">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.Rectangle">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.RightTriangle">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape" /> 形状を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PredefinedShapeType.StraightConnector1">
            <summary><see cref="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape" /> 形状を表します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintErrors">
            <summary>ワークシートのセル エラーを印刷するためのさまざまな方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsDisplayed">
            <summary>エラーはワークシートに表示されるように印刷されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.DontPrint">
            <summary>セルに値がなければエラーは印刷されません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsDashes">
            <summary>エラーは 2 つのダッシュ &quot;--&quot; で印刷されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintErrors.PrintAsNA">
            <summary>エラーは &quot;#N/A&quot; として印刷されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintNotes">
            <summary>セル ノートを印刷するためのさまざまな方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.DontPrint">
            <summary>セル ノートは印刷されません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.PrintAsDisplayed">
            <summary>セル ノートは、ワークシートに表示されるように印刷されます。このオプションで、Microsoft Excel のワークシートで表示される場合、セル ノートは印刷されるワークシートに表示されるだけです。ノートが Excel でインジケータを表示する場合、このインジケータとノートは印刷されません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.PrintNotes.PrintAtEndOfSheet">
            <summary>セル ノートは、ワークシート全体が印刷された後、最後のページに印刷されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ScalingType">
            <summary>ワークシートが印刷される時のスケール方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScalingType.UseScalingFactor">
            <summary>ワークシートを印刷する時にスケールするために使用されるスケール率。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScalingType.FitToPages">
            <summary>ページの最大数は、ワークシートで印刷可能なページ数を決定するために使用されます。ワークシートに十分な印刷可能なコンテンツがなければ、少ないページが使用できます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ScrollBars">
            <summary>ワークブックで使用できるさまざまなスクロール バー構成を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.None">
            <summary>スクロール バーは Microsoft Excel で表示されません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Horizontal">
            <summary>水平スクロール バーだけが Microsoft Excel で表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Vertical">
            <summary>垂直スクロール バーだけが Microsoft Excel で表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ScrollBars.Both">
            <summary>両方のスクロール バーは Microsoft Excel で表示されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapePositioningMode">
            <summary>行と列のサイズが変更される時に形状が再配置される方法を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.MoveAndSizeWithCells">
            <summary>形状はセルで移動およびサイズ変更されます。形状の前（または行の上）の列が拡大されると、形状は左にシフトします。形状内の列が拡大されると、形状は広げられます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.MoveWithCells">
            <summary>形状は移動されますが、セルでサイズ変更されません。形状の前（または行の上）の列が拡大されると、形状は左にシフトします。形状内の列が拡大されると、形状は広げられません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.ShapePositioningMode.DontMoveOrSizeWithCells">
            <summary>形状はセルで移動またはサイズ変更されません。形状は、その前または内部で行および列がサイズ変更されても、ワークシートの絶対ピクセル位置に残ります。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.TextFormatMode">
            <summary>セルの値と書式文字列を結合してテキストを取得するためのさまざまな方法を表します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
        </member>
        <member name="F:Infragistics.Documents.Excel.TextFormatMode.AsDisplayed">
            <summary>Microsoft Excel UI に表示されるようにセルのテキストをフォーマットします。これはテキストをフォーマットする時にセル幅を考慮します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.TextFormatMode.IgnoreCellWidth">
            <summary>セルでスペースが制限されていないかのようにセルのテキストをフォーマットします。ただし、これは書式文字列からの埋め込み文字を含みません。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellFormatOptions">
            <summary>書式でどの書式設定プロパティのグループを使用するかを示す、フラグ付き列挙体。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatOptions" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.None">
            <summary>書式設定プロパティは書式で使用されません。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyNumberFormatting">
            <summary><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" /> プロパティが書式で使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyAlignmentFormatting">
            <summary>書式では <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Alignment" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Indent" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Rotation" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.ShrinkToFit" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.VerticalAlignment" />、および <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.WrapText" /> プロパティが使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyFontFormatting">
            <summary><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font" /> プロパティが書式で使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyBorderFormatting">
            <summary>書式では <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderColorInfo" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorders" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.DiagonalBorderStyle" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" />、<see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" />、および <see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" /> プロパティが使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyFillFormatting">
            <summary><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" /> プロパティが書式で使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.ApplyProtectionFormatting">
            <summary><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Locked" /> プロパティが書式で使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetCellFormatOptions.All">
            <summary>全てのプロパティが書式で使用されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalCellAlignment">
            <summary>垂直方向の配置スタイルの列挙体。プロパティをオーバーライドする状況では、Default値を使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Default">
            <summary>現在のデフォルトを使用します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Top">
            <summary>上詰め</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Center">
            <summary>中央揃え</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Bottom">
            <summary>下詰め</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Justify">
            <summary>両端揃え</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalCellAlignment.Distributed">
            <summary>分散型の配置です。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalTextAlignment">
            <summary>様々な垂直方向のテキスト配置タイプを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Bottom">
            <summary>利用可能な領域の下部に合わせてテキストを配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Center">
            <summary>利用可能な領域の下部に合わせて中心を配置します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.VerticalTextAlignment.Top">
            <summary>利用可能な領域の上部に合わせてテキストを配置します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookEncryptionMode">
            <summary>2007 ファイル形式以後で保存される文書を暗号化するための暗号化モードを表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookEncryptionMode.Standard">
            <summary>Excel 2007 以後で使用される規格の暗号化。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookEncryptionMode.Agile">
            <summary>Excel 2010 以後で使用される Agile の暗号化。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookFormat">
            <summary>保存可能なワークブックをさまざまなフォーマットで表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel97To2003">
            <summary>Excel 97-2003 BIFF8 のファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel97To2003Template">
            <summary>Excel 97-2003 テンプレート BIFF8 のファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007">
            <summary>Excel 2007 XML のファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007MacroEnabled">
            <summary>Excel 2007 XML マクロ対応のファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007MacroEnabledTemplate">
            <summary>Excel 2007 マクロ対応のテンプレート XML ファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.Excel2007Template">
            <summary>Excel 2007 テンプレート XML ファイル形式です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookFormat.StrictOpenXml">
            <summary>Strict Open XML (ISO/IEC 29500 Strict) ファイル形式です。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookThemeColorType">
            <summary>ワークブックの様々なテーマ色を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorInfo.ThemeColorType" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Light1">
            <summary>テキスト/背景 - ライト 1 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Dark1">
            <summary>テキスト/背景 - ダーク 1 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Light2">
            <summary>テキスト/背景 - ライト 2 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Dark2">
            <summary>テキスト/背景 - ダーク 2 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent1">
            <summary>アクセントと 1 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent2">
            <summary>アクセントと 2 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent3">
            <summary>アクセントと 3 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent4">
            <summary>アクセントと 4 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent5">
            <summary>アクセントと 5 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Accent6">
            <summary>アクセントと 6 テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.Hyperlink">
            <summary>ハイパーリンク テーマ色を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorkbookThemeColorType.FollowedHyperlink">
            <summary>次のハイパーリンク テーマ色を表します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableArea">
            <summary>テーブル レベルで適用される書式を持つことができる様々な領域を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.WholeTable">
            <summary>書式はテーブル全体に適用されます。この領域フォーマットで設定可能なのは外側の境界線プロパティだけです。その他何を設定しても例外が発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.DataArea">
            <summary>書式はテーブルのデータ領域に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.HeaderRow">
            <summary>書式はヘッダー行に適用されます。上側の境界線プロパティを除きすべてをこの領域フォーマットで設定可能です。上側の境界線プロパティを設定すると例外が発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableArea.TotalsRow">
            <summary>書式は合計行に適用されます。下側の境界線プロパティを除きすべてをこの領域フォーマットで設定可能です。下側の境界線プロパティを設定すると例外が発生します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumnArea">
            <summary>テーブルの列レベルで適用される書式を持つことができる様々な領域を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.DataArea">
            <summary>書式はテーブル列のデータ領域に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.HeaderCell">
            <summary>書式はテーブル列のヘッダー セルに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableColumnArea.TotalCell">
            <summary>書式はテーブル列の合計列に適用されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableStyleArea">
            <summary>テーブルのスタイル レベルで適用される書式を持つことができる様々な領域を表します。</summary>
            <remarks>
            <p class="note"><b>注:</b> テーブル スタイル エリア フォーマットで設定できるのは特定のプロパティのみです。以下の通りです:<list type="bullet">
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderColorInfo" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.BottomBorderStyle" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderColorInfo" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.LeftBorderStyle" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderColorInfo" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.RightBorderStyle" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderColorInfo" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.TopBorderStyle" /></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Bold">Font.Bold</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo">Font.ColorInfo</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Italic">Font.Italic</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.Strikeout">Font.Strikeout</see></item>
            <item><see cref="P:Infragistics.Documents.Excel.IWorkbookFont.UnderlineStyle">Font.UnderlineStyle</see></item>
            </list>テーブル スタイル エリアでその他のいかなるフォーマットまたはフォント プロパティを設定すると例外が発生します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.WholeTable">
            <summary>書式はテーブル全体に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.ColumnStripe">
            <summary>書式は、テーブル内の奇数列のストライプに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.AlternateColumnStripe">
            <summary>書式は、テーブル内の偶数列のストライプに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.RowStripe">
            <summary>書式は、テーブル内の奇数行のストライプに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.AlternateRowStripe">
            <summary>書式は、テーブル内の偶数行のストライプに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastColumn">
            <summary>書式は、テーブル内の最後の列に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstColumn">
            <summary>書式は、テーブル内の最初の列に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.HeaderRow">
            <summary>書式は、テーブル内のヘッダー行に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.TotalRow">
            <summary>書式は、テーブル内の合計行に適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstHeaderCell">
            <summary>書式は、テーブル内の最初のヘッダー セルに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastHeaderCell">
            <summary>書式は、テーブル内の最後のヘッダー セルに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.FirstTotalCell">
            <summary>書式は、テーブル内の最初の合計セルに適用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetTableStyleArea.LastTotalCell">
            <summary>書式は、テーブル内の最後の合計セルに適用されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit">
            <summary>列幅を表すことができるさまざまな単位を表します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Character">
            <summary>列幅は、列の余白を含み &apos;0&apos; 数字幅の単位で表されます。この数字はワークブックのデフォルト フォントで計測されます。余白は列の一方の側の数ピクセルにグリッド線用に数ピクセルが追加されたものです。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Character256th">
            <summary>列幅は列の余白を含み &apos;0&apos; 数字幅である 1/256 で表されます。これはこの値が文字の単位で表される幅の 256 倍となることを意味します。この数字はワークブックのデフォルト フォントで計測されます。余白は列の一方の側の数ピクセルにグリッド線用に数ピクセルが追加されたものです。これらの単位は、<see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" /> プロパティと <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" /> プロパティで表される単位です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.CharacterPaddingExcluded">
            <summary>列幅は、余白を除き &apos;0&apos; 数字幅の単位で表されます。この数字はワークブックのデフォルト フォントで計測されます。これらの単位は、Microsoft Excel がユーザーに列幅を表示し、[列幅] ダイアログでユーザーから指定される新しい列幅を受け入れる単位です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Pixel">
            <summary>列幅はピクセルで表されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Point">
            <summary>列幅はポイントで表されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetColumnWidthUnit.Twip">
            <summary>列幅は twip (1/20ポイント) で表されます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetView">
            <summary>ワークシートのさまざまな表示を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.Normal">
            <summary>ワークシートは通常表示で表示されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.PageLayout">
            <summary>ワークシートは、印刷時に表示されるように表示されます。この表示は、印刷されるページがワークブックのヘッダまたはフッタを開始および終了する場所を表示します。この値は Excel 2007 だけでサポートされ、それ以前のバージョンでは通常にデフォルト設定されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetView.PageBreakPreview">
            <summary>この表示は、ワークシートが印刷される時にページが改ページされる場所のプレビューを示します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetVisibility">
            <summary>ワークシートのさまざまな視覚性を表します。</summary>
            <remarks>
            <p class="body">ワークシートの視覚性は、Microsoft Excel でワークブック ウィンドウの下のタブ バーでワークシートが表示される方法を示します。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.Visible">
            <summary>ワークシート タブは、タブ バーに存在します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.Hidden">
            <summary>ワークシート タブは、タブ バーに存在しません。ワークシートは、Microsoft Excel の [表示] ダイアログから表示可能にできます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.WorksheetVisibility.StrongHidden">
            <summary>ワークシート タブは、タブ バーに存在しません。ワークシートは、Microsoft Excel の Visual Basic プロシージャからのみ再び表示可能にできます。ワークシートは、ユーザー インタフェースから表示可能にできません。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ErrorValue">
            <summary>Microsoft Excel のエラー値を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ErrorValue.ToString">
            <summary>エラー値の文字列表現を取得します。</summary>
            <returns>エラー値の文字列表現。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.ArgumentOrFunctionNotAvailable">
            <summary>#N/A エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、値が数式の一部分で使用できない場合に発生します。</p>
            </remarks>
            <value>#N/A エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.Circularity">
            <summary>循環エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">Microsoft Excel には循環のエラー定数がありません。Microsoft Excel の数式の結果は循環にはなりません。ただし、ランタイムのために、所有元のワークブックが <see cref="P:Infragistics.Documents.Excel.Workbook.IterativeCalculationsEnabled" /> を False に設定する場合、ワークブックを読み込みした後または保存する前に、このエラー値が循環参照がある数式の結果に使用されます。</p>
            <p class="body">Microsoft Excel では、セルに循環参照数式を設定すると、はじめて問題が発生した時ににエラー ダイアログが表示されます。その後の数式が循環参照の制限に違反した場合、ゼロとして評価します。つまり、この値がセルにある場合、計算ではゼロとして扱われます。このエラーの値が返されます。セルの実際のゼロ値と循環エラーを識別できます。</p>
            <p class="note"><B>注:</B> Microsoft Excel には循環エラー定数がないため、このエラー値を手動でセルに設定することはできません。このエラー値をセルに設定すると、InvalidOperationException がスローされます。このエラー値はセルに適用された数式の結果としてのみ有効です。</p>
            </remarks>
            <value>循環エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.DivisionByZero">
            <summary>#DIV/0! エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、数値がゼロで分割されると発生します。</p>
            </remarks>
            <value>#DIV/0! エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.EmptyCellRangeIntersection">
            <summary>#NULL! エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、共通のセルを含まない 2 つの参照の交差が存在する場合に発生します。交差演算子は、2 つの参照間のスペースです。</p>
            </remarks>
            <value>#NULL! エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.InvalidCellReference">
            <summary>#REF! エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、セル参照またはセル範囲参照が有効でない場合に発生します。</p>
            </remarks>
            <value>#REF! エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.ValueRangeOverflow">
            <summary>#NUM! エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、数式で無効な数値が存在する場合に発生します。</p>
            </remarks>
            <value>#NUM! エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.WrongFunctionName">
            <summary>#NAME? エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは数式のテキストが認識されない場合に発生します。</p>
            </remarks>
            <value>#NAME? エラーを表す ErrorValue。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.ErrorValue.WrongOperandType">
            <summary>#VALUE! エラーを表す ErrorValue を取得します。</summary>
            <remarks>
            <p class="body">このエラーは、不正確な引数またはオペランドが関数で使用される場合に発生します。</p>
            </remarks>
            <value>#VALUE! エラーを表す ErrorValue。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.AverageFilter">
            <summary>データ範囲全体の平均を下回るデータであるか上回るデータであるかという条件に基づいてデータを絞り込むことのできるフィルターです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DynamicValuesFilter">
            <summary>特定のデータ範囲に含まれるデータや、フィルターの適用日/評価実施日といった動的な条件に基づいてデータの絞り込みを行う各種フィルターを表す抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.Filter">
            <summary>ワークシートのセルを絞り込む各種フィルターを表す抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DynamicValuesFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FillFilter" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Average">
            <summary>前回フィルターが適用された時に計算された平均を取得します。フィルターを適用した時に何らかのエラーまたはすべての非数値が検出された場合は 0 を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Type">
            <summary>データ範囲の平均を下回るデータに絞り込むか、平均を上回るデータに絞り込むかを示す値を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilterType" /> 列挙体で定義されません。
            </exception>
            <value>セルを表示したい場合は AboveAverage を指定し、平均を下回るセルを表示したい場合は BelowAverage を指定します。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CustomFilter">
            <summary>1 つ、ないし 2 つのカスタム条件に基づいてデータを絞り込むことのできるフィルターです。</summary>
            <remarks>このフィルター タイプでは、1 つの比較演算子と 1 つの条件値からなる絞り込み条件を 1 つ、ないし 2 つ指定することができます。この 2 つの絞り込み条件は論理積 (and) または論理和 (or) 演算子と組み合わせて使用できます。</remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1">
            <summary>データ範囲に表示するセルの絞り込みに使用する第 1 の条件を取得または設定します。</summary>
            <remarks>
            <p class="body">第 1 の絞り込み条件の指定は必須です。Condition1 を null 値に設定すると、例外がスローされます。</p>
            <p class="body">Condition1 と <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" /> の両方が設定されている場合、<see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" /> に基づいて各条件の論理的な連結が決定されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2">
            <summary>データ範囲に表示するセルの絞り込みに使用する第 2 の条件を取得または設定します。</summary>
            <remarks>
            <p class="body">第 2 の絞り込み条件の指定は任意です。この値を null 値にすると、データの絞り込みに <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" /> のみが使用されます。</p>
            <p class="body">Condition1 と Condition2 の両方が設定されている場合、<see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" /> に基づいて各条件の論理的な連結が決定されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator">
            <summary><see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" /> と <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" /> との論理的な連結を定義する演算子を取得または設定します。</summary>
            <remarks>
            <p class="body">Condition1 と Condition2 の両方が設定されている場合、ConditionalOperator に基づいて各条件の論理的な連結が決定されます。Condition1 のみが設定されていて、Condition2 が null 値である場合、ConditionalOperator は無視されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" /> 列挙体で定義されません。
            </exception>
            <value>
            両方の条件を満たしているデータを一致データとみなす場合は論理積 (and) 演算子を指定します。一方または両方の条件を満たしているデータを一致データとみなす場合は論理和 (or) 演算子を指定します。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" /> で使用される絞り込み条件。</summary>
            <remarks>
            <p class="body">CustomFilterCondition には、比較演算子が 1 つ、条件値が 1 つ含まれます。データ範囲に表示される各セルの値が比較演算子に基づいて条件値と比較されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.Double)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> インスタンスを作成します。</summary>
            <param name="comparisonOperator">セルの値と <paramref name="value" /> との比較方式を記述する演算子。</param>
            <param name="value">セル値と突き合わせる数。</param>
            <remarks>
            <p class="body">数値では、<paramref name="comparisonOperator" /> を BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain にできません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator" />が<see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> は無限または NaN です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator" /> は BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.DateTime)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> インスタンスを作成します。</summary>
            <param name="comparisonOperator">セルの値と <paramref name="value" /> との比較方式を記述する演算子。</param>
            <param name="value">セルの値と比較される日付。</param>
            <remarks>
            <p class="body">日付では、<paramref name="comparisonOperator" /> を BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain にできません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator" />が<see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> を Excel で日付として表現できません。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator" /> は BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.TimeSpan)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> インスタンスを作成します。</summary>
            <param name="comparisonOperator">セルの値と <paramref name="value" /> との比較方式を記述する演算子。</param>
            <param name="value">セル値と突き合わせる時間。</param>
            <remarks>
            <p class="body">時間では、<paramref name="comparisonOperator" /> を BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain にできません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator" />が<see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="comparisonOperator" /> は BeginsWith、DoesNotBeginWith、EndsWith、DoesNotEndWith、Contains または DoesNotContain です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.#ctor(Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator,System.String)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> インスタンスを作成します。</summary>
            <param name="comparisonOperator">セルの値と <paramref name="value" /> との比較方式を記述する演算子。</param>
            <param name="value">セルの値と比較する文字列。文字列は、任意の文字 (?) のワイルドカードまたはゼロまたは複数の文字 (*) のワイルドカードを含むことができます。</param>
            <remarks>
            <p class="note"><b>注:</b> 値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="comparisonOperator" />が<see cref="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator">
            <summary>セルの値と <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value" /> との比較方式を記述する演算子を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.Value">
            <summary>セルの値と突き合わせる条件値を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator" />		
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter">
            <summary>特定の期間の日付をフィルターできるフィルターを表します。</summary>
            <remarks>
            <p class="body">このフィルターは、日付が年の指定の月または四半期内にある場合にフィルター条件に一致します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type">
            <summary>表示する日付期間のタイプを取得または設定します。</summary>
            <value>
            任意の年度の特定の月に含まれる日付に絞り込む場合には Month を指定し、任意の年度の特定の四半期に含まれる日付に絞り込む場合には Quarter を指定します。
            </value>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType" /> 列挙体で定義されません。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定された値が Quarter で、<see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value" /> が 1 未満または 4 を超える値であるか、指定された値が Month で、値が 1 未満または 12 を超える値です。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Value">
            <summary>表示する月または四半期の 1 から始まる値を取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type" /> が Month である場合、この値に 1 を指定すると January に、2 を指定すると February に日付が絞り込まれるという具合になります。Type が Quarter である場合、この値に 1 を指定すると Quarter 1 に日付が絞り込まれるという形になります。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <see cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type" /> が Quarter で、指定された値が 1 未満または 4 を超える値であるか、もしくは Type が Month で、指定された値が 1 未満または 12 を超える値です。
            </exception>
            <value>表示する月または四半期の 1 から始まる値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DateRangeFilter">
            <summary>指定された日付範囲内にあるかどうかに基づいて日付をフィルターするフィルターのための抽象基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" />
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.End">
            <summary>日付範囲内でフィルターされた排他的最終日を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.Start" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.Start">
            <summary>日付範囲内でフィルターされた両立的開始日を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DateRangeFilter.End" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.AverageFilterType">
            <summary>各種の <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter" /> を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.AverageFilter.Type" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.AverageFilterType.AboveAverage">
            <summary>フィルタリングの対象となるデータ範囲全体の平均を上回る値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.AverageFilterType.BelowAverage">
            <summary>フィルタリングの対象となるデータ範囲全体の平均を下回る値に絞り込みます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.CalendarType">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> で使用できる各種カレンダーを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Gregorian">
            <summary>グレゴリオ歴が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianArabic">
            <summary>グレゴリオ暦のアラビア語版を使用する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianMeFrench">
            <summary>グレゴリオ暦の中東フランス語版を使用する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianUs">
            <summary>グレゴリオ暦のアメリカ英語版を使用する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianXlitEnglish">
            <summary>グレゴリオ暦の表記変換された英語版を使用する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.GregorianXlitFrench">
            <summary>グレゴリオ暦の表記変換されたフランス語版を使用する必要があります。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Hebrew">
            <summary>ヘブライ語の太陰暦が使用されます。この暦は、ガウスの復活祭計算公式と『口頭法律の完全な表明 (The Complete Restatement of Oral Law)』に基づく暦です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Hijri">
            <summary>ヒジュラ太陰暦が使用されます。この暦は、サウジアラビア王国イスラム省によって制定された歴です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Japan">
            <summary>日本の皇紀暦が使用されます。この暦は、日本工業規格 JIS X 0301 に基づく暦です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Korea">
            <summary>韓国の檀紀暦が使用されます。この暦は、韓国の法令施行第 4 番によって制定された暦です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.None">
            <summary>カレンダーを使用しないことを指定します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Saka">
            <summary>サカ紀暦が使用されます。この暦は、「インド天文・航海暦」の一部としてインドの改暦委員会によって制定された暦です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Taiwan">
            <summary>台湾暦 (中国国家標準 CNS 7648 に基づく暦)　が使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.CalendarType.Thai">
            <summary>タイ暦が使用されます。この暦は、「王室官報 B.E. 2456 」におけるワチラーウット王　(ラーマ 6 世) の国王令 (西暦 1913 年) およびピブンソムクラム首相の布告 (西暦 1941 年) によって制定されたもので、グレゴリオ歴の 1 月 1 日を年初とし、グレゴリオ暦の紀元前 543 年を紀元 0 年とした暦です。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.ConditionalOperator">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" /> の条件の連結に使用できる各種の論理演算子です。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.ConditionalOperator" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ConditionalOperator.And">
            <summary><see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" /> と <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" /> のみが一致する値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ConditionalOperator.Or">
            <summary><see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition1" /> と <see cref="P:Infragistics.Documents.Excel.Filtering.CustomFilter.Condition2" /> のいずれか一方 (または両方) が一致する値に絞り込みます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter" /> によって絞り込める各種データ範囲を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.DatePeriodFilter.Type" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType.Month">
            <summary>任意の年度の特定の月に含まれる日付に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType.Quarter">
            <summary>任意の年度の特定の四半期に含まれる日付に絞り込みます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilterCondition" /> で使用できる各種比較を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.CustomFilterCondition.ComparisonOperator" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.Equals">
            <summary>比較値と等しい値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.NotEqual">
            <summary>比較値と等しくない値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.GreaterThan">
            <summary>比較値よりも大きな値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.GreaterThanOrEqual">
            <summary>比較値以上の値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.LessThan">
            <summary>比較値未満の値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.LessThanOrEqual">
            <summary>比較値以下の値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.BeginsWith">
            <summary>比較値で始まる文字列値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotBeginWith">
            <summary>比較値以外の値で始まる文字列値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.EndsWith">
            <summary>比較値で終わる文字列値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotEndWith">
            <summary>比較値以外の値で終わる文字列値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.Contains">
            <summary>比較値を含む文字列値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.ExcelComparisonOperator.DoesNotContain">
            <summary>比較値を含まない文字列値に絞り込みます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupType">
            <summary>さまざまなタイプ、つまり、さまざまな精度の <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Day">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる日を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Hour">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる時間を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Minute">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる分を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Month">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる月を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Second">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる秒を表します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.FixedDateGroupType.Year">
            <summary>このグループは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の含まれる年を表します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" /> によって絞り込める各種期間を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Day">
            <summary>許容値の期間は 1 日です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Week">
            <summary>許容値の期間は 1 週間です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Month">
            <summary>許容値の期間は 1 か月です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Quarter">
            <summary>許容値の期間は 1 四半期です。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration.Year">
            <summary>許容値の期間は 1 年です。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" /> によって絞り込める各種相対日付オフセットを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Previous">
            <summary>フィルターの作成日を基点として 1 つ前の期間に含まれる値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Current">
            <summary>フィルターの作成日を基点として現在の期間に含まれる値に絞り込みます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset.Next">
            <summary>フィルターの作成日を基点として次の期間に含まれる値に絞り込みます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" /> で使用できる各種フィルターを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.TopValues">
            <summary>並べ替えられた値リストで上から N 番目までに入る値を表示します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.BottomValues">
            <summary>並べ替えられた値リストで下から N 番目までに入る値を表示します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.TopPercentage">
            <summary>並べ替えられた値リストで上位 N パーセントに入る値を表示します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType.BottomPercentage">
            <summary>並べ替えられた値リストで下位 N パーセントに入る値を表示します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FillFilter">
            <summary>背景の塗りつぶしに基づいてセルを絞り込むフィルターを表します。</summary>
            <remarks>
            <p class="body">このフィルターは 1 つの <see cref="T:Infragistics.Documents.Excel.CellFill" /> を指定します。この塗りつぶしのセルがデータ範囲に表示されることになります。他のセルはすべて非表示になります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FillFilter.Fill">
            <summary>フィルターするセルに使用する <see cref="T:Infragistics.Documents.Excel.CellFill" /> を取得または設定します。</summary>
            <remarks>
            <p class="body">この塗りつぶしのセルがデータ範囲に表示されることになります。他のセルはすべて非表示になります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <value>セルの絞り込みに使用する CellFill。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup">
            <summary>所定の日付範囲を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.#ctor(Infragistics.Documents.Excel.Filtering.FixedDateGroupType,System.DateTime)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> インスタンスを作成します。</summary>
            <param name="type">このグループのタイプ、つまり精度です。</param>
            <param name="value">許容される日付範囲を決定する基準日です。</param>
            <remarks>
            <p class="body"><paramref name="type" /> は <paramref name="value" /> の精度を示します。このグループで許容される日付範囲は、この値によって決まります。たとえば、Type に Hour を使用し、Value を 12/19/2011 1:29:13 PM と指定した場合、<see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> で許容される日付範囲は、12/19/2011 1:00:00 PM から 12/19/2011 1:59:59 PM までになります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type" />が<see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> は Excel で定義できません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)">
            <summary>指定された予定表タイプに基づいて許容される日付範囲を取得します。</summary>
            <param name="calendarType">許容される日付範囲を取得する予定表タイプ。</param>
            <param name="start">許容される日付範囲の両立的な開始日を含む出力パラメータ。</param>
            <param name="end">許容される日付範囲の排他的な終了日を含む出力パラメータ。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType" />が<see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType" />列挙体で定義されていないです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start" />
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End">
            <summary>None の <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType" /> で許容される日付範囲の排他的な最終日を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start" />
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Start">
            <summary>None の <see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType" /> で許容される日付範囲の両立的な開始日を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.End" />
            <seealso cref="M:Infragistics.Documents.Excel.Filtering.FixedDateGroup.GetRange(Infragistics.Documents.Excel.Filtering.CalendarType,System.DateTime@,System.DateTime@)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type">
            <summary>このグループのタイプ、つまり精度を取得します。</summary>
            <remarks>
            <p class="body">このグループ タイプは、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" /> の精度を示します。このグループで許容される日付範囲は、この値によって決まります。たとえば、Type が Hour で、Value が 12/19/2011 1:29:13 PM である場合、<see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> で許容される日付範囲は、12/19/2011 1:00:00 PM から 12/19/2011 1:59:59 PM までになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Value">
            <summary>許容される日付範囲を決定する基準日を取得します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type" /> は Value の精度を示します。このグループで許容される日付範囲は、この値によって決まります。たとえば、Type が Hour で、Value が 12/19/2011 1:29:13 PM である場合、<see cref="T:Infragistics.Documents.Excel.Filtering.FixedDateGroup" /> で許容される日付範囲は、12/19/2011 1:00:00 PM から 12/19/2011 1:59:59 PM までになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroup.Type" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection">
            <summary>指定日グループのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Add(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>このコレクションに指定日グループを追加します。</summary>
            <param name="item">このコレクションに追加する指定日グループ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> がすでにコレクション内に存在します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Clear">
            <summary>コレクションを消去します。</summary>
            <exception cref="T:System.InvalidOperationException">
            コレクションは、そのコレクション内の値のみを許可した <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> によって所有されます。
            コレクションをクリアするとフィルターが値を含まないようにします。これは FixedValuesFilter には許可されません。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Contains(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>指定した指定日グループがこのコレクションに含まれているかどうかを調べます。</summary>
            <param name="item">このコレクションに含まれているかどうかを調べたい指定日グループ。</param>
            <returns>この項目がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.IndexOf(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>このコレクション内における指定した指定日グループのインデックスを取得します。</summary>
            <param name="item">このコレクションに含まれているかどうかを調べたい指定日グループ。</param>
            <returns>このコレクション内における指定した指定日グループのインデックス (ゼロを基準とした数値) が返されます。指定した項目がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Insert(System.Int32,Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>このコレクションに指定日グループを挿入します。</summary>
            <param name="index">値の挿入位置を表す 0 から始まるインデックス。</param>
            <param name="item">このコレクションに挿入する指定日グループ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="item" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="item" /> がすでにコレクション内に存在します。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> は 0 未満、または <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count" /> を超える値です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Remove(Infragistics.Documents.Excel.Filtering.FixedDateGroup)">
            <summary>このコレクションから指定日グループを削除します。</summary>
            <param name="item">このコレクションに削除する指定日グループ。</param>
            <returns>指定した値が見つかり削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある指定日グループを削除します。</summary>
            <param name="index">削除する値の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count" /> 以上の値です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この操作はコレクション内の最後の項目を削除し、コレクション内の値のみを許可した <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> によって所有されます。コレクションをクリアするとフィルターが値を含まないようにします。これは FixedValuesFilter には許可されません。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count">
            <summary>このコレクションに含まれている指定日グループの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Item(System.Int32)">
            <summary>インデックスを指定して指定日グループを取得または設定します。</summary>
            <param name="index">取得または設定する値の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.Filtering.FixedDateGroupCollection.Count" /> 以上の値です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てられた値はすでにこのコレクションにあります。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter">
            <summary>具体的な指定値に基づいて表示セルを絞り込むことのできるフィルターです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType">
            <summary><see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups" /> コレクションに含まれる値の解釈に使用されるカレンダー タイプを取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.CalendarType" /> 列挙体で定義されません。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups">
            <summary>表示される固定日付グループのコレクションを取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues">
            <summary>表示されるセル テキスト値のコレクションを取得します。</summary>
            <remarks>
            <p class="body">テキスト値は大文字と小文字を区別せずに比較されます。</p>
            <p class="note"><b>注:</b> テキスト値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなるか、フィルターを再適用すると一致するセルのいくつかが非表示になる場合があります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.IncludeBlanks">
            <summary>空のセルを表示するかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.InvalidOperationException">
            値が False に設定されており、<see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DateGroups" /> と <see cref="P:Infragistics.Documents.Excel.Filtering.FixedValuesFilter.DisplayValues" /> は両方とも値を含みません。 
            これによって、フィルターが値を含まないようにします。これは <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> には許可されません。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.FontColorFilter">
            <summary>フォントの色に基づいてセルを絞り込むフィルターを表します。</summary>
            <remarks>
            <p class="body">このフィルターには 1 つの色を指定します。この色のフォントのセルがデータ範囲に表示されることになります。他のセルはすべて非表示になります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.FontColorFilter.FontColorInfo">
            <summary>フィルターするセルに使用するフォントの色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得または設定します。</summary>
            <remarks>
            <p class="body">このフォントの色のセルがデータ範囲に表示されることになります。他のセルはすべて非表示になります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <value>セルの絞り込みに使用する色を説明する WorkbookColorInfo。</value>
            <seealso cref="T:System.Type" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter">
            <summary>フィルターの適用日を基点とした相対日付によって日付セルの範囲を絞り込むことのできるフィルターです。</summary>
            <remarks>
            <p class="body">RelativeDateRangeFilter では、フィルターの適用日を基点として、1 つ前、現在、または次の期間に含まれる日付に絞り込むことができます。指定できる期間は、日、週、月、四半期、および年です。したがって、期間に day を指定して previous というフィルター タイプを使用すると、「yesterday」というフィルターが作成されます。あるいは、期間に year を指定して current というフィルター タイプを使用すると、「this year」というフィルターが作成されます。ただし、こうしたフィルターは、フィルターの作成日を基準日としてデータを評価します。したがって、1999 年に作成された「this year」というフィルターを使用すると、たとえ 2012 年にワークブックを開いたとしても、1999 年の日付を含むセルがすべて表示されることになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration">
            <summary>許容される全日付範囲の期間を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration" /> 列挙体で定義されません。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Offset">
            <summary>相対フィルターのオフセット (previous、current、または next) を取得または設定します。</summary>
            <remarks>
            <p class="body">このタイプのフィルターを <see cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration" /> と組み合わせて使用すると、絞り込む相対日付範囲が決定されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset" /> 列挙体で定義されません。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter.Duration" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter">
            <summary>並べ替えられた値リストの上位または下位にあるセルを表示できるフィルターです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type">
            <summary>フィルターのタイプを取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定した値が <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType" /> 列挙体に定義されていません。
            </exception>
            <value>
            並べ替えられた値リストの上位または下位 N 個の値を表示する場合には TopValues または BottomValues を指定し、並べ替えられた値リストの上位または下位 N パーセントの値を表示する場合には TopPercentage または BottomPercentage を指定します。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Value" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Value">
            <summary>表示する値の数またはパーセンテージを取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter.Type" /> が TopValues または BottomValues である場合、Value は表示される値の数を示します。Type が TopPercentage または BottomPercentage である場合、Value は表示されるパーセンテージを示します。たとえば、Value を 15 にして Type を BottomPercentage に設定すると、下位 15 パーセントの値が表示されることになります。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            1 未満または 500 よりも大きな値が指定されました。
            </exception>
            <value>表示する項目の数またはパーセンテージ。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter">
            <summary>日付セルの範囲を現在の年の開始日からフィルターの評価実施日までの期間に絞り込むことのできるフィルターです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter" />
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedStringFont">
            <summary><see cref="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString" /> の文字の範囲の書式を制御します。</summary>
            <remarks>
            <p class="body">文字列の書式は、Microsoft Excel と同様の方式で制御されます。Excel では、ユーザーはテキストの一部分を選択し、選択したテキストのさまざまな書式プロパティを設定します。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString" /> では、文字列の一部分は <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32)">GetFont(int)</see> または <see cref="M:Infragistics.Documents.Excel.FormattedString.GetFont(System.Int32,System.Int32)">GetFont(int,int)</see> で呼び出すことによって選択されます。書式プロパティは、返される FormattedStringFont で設定され、フォントの選択範囲のすべての文字がこれらのプロパティで指定されます。</p>
            <p class="body">FormattedStringFont の書式プロパティを取得すると、フォントの選択範囲で最初の文字の書式を返します。これは Excel と似ており、セルのテキストが選択されると、選択範囲の最初の文字の書式を反映するために書式インタフェースを更新します。</p>
            </remarks>
            <seealso cref="T:FormattedString" />
            <seealso cref="M:FormattedString.GetFont(int)" />
            <seealso cref="M:FormattedString.GetFont(int,int)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedStringFont.FormattedString">
            <summary>このフォントで制御される書式化された文字列を取得します。</summary>
            <value>このフォントで制御される書式化された文字列。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextFont">
            <summary><see cref="T:FormattedText" /> に含まれる一定範囲の文字に関する書式を制御します。</summary>
            <remarks>
            <p class="body">文字列の書式は、Microsoft Excel と同様の方式で制御されます。Excel では、ユーザーはテキストの一部分を選択し、選択したテキストのさまざまな書式プロパティを設定します。</p>
            <p class="body"><see cref="T:FormattedText" /> では、<see cref="T:FormattedText.GetFont(int)" /> または <see cref="T:FormattedText.GetFont(int,int)" /> を呼び出すことによって文字列の一部分を「selected」(選択状態) に設定します。その後、返された FormattedTextFont に対して書式のプロパティが設定され、こうしたプロパティはフォントの選択範囲に含まれるすべての文字に設定されます。</p>
            <p class="body">FormattedTextFont の書式設定プロパティを取得すると、フォントの選択範囲にある最初の文字の書式が返されます。</p>
            </remarks>
            <seealso cref="T:FormattedText" />
            <seealso cref="T:FormattedText.GetFont(int)" />
            <seealso cref="T:FormattedText.GetFont(int,int)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextFont.FormattedText">
            <summary>このフォントによって制御される <see cref="T:FormattedText" /> を取得します。</summary>
            <value>このフォントによって制御される FormattedText。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextParagraph">
            <summary><see cref="T:FormattedText" /> 内の段落を表します。</summary>
            <seealso cref="T:FormattedText.Paragraphs" />
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.Alignment">
            <summary>この段落の配置を取得または設定します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.FormattedText">
            <summary>この段落の所属する <see cref="T:FormattedText" /> が返されます。この段落が親の書式付きテキストから削除されている場合は null 値が返されます。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.StartIndex">
            <summary>全体的な書式付きテキストにおけるこの段落の先頭文字の0 から始まるインデックスを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraph.UnformattedString">
            <summary>この段落の生文字列を取得または設定します。</summary>
            <remarks>
            <p class="body">新たに割り当てた書式設定のない文字列が以前の書式未設定文字列よりも短い場合、新たな値のデータ範囲から外れる書式設定はすべて失われます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null 文字列です。
            </exception>
            <value>書式化されていない文字列。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.FormattedTextParagraphCollection">
            <summary><see cref="T:FormattedText" /> に含まれる <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph" /> インスタンスのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.FormattedText.Paragraphs" />
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Add(System.String)">
            <summary>指定されたテキストからなる段落を追加し、新たに追加された段落を表す <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph" /> を返します。</summary>
            <param name="paragraphText">この段落に含まれるテキスト。</param>
            <returns>新たに追加された段落を表す FormattedTextParagraph。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Clear">
            <summary>この書式付きテキストから段落をすべて削除します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Contains(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>指定した段落がコレクションに含まれているかどうかを調べます。</summary>
            <param name="paragraph">コレクションに含まれているかどうかを調べたい段落。</param>
            <returns>指定した段落がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.GetEnumerator">
            <summary>すべての段落を繰り返し走査する列挙体を取得します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.IndexOf(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>コレクション内における指定した段落の 0 から始まるインデックスを取得します。</summary>
            <param name="paragraph">コレクションに含まれているかどうかを調べたい段落。</param>
            <returns>コレクション内における指定した段落の位置が 0 から始まるインデックスとして返されます。指定した段落がコレクション内に存在しない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Insert(System.Int32,System.String)">
            <summary>指定されたテキストを含む段落を挿入し、新たに挿入された段落を表す <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph" /> を返します。</summary>
            <param name="index">コレクション内での段落の挿入位置を表す 0 から始まるインデックス。</param>
            <param name="paragraphText">この段落に含まれるテキスト。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、またはこのコレクションに含まれる段落の数を超える値です。
            </exception>
            <returns>新たに追加された段落を表す FormattedTextParagraph。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Remove(Infragistics.Documents.Excel.FormattedTextParagraph)">
            <summary>指定した段落をコレクションから削除します。</summary>
            <param name="paragraph">コレクションから削除する段落。</param>
            <returns>指定した段落がコレクションに含まれている、あるいは削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormattedTextParagraphCollection.RemoveAt(System.Int32)">
            <summary>0 から始まるインデックス値によって段落の位置を指定し、その段落をコレクションから削除します。</summary>
            <param name="index">削除する段落の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、またはコレクションに含まれる段落数以上の値です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Count">
            <summary>このコレクションに含まれる段落の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.FormattedTextParagraphCollection.Item(System.Int32)">
            <summary>0 から始まるインデックスを指定して段落を取得します。</summary>
            <param name="index">取得する段落の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、またはコレクションに含まれる段落数以上の値です。
            </exception>
            <returns>指定されたインデックスにある段落を表す <see cref="T:Infragistics.Documents.Excel.FormattedTextParagraph" />。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReferenceCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> オブジェクトのコレクション。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference">
            <summary>主要な参照インターフェイス。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.CreateReference(System.String)">
            <summary>この参照に相対して、新しい参照を作成します。</summary>
            <param name="referenceString">参照文字列。</param>
            <returns>新しい参照。</returns>
            <remarks>参照文字列は、外部と内部のどちらも可能です。<p>外部参照は、//object_name/object_specific_part の書式を持ちます。object_name で識別されるコントロールは <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference" /> を実装して object_specific_part (オブジェクトに固有な成分) の解析機能を装備する必要があります。</p>
            <p>内部参照は、インタフェースのこのインスタンスを実装している同一コントロール内の参照です。内部参照は、絶対と相対のどちらも可能です。絶対参照は、&quot;/&quot; 文字で始める必要があります。この参照は、コントロールのルートオブジェクトに相対して作成する必要があります。相対参照は、この参照に相対して作成されます。</p>
            <p>複雑な参照モデルでは、複数の参照文字列が同一の元のオブジェクトを 指すことができることに注意してください。参照の作成に使用する参照文字列は、 ResolveReference、References、および MarkRelativeIndicies などの他のメソッドが 使用できる必要があります。したがって、参照文字列が相対の場合、 相対参照文字列を保持するプロキシ参照オブジェクトが返されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.ContainsReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>この参照が inReference を含む場合 true を返します。</summary>
            <param name="inReference">含まれている候補。</param>
            <returns>含まれている候補。</returns>
            <remarks>このメソッドは、パスイン参照の形態 (この参照の子項目であるか、この参照をフルスコープ化したものであるか) を判定するために計算エンジンで使用されるメソッドです。この参照内の各要素が入力参照内の対応する要素と比較されます。識別子が同じで、このスコープが入力スコープを含む場合、入力参照はこの参照に含まれています。識別子が同一で、このスコープが入力スコープを含む場合、 入力参照がこの参照によって含まれます。</remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.IsSubsetReference(Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference)">
            <summary>inReference がこの参照の真のサブセットの場合、True を返します。</summary>
            <param name="inReference">サブセット候補。</param>
            <returns>含まれている候補。</returns>
            <remarks>このメソッドは、この参照の完全性 (つまり、パスイン参照を完全に包含するものかどうか) を判定するために計算エンジンで使用されるメソッドです。この参照内の各要素が入力参照内の対応する要素と比較されます。識別子が同じで、このスコープが入力スコープを完全に含む場合、入力参照はこの参照の正しいサブセットです。</remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.AbsoluteName">
            <summary>被参照要素の一意の完全修飾名。読み取り専用。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.ElementName">
            <summary>この参照要素の非修飾名。読み取り専用。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Value">
            <summary>この Reference に関連付けられた <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" /> です。この参照が値を含まない場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> が返されます。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Formula">
            <summary>この Reference に関連付けられた <see cref="T:Infragistics.Documents.Excel.CalcEngine.IExcelCalcFormula" /> です。この参照に数式が含まれない場合は、null が返されます。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.Context">
            <summary>参照のコンテキストを返します。</summary>
            <remarks><p class="body">参照の有効なオブジェクトコンテキストを返します。これは、UltraGridCell、UltraGridColumn、NamedReference、Controlなどが可能です。</p></remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.References">
            <summary>この参照が列挙可能の場合、参照のコレクションを返します。この参照が列挙不可能な場合、例外がスローされます。</summary>
            <returns>参照コレクション。</returns>
            <remarks>このメソッドによって返されたコレクションは、参照を作成するために使用された元の文字列に指定されたスコープに制限されます。たとえば、元に参照文字列が [Customers(State=&quot;MA&quot;)/Total] の場合、コレクションがすべての State = &quot;MA&quot; を持つ顧客の Total セルに制限されます。</remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.IsEnumerable">
            <summary>この参照が列挙可能な場合 true を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.IExcelCalcReference.NormalizedAbsoluteName">
            <summary>標準化された絶対名を返します。計算エンジンでは、正規化された絶対参照名が使用され、２ つの参照名の比較結果に基づいてそれぞれの参照先が特定されます。このプロパティは、絶対名の大文字小文字が区別されない部分を小文字に変換した文字列を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase.SetAndCompileFormula(Infragistics.Documents.Excel.Formula,System.Boolean)">
            <summary>参照に数式を更新します。</summary>
            <param name="newExcelFormula"></param>
            <param name="canClearPreviouslyCalculatedValue">ワークブックが手動計算モードの場合、キャッシュされた計算値を最初計算と上書きするかどうかを示します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase.SetAndCompileFormula(Infragistics.Documents.Excel.Formula,System.Boolean,System.Boolean,System.Boolean)">
            <summary>参照に数式を更新します。</summary>
            <param name="newExcelFormula">参照に適用する新しい数式。</param>
            <param name="canClearPreviouslyCalculatedValue">ワークブックが手動計算モードの場合、キャッシュされた計算値を最初計算と上書きするかどうかを示します。</param>
            <param name="forceSet">指定した数式が既に参照に適用されている場合も、設定ロジックの使用が必要になるかどうかを示します。</param>
            <param name="shouldRemoveCompiledFormulas">コンパイルした数式を Formula の appliedFormulas コレクションから削除するかどうかを示します。適用された数式を再追加する場合に False を設定します。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.DependencyGraph.DirtySingleReference(Infragistics.Documents.Excel.FormulaUtilities.CalcEngine.RefBase)">
            <summary>単一の参照をダーティとしてマークします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.CalcManagerUtilities.EnumGetValues(System.Type)">
            <summary>列挙体から値を取得します。</summary>
            <param name="enumType">列挙体のタイプ。</param>
            <returns>列挙体の値の配列。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.FrozenPaneSettings">
            <summary>固定されたペインがワークシートで整理および使用される方法を制御するクラス。</summary>
            <remarks>
            <p class="note"><B>注:</B> 固定されたペインと固定されていないペインは同時に使用できないので、ペインが固定されているどうかによって、これらの設定が使用されない、または保存されない場合があります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" />
            <seealso cref="T:Infragistics.Documents.Excel.UnfrozenPaneSettings" />
        </member>
        <member name="T:Infragistics.Documents.Excel.PaneSettingsBase">
            <summary>ペイン設定を制御するクラスの抽象基本クラス。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.FrozenPaneSettings" />
            <seealso cref="T:Infragistics.Documents.Excel.UnfrozenPaneSettings" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PaneSettingsBase.Reset">
            <summary>ペイン設定をデフォルトにリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.PaneSettingsBase.ResetCore">
            <summary>ペイン設定をデフォルトにリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.PaneSettingsBase.FirstColumnInRightPane">
            <summary>ワークシートの右ペインの最初の表示可能な列を取得または設定します。</summary>
            <remarks>
            <p class="body">これはワークシートの右ペインのスクロール位置に影響を及ぼし、ワークシートが垂直方向に分割される場合に限って使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した値は有効な列範囲の外です (ワークブックの <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> によって 0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> よりも 1 つ小さい)。
            </exception>
            <value>右ペインの最初の表示可能な列の 0 で始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PaneSettingsBase.FirstRowInBottomPane">
            <summary>ワークシートの下ペインの最初の表示可能な行を取得または設定します。</summary>
            <remarks>
            <p class="body">これはワークシートの下ペインのスクロール位置に影響を及ぼし、ワークシートが水平方向に分割される場合に限って使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            割り当てた値が有効な行値の範囲外です (ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> によって、有効な値は、0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount" /> -1 または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount" /> -1 までの範囲になります)。
            </exception>
            <value>下ペインの最初の表示可能な行の 0 で始まるインデックス。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.FrozenPaneSettings.ResetCore">
            <summary>固定されたペイン設定をデフォルトにリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.FrozenPaneSettings.FrozenColumns">
            <summary>ワークシートの左で固定された列の数を取得または設定します。</summary>
            <remarks>
            <p class="body">固定された列は、ワークシートの水平方向のスクロール位置に関係なく常に表示されます。</p>
            <p class="note"><B>注:</B> 指定した固定列の数がワークシートの表示可能な列の数より大きい場合、ワークシートは正しくスクロールされない場合があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            割り当てた値が有効な列カウントではありません (ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> によって、有効な値は、0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> までの範囲になります)。
            </exception>
            <value>ワークシートの左側で固定された列の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.FrozenPaneSettings.FrozenRows">
            <summary>ワークシートの上で固定された行の数を取得または設定します。</summary>
            <remarks>
            <p class="body">固定された行は、ワークシートの垂直方向のスクロール位置に関係なく常に表示されます。</p>
            <p class="note"><B>注:</B> 指定した固定行の数がワークシートの表示可能な行の数より大きい場合、ワークシートは正しくスクロールされない場合があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した値は有効な行カウントではありません (ワークブックの <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount" /> によって 0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> まで)。
            </exception>
            <value>ワークシートの上側で固定された行の数。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HiddenColumnCollection">
            <summary>非表示の <see cref="T:Infragistics.Documents.Excel.WorksheetColumn" /> インスタンスのコレクション。</summary>
            <remarks>
            <p class="body">このコレクションの列は、その列の <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> プロパティが True に設定されている必要はありません。このコレクションは <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Worksheet" /> に適用しますが、<see cref="T:Infragistics.Documents.Excel.CustomView" /> に属しません。このコレクションを所有する CustomView が適用されると、このコレクションの列は、列の <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> プロパティを True に設定します。ワークシートに関連するすべての他の列は表示可能になります。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenColumns(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Add(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>コレクションに列を追加します。</summary>
            <remarks>
            <p class="body">このコレクションは、値の重複を許可しません。指定した列がコレクションにすでに存在する場合は何も起こりません。このコレクションはそれ自体をソートするので、追加された列はコレクションの最後に追加する必要はありません。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="column" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="column" /> は、このコレクションが関連する同じワークシートに属しません。
            </exception>
            <param name="column">非表示の列コレクションに追加される列。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Clear">
            <summary>このコレクションからすべての列をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Contains(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>指定した列がコレクション内に存在するかどうかを決定します。</summary>
            <param name="column">コレクションで検索するための列。</param>
            <returns>列がコレクションに存在する場合は True、そうでない場合や指定された列が null であれば False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.Remove(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>指定した列が存在する場合、コレクションから削除します。</summary>
            <param name="column">コレクションから削除する列。</param>
            <returns>列がコレクションに存在していて削除された場合は True、そうでない場合や指定された列が null であれば False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenColumnCollection.RemoveAt(System.Int32)">
            <summary>コレクション内の指定したインデックスで列を削除します。</summary>
            <param name="index">コレクションに含まれる列の 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count">
            <summary>このコレクション内の列の数を取得します。</summary>
            <value>このコレクション内の列の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Item(System.Int32)">
            <summary>指定したインデックスで列を取得します。</summary>
            <param name="index">取得する列の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.HiddenColumnCollection.Count" /> 以上です。
            </exception>
            <value>指定されたインデックスにある列。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenColumnCollection.Worksheet">
            <summary>このコレクションに関連付けられたワークシートを取得します。</summary>
            <value>このコレクションに関連付けられたワークシート。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HiddenRowCollection">
            <summary>非表示の <see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> インスタンスのコレクション。</summary>
            <remarks>
            <p class="body">このコレクションの列は、その行の <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> プロパティが True に設定されている必要はありません。このコレクションは <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Worksheet" /> に適用しますが、<see cref="T:Infragistics.Documents.Excel.CustomView" /> に属しません。このコレクションを所有する CustomView が適用されると、このコレクションの行は、行の <see cref="P:Infragistics.Documents.Excel.RowColumnBase.Hidden" /> プロパティを True に設定します。ワークシートに関連するすべての他の行は表示可能になります。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetHiddenRows(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Add(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>コレクションに行を追加します。</summary>
            <remarks>
            <p class="body">このコレクションは、値の重複を許可しません。指定した行がコレクションにすでに存在する場合は何も起こりません。このコレクションはそれ自体をソートするので、追加された行はコレクションの最後に追加する必要はありません。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="row" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="row" /> は、このコレクションが関連する同じワークシートに属しません。
            </exception>
            <param name="row">非表示の行コレクションに追加される行。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Clear">
            <summary>このコレクションからすべての行をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Contains(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>指定した行がコレクション内に存在するかどうかを決定します。</summary>
            <param name="row">コレクションで検索するための行。</param>
            <returns>行がコレクションに存在する場合は True、そうでない場合や指定された行が null であれば False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.Remove(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>指定した行が存在する場合、コレクションから削除します。</summary>
            <param name="row">コレクションから削除する行。</param>
            <returns>行がコレクションに存在していて削除された場合は True、そうでない場合や指定された行が null であれば False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.HiddenRowCollection.RemoveAt(System.Int32)">
            <summary>コレクション内の指定したインデックスで行を削除します。</summary>
            <param name="index">コレクションに含まれる行の 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Count">
            <summary>このコレクション内の行の数を取得します。</summary>
            <value>このコレクション内の行の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Item(System.Int32)">
            <summary>指定したインデックスで行を取得します。</summary>
            <param name="index">取得する行の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.HiddenRowCollection.Count" /> 以上です。
            </exception>
            <value>指定されたインデックスにある行。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.HiddenRowCollection.Worksheet">
            <summary>このコレクションに関連付けられたワークシートを取得します。</summary>
            <value>このコレクションに関連付けられたワークシート。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReference">
            <summary>ワークブックで定義された名前付き参照を表します。</summary>
            <remarks>
            <p class="body">名前付き参照によって、名前は複雑な数式またはセル参照の代わりに数式で使用されます。たとえば、数値 =SUM(E1:E20) を使用する代わりに、&apos;Sales&apos; の名前がある名前付き参照を E1:E20 の範囲にポイントするために定義できます（名前付き参照の数式は以下のように定義されます: =Sheet1!$E$1:$E$20)。次にオリジナルの数式は =SUM(Sales) と表現できます。</p>
            <p class="body">それぞれの名前付き参照は関連付けられた範囲を持ち、これは名前付き参照が属する <see cref="P:Infragistics.Documents.Excel.NamedReference.Workbook" /> またはワークブックの <see cref="T:Infragistics.Documents.Excel.Worksheet" /> インスタンスのひとつである場合があります。この範囲は、名前が異なるセルの数式でどのように参照される必要があるかを決定します。ワークブックの範囲は、名前付き参照が名前だけで指定したワークブックのセルで数式によってアクセスする必要があることを意味します。ワークブックの範囲は、他のワークシートで使用される数式が =SUM( Sheet2!Sales ) などのワークシート範囲を最初に指定することで名前を参照する必要があることを意味します。数式が名前付き参照の範囲として同じワークシートにある場合、この数式はワークシート名付きまたはワークシート名なしの名前を参照できます。</p>
            <p class="body">外部ワークブックからの名前付き参照は常に、最初に範囲で参照する必要があります。名前付き参照の範囲が外部ワークブックである場合、以下の数式で名前に続くワークブック ファイル名を指定することで名前にアクセスされます: =&apos;C:\ExternalWorkbook.xls&apos;!SalesTax。名前付き参照がワークブックのワークシートの範囲を持つ場合、以下のようにファイル名、ワークシート、および名前を指定することで参照されます: =&apos;C:\[ExternalWorkbook.xls]Sheet1&apos;!SalesTax。</p>
            <p class="body">異なる範囲を持つ名前付き参照は同じ名前を持つことができますが、2 つの名前付き参照が同じ範囲を持つ場合、大文字と小文字を区別しない一意の名前を持つ必要があります。</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReferenceBase">
            <summary>ワークブック内で定義される名前付き参照の抽象基本クラス。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Comment">
            <summary>名前付き参照またはテーブルに関連付けられたコメントを取得または設定します。</summary>
            <exception cref="T:System.ArgumentException">
            指定した値は 255 文字より長いです。
            </exception>
            <value>名前付き参照またはテーブルに関連付けられたコメント。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Name">
            <summary>参照の名前を取得または設定します。</summary>
            <remarks>
            <p class="body">名前付け参照を数式内の名前で検索する方法については、<see cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope" /> の概要を参照してください。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            割り当てた値が null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てた値の長さが 255 文字を超えています。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値は有効な名前付き参照ではありません。名前は文字、下線（_）、またはバックスラッシュ（\）で始まる必要があります。
            名前のすべての他の文字は、文字、数字、ピリオド、下線（_）またはバックスラッシュ（\）でなければなりません。
            名前は A1 セル参照にできません（1 から 3 文字が 1 から 6 の数によって続く）。さらに、名前は &apos;r&apos;, &apos;R&apos;, &apos;c&apos;, or &apos;C&apos; または R1C1 セル参照モードで行または列参照で開始できません (&apos;R&apos; が 1 から 6 の数字によって続くか、&apos;C&apos; が 1 から 6 の数字によって続く)。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は、同じスコープでの他の名前付き参照の名前です。 
            名前は大文字と小文字を区別せずに比較されます。
            </exception>
            <value>参照の名前です。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope">
            <summary>名前付き参照の範囲を取得します。</summary>
            <remarks>
            <p class="body">これは名前付き参照が属するワークブックか、ワークブックのワークシートの 1 つである可能性があります。</p>
            <p class="body">範囲は、名前付き参照を使用するために数式を名前の前に配置する必要があるかどうかを決定します。</p>
            <p class="body">この範囲がワークブックの場合、ワークブックのセルの数式は、ワークブックのファイル名、エクスクラメーション ポイント、および以下の名前を指定することによって名前付き参照を参照できます。<list type="bullet">
            <item>=MyWorkbookName</item>
            <item>=&apos;C:\MyWorkbook.xls&apos;!MyWorkbookName</item>
            </list>他のワークブックのセルが名前付き参照を参照したい場合、ワークブックの範囲の名前付き参照が存在する場合にファイル名を最初に指定することで 2 番目の書式を使用する必要があります。</p>
            <p class="body">範囲がワークシートである場合、ワークシートのセルの数式は、名前だけを指定して名前付き参照を参照できます。さらに、ワークシートの名前で名前付き参照を完全に修飾したり、オプションでワークブック ファイル名を修飾できます。<list type="bullet">
            <item>=MyWorksheetName</item>
            <item>=Sheet1!MyWorksheetName</item>
            <item>=&apos;C:\[MyWorkbook.xls]Sheet1&apos;!MyWorksheetName</item>
            </list>同じワークブックの他のワークシートのセルの数式は名前付き参照でも使用できますが、ワークシート名を指定する必要があり、オプションでワークブック ファイル名が必要です。<list type="bullet">
            <item>=Sheet2!OtherWorksheetName</item>
            <item>=&apos;C:\[MyWorkbook.xls]Sheet2&apos;!OtherWorksheetName</item>
            </list>他のワークブックのセルの数式は、名前付き参照も使用できますが、ワークブック ファイル名、ワークシート名、および名前付き参照名を指定する必要があります。</p>
            </remarks>
            <value>名前付き参照の範囲。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.ToString">
            <summary>名前付き参照の文字列表現を取得します。</summary>
            <returns>名前付き参照の文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String)">
            <summary>名前付き参照の数式を設定します。</summary>
            <remarks>
            <p class="body">この数式は、NamedReference が適用される <see cref="P:Infragistics.Documents.Excel.NamedReference.Workbook" /> の <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> を使用して解析されます。NamedReference がコレクションから削除された場合、A1 参照モードは数式を解析するために使用されます。</p>
            </remarks>
            <param name="formula">数式値を含む文字列。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>名前付き参照の数式を設定します。</summary>
            <param name="formula">数式値を含む文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode,System.Globalization.CultureInfo)">
            <summary>名前付き参照の数式を設定します。</summary>
            <param name="formula">数式値を含む文字列。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="culture">数式を解析するために使用されるカルチャー。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.Formula" />
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.Formula">
            <summary>名前付き参照を定義する数式を取得します。</summary>
            <value>名前付き参照を定義する数式。</value>
            <seealso cref="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.NamedReference.SetFormula(System.String,Infragistics.Documents.Excel.CellReferenceMode)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula">
            <summary><see cref="P:Infragistics.Documents.Excel.NamedReference.Formula" /> が単一のセル、単一の領域、または名前付きの参照と同じワークブックにある複数の領域へ参照する簡易な数式であるかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">参照がカッコまたは空白に含まれているか、名前付き参照が複雑な数式を持つ場合、false を返します。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell">
            <summary><see cref="P:Infragistics.Documents.Excel.NamedReference.Formula" /> によって参照される <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> を取得します。</summary>
            <remarks>
            <p class="body">名前付き参照が 1 つ以上の領域への参照の場合、null を返します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula" />
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion">
            <summary><see cref="P:Infragistics.Documents.Excel.NamedReference.Formula" /> によって参照される <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
            <remarks>
            <p class="body">名前付き参照が単一のセルまたは複数の領域への参照の場合、null を返します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula" />
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions">
            <summary><see cref="P:Infragistics.Documents.Excel.NamedReference.Formula" /> によって参照された <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> インスタンスの配列を取得します。</summary>
            <remarks>
            <p class="body">名前付き参照が単一のセルまたは単一の領域への参照の場合、null を返します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.IsSimpleReferenceFormula" />
        </member>
        <member name="T:Infragistics.Documents.Excel.NamedReferenceCollection">
            <summary>ワークシートの <see cref="T:Infragistics.Documents.Excel.NamedReference" /> インスタンスのコレクション。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.NamedReference" />
            <seealso cref="T:Workbook.NamedReferences" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String)">
            <summary>コレクションの関連する <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook" /> のコレクションに対する範囲で名前付き参照を追加します。</summary>
            <remarks>
            <p class="body">所有する <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> の <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook" /> は、数式を解析するために使用されます。</p>
            </remarks>
            <param name="name">名前付き参照を指定するための名前。</param>
            <param name="formula">名前付き参照を指定するための数式。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は無効です。名前は文字、下線（_）、またはバックスラッシュ（\）で始まる必要があります。
            名前のすべての他の文字は、文字、数字、ピリオド、下線（_）またはバックスラッシュ（\）でなければなりません。
            名前は A1 セル参照にできません（1 から 3 文字が 1 から 6 の数によって続く）。さらに、名前は &apos;r&apos;, &apos;R&apos;, &apos;c&apos;, or &apos;C&apos; または R1C1 セル参照モードで行または列参照で開始できません (&apos;R&apos; が 1 から 6 の数字によって続くか、&apos;C&apos; が 1 から 6 の数字によって続く)。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name" /> は、ワークブックの範囲も持つ他の名前付き参照で使用されます。 
            名前付き参照名は大文字と小文字を区別せずに比較されます。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <returns>コレクションに追加された名前付き参照。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>コレクションの関連する <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook" /> のコレクションに対する範囲で名前付き参照を追加します。</summary>
            <param name="name">名前付き参照を指定するための名前。</param>
            <param name="formula">名前付き参照を指定するための数式。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は無効です。名前は文字、下線（_）、またはバックスラッシュ（\）で始まる必要があります。
            名前のすべての他の文字は、文字、数字、ピリオド、下線（_）またはバックスラッシュ（\）でなければなりません。
            名前は A1 セル参照にできません（1 から 3 文字が 1 から 6 の数によって続く）。さらに、名前は &apos;r&apos;, &apos;R&apos;, &apos;c&apos;, or &apos;C&apos; または R1C1 セル参照モードで行または列参照で開始できません (&apos;R&apos; が 1 から 6 の数字によって続くか、&apos;C&apos; が 1 から 6 の数字によって続く)。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name" /> は、ワークブックの範囲も持つ他の名前付き参照で使用されます。 
            名前付き参照名は大文字と小文字を区別せずに比較されます。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <returns>コレクションに追加された名前付き参照。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.Worksheet)">
            <summary>コレクションにワークシートの範囲の名前付き参照を追加します。</summary>
            <remarks>
            <p class="body">所有する <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> の <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook" /> は、数式を解析するために使用されます。</p>
            </remarks>
            <param name="name">名前付き参照を指定するための名前。</param>
            <param name="formula">名前付き参照を指定するための数式。</param>
            <param name="worksheet">名前付き参照の範囲。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は無効です。名前は文字、下線（_）、またはバックスラッシュ（\）で始まる必要があります。
            名前のすべての他の文字は、文字、数字、ピリオド、下線（_）またはバックスラッシュ（\）でなければなりません。
            名前は A1 セル参照にできません（1 から 3 文字が 1 から 6 の数によって続く）。さらに、名前は &apos;r&apos;, &apos;R&apos;, &apos;c&apos;, or &apos;C&apos; または R1C1 セル参照モードで行または列参照で開始できません (&apos;R&apos; が 1 から 6 の数字によって続くか、&apos;C&apos; が 1 から 6 の数字によって続く)。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name" /> は、指定した <paramref name="worksheet" /> の範囲も持つ他の名前付き参照で使用されます。名前付き参照名は大文字と小文字を区別せずに比較されます。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="worksheet" /> は、このコレクションを所有するワークブックに属しません。
            </exception>
            <returns>コレクションに追加された名前付き参照。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Add(System.String,System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.Worksheet)">
            <summary>コレクションにワークシートの範囲の名前付き参照を追加します。</summary>
            <param name="name">名前付き参照を指定するための名前。</param>
            <param name="formula">名前付き参照を指定するための数式。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <param name="worksheet">名前付き参照の範囲。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は無効です。名前は文字、下線（_）、またはバックスラッシュ（\）で始まる必要があります。
            名前のすべての他の文字は、文字、数字、ピリオド、下線（_）またはバックスラッシュ（\）でなければなりません。
            名前は A1 セル参照にできません（1 から 3 文字が 1 から 6 の数によって続く）。さらに、名前は &apos;r&apos;, &apos;R&apos;, &apos;c&apos;, or &apos;C&apos; または R1C1 セル参照モードで行または列参照で開始できません (&apos;R&apos; が 1 から 6 の数字によって続くか、&apos;C&apos; が 1 から 6 の数字によって続く)。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="name" /> は、指定した <paramref name="worksheet" /> の範囲も持つ他の名前付き参照で使用されます。名前付き参照名は大文字と小文字を区別せずに比較されます。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="formula" /> は有効な数式ではありません。内部例外には、数式が有効でなかった理由を説明する <see cref="T:Infragistics.Documents.Excel.FormulaParseException" /> が含まれます。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="worksheet" /> は、このコレクションを所有するワークブックに属しません。
            </exception>
            <returns>コレクションに追加された名前付き参照。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Scope" />
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Clear">
            <summary>コレクションからすべての名前付き参照をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Contains(Infragistics.Documents.Excel.NamedReference)">
            <summary>名前付き参照がコレクションにあるかどうかを決定します。</summary>
            <param name="namedReference">このコレクションで見つけ出す名前付き参照。</param>
            <returns>名前付き参照が見つかった場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Find(System.String)">
            <summary>コレクションの関連する <see cref="T:Infragistics.Documents.Excel.Workbook" /> でコレクションの名前付き参照を検索します。</summary>
            <remarks>
            <p class="body">名前付き参照名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">検索の名前付き参照の名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <returns>指定した名前のある名前付き参照、または名前付き参照が見つからなかった場合は null。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Find(System.String,Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートの範囲でコレクションの名前付き参照を検索します。</summary>
            <remarks>
            <p class="body">名前付き参照名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">検索の名前付き参照の名前。</param>
            <param name="worksheetScope">見つかった名前付き参照が範囲を持つ必要があるワークシート。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheetScope" /> が null です。
            </exception>
            <returns>指定した名前のある名前付き参照、または名前付き参照が見つからなかった場合は null。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.FindAll(System.String)">
            <summary>指定した名前でコレクション内のすべての名前付き参照を検索します。</summary>
            <remarks>
            <p class="body">名前付き参照名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">検索の名前付き参照の名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <returns>指定した名前のある <see cref="T:Infragistics.Documents.Excel.NamedReference" /> インスタンスの配列。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.Remove(Infragistics.Documents.Excel.NamedReference)">
            <summary>指定した名前付き参照をコレクションから削除します。</summary>
            <param name="namedReference">このコレクションから削除するための名前付き参照。</param>
            <returns>名前付き参照がコレクションに存在していたか削除された場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.NamedReferenceCollection.RemoveAt(System.Int32)">
            <summary>コレクション内の指定したインデックスで名前付き参照を削除します。</summary>
            <param name="index">コレクションに含まれる名前付き参照の 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count">
            <summary>コレクション内の名前付き参照の数を取得します。</summary>
            <value>コレクション内の名前付き参照の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Item(System.Int32)">
            <summary>指定したインデックスにある名前付き参照を取得します。</summary>
            <param name="index">取得する名前付き参照の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.NamedReferenceCollection.Count" /> 以上です。
            </exception>
            <value>指定したインデックスにある名前付き参照。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.NamedReferenceCollection.Workbook">
            <summary>このコレクションに関連付けられたワークブックを取得します。</summary>
            <value>このコレクションに関連付けられたワークブック。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalPageBreak">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の水平の改ページを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
        </member>
        <member name="T:Infragistics.Documents.Excel.PageBreak">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の水平および垂直の改ページの基本クラス。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak" />
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreak.Equals(System.Object)">
            <summary>この <see cref="T:Infragistics.Documents.Excel.PageBreak" /> が指定したオブジェクトに等しいかどうかを判定します。</summary>
            <param name="obj">テストするオブジェクト。</param>
            <returns>オブジェクトがこの PageBreak と同じ型でデータが同じ場合は True、そうでない場合 False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreak.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.PageBreak" /> のハッシュ コードを取得します。</summary>
            <returns>インスタンスのハッシュコード。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreak.PrintArea">
            <summary>改ページが発生する印刷範囲。</summary>
            <value>
            改ページが発生する印刷範囲である <seealso cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> インスタンス。改ページがシート全体で発生する場合は null。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="M:Infragistics.Documents.Excel.HorizontalPageBreak.#ctor(System.Int32)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.HorizontalPageBreak" /> インスタンスを作成します。</summary>
            <param name="firstRowOnPage">この改ページ後のページ上の最初の行の 0 で始まるインデックス。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.HorizontalPageBreak.#ctor(System.Int32,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.HorizontalPageBreak" /> インスタンスを作成します。</summary>
            <param name="firstRowOnPage">この改ページ後のページ上の最初の行の 0 で始まるインデックス。</param>
            <param name="printArea">改ページが発生する印刷範囲か、シート全体で改ページが発生する場合は null。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="printArea" /> が null でなく、<paramref name="firstRowOnPage" /> が印刷範囲の外側にあるか、印刷範囲の先頭行のインデックスである場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="P:Infragistics.Documents.Excel.HorizontalPageBreak.FirstRowOnPage">
            <summary>この改ページ後のページ上の最初の行のゼロから始まるインデックスを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PageBreakCollection`1">
            <summary><see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet" /> の水平および垂直の改ページのコレクションの基本クラス。</summary>
            <typeparam name="T">コレクションに含まれる改ページの型。</typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreakCollection" />
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreakCollection" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Add(`0)">
            <summary><see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet" /> に改ページを追加します。</summary>
            <param name="pageBreak">Worksheet に追加する改ページ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pageBreak" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="pageBreak" /> がすでにコレクションに含まれている別の改ページと重複する場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Clear">
            <summary>改ページのコレクションをクリアします。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Contains(`0)">
            <summary>指定した改ページが <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet" /> に存在するかどうかを判定します。</summary>
            <param name="pageBreak">テストする改ページ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pageBreak" /> が null の場合に発生します。
            </exception>
            <returns>改ページが Worksheet 上にある場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.IndexOf(`0)">
            <summary>指定した改ページのゼロから始まるインデックスを取得します。</summary>
            <param name="pageBreak">インデックスを取得する改ページ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pageBreak" /> が null の場合に発生します。
            </exception>
            <returns>改ページのゼロで始まるインデックスか、改ページがコレクションに含まれていない場合は -1。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.Remove(`0)">
            <summary>指定した改ページを <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Worksheet" /> から削除します。</summary>
            <param name="pageBreak">削除する改ページ。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="pageBreak" /> が null の場合に発生します。
            </exception>
            <returns>削除前に改ページが Worksheet に含まれていた場合は True、そうでない場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PageBreakCollection`1.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある改ページを削除します。</summary>
            <param name="index">削除する改ページのゼロから始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、0 よりも小さいか、コレクション内の改ページ数以上の場合に発生します。
            </exception>
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreakCollection`1.Count">
            <summary>このコレクション内の改ページの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PageBreakCollection`1.Item(System.Int32)">
            <summary>指定したインデックスにある改ページを取得します。</summary>
            <param name="index">取得する改ページのインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 よりも小さいか <see cref="P:Infragistics.Documents.Excel.PageBreakCollection`1.Count" /> 以上の場合に発生します。
            </exception>
            <returns><see cref="T:Infragistics.Documents.Excel.PageBreak" /> から派生したインスタンス。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.HorizontalPageBreakCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 上の水平改ページのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak" />
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalPageBreakCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 上の水平改ページのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak" />
        </member>
        <member name="T:Infragistics.Documents.Excel.VerticalPageBreak">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の垂直の改ページを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
        </member>
        <member name="M:Infragistics.Documents.Excel.VerticalPageBreak.#ctor(System.Int32)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.VerticalPageBreak" /> インスタンスを作成します。</summary>
            <param name="firstColumOnPage">この改ページ後のページ上の最初の列の 0 で始まるインデックス。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.VerticalPageBreak.#ctor(System.Int32,Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.VerticalPageBreak" /> インスタンスを作成します。</summary>
            <param name="firstColumOnPage">この改ページ後のページ上の最初の列の 0 で始まるインデックス。</param>
            <param name="printArea">改ページが発生する印刷範囲か、シート全体で改ページが発生する場合は null。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="printArea" /> が null でなく、<paramref name="firstColumOnPage" /> が印刷範囲の外側にあるか、印刷範囲の左の列のインデックスである場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="P:Infragistics.Documents.Excel.VerticalPageBreak.FirstColumnOnPage">
            <summary>この改ページ後のページ上の最初の列のゼロから始まるインデックスを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape">
            <summary>菱形図形を表します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeWithText">
            <summary>テキストの表示ができるすべての形状の抽象基本クラスです。</summary>
            <remarks>
            <p class="body">プリミティブ形状 (例: ポリゴン) とセル コメントは、正規テキストまたはさまざまなフォーマットのテキスト、そしてクラスから派生されたテキストの表示ができます。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCellComment" />
            <seealso cref="T:Infragistics.Documents.Excel.UnknownShape" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShape">
            <summary>ワークシートのすべての形状（アトミックまたは複合）の抽象基本クラス。</summary>
            <remarks>
            <p class="body">アトミック形状は、画像、ポリゴン、またはテキストなどの単一の形状エンティティです。複合形状は形状のグループで、<see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> インスタンスによって表されます。</p>
            <p class="body">現在、すべての形状情報（形状の回転など）はカスタマイズできません。ただし、往復させる目的のため、形状は Excel ファイルから読み込みすると、この情報は形状で保持されます。サポートされていないデータについての詳細は、<see cref="M:Infragistics.Documents.Excel.WorksheetShape.ClearUnknownData" /> を参照してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.ClearUnknownData">
            <summary>解析された Excel ファイルからのリードインであったキャッシュされた不明な形状データをクリアします。</summary>
            <remarks>
            <p class="body">このメソッドは、すべての形状情報がサポートされカスタマイズ可能であるまで必要になるだけです。すべての形状データが制御可能となった後、このメソッドは不要になります。現在、すべてのサポートされていないデータは、往復の目的のために形状で保存されます。たとえば、複雑でサポートされていない形状を持つ Excel ファイルが <see cref="T:Infragistics.Documents.Excel.Workbook" /> インスタンスに読み込みされると、一部のセル値は変更され、同じファイルに保存され、複雑な形状はワークブックに存在します。ただし、保存される前に読み込みされた形状が変更される必要がある場合、このメソッドによって、すべてのサポートされるデータを保持しながら、サポートされていないデータを削除できます。</p>
            <p class="note"><B>注:</B> このメソッドはサポートされていないデータのみをクリアします。製品の将来のバージョンでは、より多くの形状データがサポートされ、このメソッドは形状に異なる影響を及ぼし、最終的にすべてのデータがサポートされ、このメソッドは形状に影響を持たなくなります。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            このメソッドは、<see cref="T:Infragistics.Documents.Excel.UnknownShape" /> インスタンスで呼び出されます。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.CreatePredefinedShape(Infragistics.Documents.Excel.PredefinedShapeType)">
            <summary>Microsoft Excel で定義済みの図形を作成します。</summary>
            <param name="shapeType">作成する図形のタイプ。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType" />が<see cref="T:Infragistics.Documents.Excel.PredefinedShapeType" />列挙体で定義されていないです。
            </exception>
            <returns>定義済みの図形を表す、<see cref="T:Infragistics.Documents.Excel.WorksheetShape" /> から派生したインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.GetBoundsInTwips">
            <summary>形状の境界を{\f9 トゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。形状の前または形状内の行または列のサイズが変更されると、これらの境界は形状の位置を反映しません。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> または <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> は null で、この場合は形状には境界がありません。
            </exception>
            <returns>ワークシートの形状の境界。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>形状の境界を{\f9 トゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。形状の前または形状内の行または列のサイズが変更されると、これらの境界は形状の位置を反映しません。</p>
            </remarks>
            <param name="options">図形の境界線を取得するときに使用するオプション。</param>
            <exception cref="T:System.InvalidOperationException">
            <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> または <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> は null で、この場合は形状には境界がありません。
            </exception>
            <returns>ワークシートの形状の境界。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)">
            <summary>形状の境界をトゥイップで設定します（ポイントの　1/20）。</summary>
            <remarks>
            <p class="body">形状は指定した境界に限って配置され、ワークシートは現在の構成で維持されます。図形の <see cref="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode" /> に基づいて、形状の行または列のサイズが変更される場合、境界線を変更する可能性があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <param name="worksheet">形状が配置されるワークシート。</param>
            <param name="bounds">形状が配置される新しい境界。</param> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>形状の境界をトゥイップで設定します（ポイントの　1/20）。</summary>
            <remarks>
            <p class="body">形状は指定した境界に限って配置され、ワークシートは現在の構成で維持されます。図形の <see cref="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode" /> に基づいて、形状の行または列のサイズが変更される場合、境界線を変更する可能性があります。</p>
            </remarks>s
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <param name="worksheet">形状が配置されるワークシート。</param>
            <param name="bounds">形状が配置される新しい境界。</param> 
            <param name="options">図形の境界線を設定するときに使用するオプション。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Fill">
            <summary>形状の背景に使用する塗りつぶしを取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> コネクタやグループなどの一部の形状には塗りつぶしセットがありません。これらの形状に関しては、ワークブックの保存時にこのプロパティの値は無視され、失われます。</p>
            </remarks>
            <value>形状の塗りつぶしを説明する<see cref="T:Infragistics.Documents.Excel.ShapeFill" />派生インスタンス、または塗りつぶしがない場合は null。</value>
            <seealso cref="M:Infragistics.Documents.Excel.ShapeFill.FromColor(System.Drawing.Color)" />
            <seealso cref="T:Infragistics.Documents.Excel.ShapeFillSolid" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell">
            <summary>形状の右下角に置かれているセルを取得または設定します。</summary>
            <remarks>
            <p class="body">このアンカー セルは、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> と共に、形状がワークシートに配置される場所を決定します。さらに、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition" /> および <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition" />　プロパティによって、形状の位置の詳細な制御ができます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値は、ワークシートがこの形状のワークシートと同じではないセルです。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値は null で、この形状はすでにワークシートまたはグループに存在します。
            </exception>
            <value>形状の右下角の置かれるセル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition">
            <summary>パーセントで表される形状の右下角の <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> で位置を取得または設定します。</summary>
            <remarks>
            <p class="body">これらのパーセントは、セルの左上角から開始するセルの関連する寸法の距離として表されます。たとえば、(0.0, 0.0) はセルの左上角を表し、(100.0, 100.0) はセルの右下角を表します。(50.0, 10.0) は、水平方向にセンタリングされ、上から 10% 下に移動されたセルの位置を表します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した値の座標は 0.0 から 100.0 の範囲の外です。
            </exception>
            <value>形状の右下角の右下角セルの位置。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.FlippedHorizontally">
            <summary>図形が垂直方向の中央線に沿って水平に反転しているかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.InvalidOperationException">
            値は True に設定され、<see cref="T:Infragistics.Documents.Excel.WorksheetChart" /> のように、この図形は反転または回転を許可しません。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.FlippedVertically">
            <summary>図形が水平方向の中央線に沿って垂直に反転しているかどうかを示す値を取得または設定します。</summary>
            <exception cref="T:System.InvalidOperationException">
            値は True に設定され、<see cref="T:Infragistics.Documents.Excel.WorksheetChart" /> のように、この図形は反転または回転を許可しません。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Outline">
            <summary>形状に使用するアウトラインを取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> コメントやグループなどの一部の形状にはアウトライン セットがありません。これらの形状に関しては、ワークブックの保存時にこのプロパティの値は無視され、失われます。</p>
            </remarks>
            <value>形状のアウトラインを説明する <see cref="T:Infragistics.Documents.Excel.ShapeOutline" /> 派生インスタンス、またはアウトラインがない場合は null。</value>
            <seealso cref="M:Infragistics.Documents.Excel.ShapeOutline.FromColor(System.Drawing.Color)" />
            <seealso cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.PositioningMode">
            <summary>形状の前または形状内のセルのサイズが変更される時に Excel で形状が再配置される方法を取得または設定します。</summary>
            <remarks>
            <p class="body">この値は <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> に含まれる形状のために保存されず、親グループからの配置モードを継承します。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            指定された値は、<see cref="T:Infragistics.Documents.Excel.ShapePositioningMode" /> 列挙体で定義されません。
            </exception>
            <value>形状の前または形状内のセルのサイズが変更される時に Excel で形状が再配置される方法。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell">
            <summary>形状の左上角に置かれているセルを取得または設定します。</summary>
            <remarks>
            <p class="body">このアンカー セルは、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> と共に、形状がワークシートに配置される場所を決定します。さらに、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition" /> および <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition" />　プロパティによって、形状の位置の詳細な制御ができます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値は、ワークシートがこの形状のワークシートと同じではないセルです。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            指定した値は null で、この形状はすでにワークシートまたはグループに存在します。
            </exception>
            <value>形状の左上角の置かれるセル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerPosition">
            <summary>パーセントで表される形状の左上角の <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> で位置を取得または設定します。</summary>
            <remarks>
            <p class="body">これらのパーセントは、セルの左上角から開始するセルの関連する寸法の距離として表されます。たとえば、(0.0, 0.0) はセルの左上角を表し、(100.0, 100.0) はセルの右下角を表します。(50.0, 10.0) は、水平方向にセンタリングされ、上から 10% 下に移動されたセルの位置を表します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した値の座標は 0.0 から 100.0 の範囲の外です。
            </exception>
            <value>形状の左上角の左上角セルの位置。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerPosition" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Visible">
            <summary>ワークシートに形状が表示されるかどうかを示す値を取得または設定します。</summary>
            <value>ワークシートに形状が表示されるかどうかを示す値です。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShape.Worksheet">
            <summary>形状が置かれるワークシートを取得します。</summary>
            <value>形状が置かれるワークシート。</value>
            // MD 9/2/08 - セル コメント
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeWithText.Text">
            <summary>形状の書式設定済みテキストを取得または設定します。</summary>
            <value>形状の書式設定済みテキスト。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.DiamondShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape">
            <summary>楕円図形を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.EllipseShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape">
            <summary>ハート型図形を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.HeartShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.HeartShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape">
            <summary>不規則なシール 1 図形を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal1Shape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape">
            <summary>不規則なシール 2 図形を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.IrregularSeal2Shape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape">
            <summary>稲妻の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LightningBoltShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape">
            <summary>線の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.LineShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.LineShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape">
            <summary>五角形の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.PentagonShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape">
            <summary>四角形の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RectangleShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape">
            <summary>三角形の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.RightTriangleShape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape">
            <summary>直線コネクタ 1 の形状を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.PredefinedShapes.StraightConnector1Shape" /> インスタンスを作成します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintAreasCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の印刷範囲または <see cref="T:Infragistics.Documents.Excel.CustomView" /> 内のワークシートの印刷設定を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Add(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>印刷範囲をコレクションに追加します。</summary>
            <param name="printArea">コレクションに追加する印刷範囲。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="printArea" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="printArea" /> がコレクション中の別の印刷範囲と重複する場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Clear">
            <summary>コレクションからすべての印刷範囲をクリアします。</summary>
            <remarks>
            <p class="body">印刷範囲に改ページが含まれている場合、そのコレクションから改ページが削除されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>指定した印刷範囲がこのコレクションに含まれているかどうかを判定します。</summary>
            <param name="printArea">コレクション中で検索するための印刷範囲。</param>
            <returns>印刷範囲がコレクションに含まれている場合は True、それ以外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>指定した印刷範囲をコレクションから削除します。</summary>
            <param name="printArea">コレクションから削除する印刷範囲。</param>
            <remarks>
            <p class="body">削除される印刷範囲に改ページが含まれている場合、そのコレクションから改ページが削除されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="printArea" /> が null の場合に発生します。
            </exception>
            <returns>印刷範囲が見つかり削除された場合は True、それ以外の場合は False。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintAreasCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある印刷範囲をコレクションから削除します。</summary>
            <param name="index">コレクションから削除する印刷範囲のインデックス。</param>
            <remarks>
            <p class="body">削除される印刷範囲に改ページが含まれている場合、そのコレクションから改ページが削除されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、0 よりも小さいか、コレクションのサイズ数以上の場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintAreasCollection.Count">
            <summary>このコレクション内の印刷範囲の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintAreasCollection.Item(System.Int32)">
            <summary>指定したインデックスにある印刷範囲を取得します。</summary>
            <param name="index">取得する印刷範囲のインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、0 よりも小さいか、コレクションのサイズ数以上の場合に発生します。
            </exception>
            <returns><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の印刷範囲を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> インスタンス。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.PrintOptions">
            <summary>ワークシートとカスタム表示の両方で保存できるワークシートで使用可能なさまざまな印刷オプションを公開するクラス。</summary>
            <remarks>
            <p class="body">このクラスは、ワークシートがどのように印刷されるかを制御する方法を提供します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.PrintOptions" />
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks">
            <summary><see cref="T:Infragistics.Documents.Excel.PrintOptions" /> からすべての改ページをクリアします。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.Clear" />
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.Remove(`0)" />
            <seealso cref="M:Infragistics.Documents.Excel.PageBreakCollection`1.RemoveAt(System.Int32)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したセルの前に水平または垂直の改ページを挿入します。</summary>
            <param name="cell">改ページを挿入するセル。</param>
            <remarks>
            <p class="body">セルが <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれていない場合、追加される改ページは次のようになります。セルが <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の左上の隅にある場合、例外がスローされます。セルがワークシートの左端にある場合、水平改ページがセルの上に挿入されます。セルがワークシートの上端にある場合、垂直改ページがセルの左に挿入されます。セルがワークシートの別の場所にある場合、水平改ページがセルの上に挿入され、垂直改ページがセルの左に挿入されます。</p>
            <p class="body">セルが <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれている場合、追加される改ページは次のようになります。セルが印刷範囲の左上の隅にある場合、改ページは挿入されません。セルが印刷範囲の左端にある場合、水平改ページがセルの上に挿入されます。セルが印刷範囲の上端にある場合、垂直改ページがセルの左に挿入されます。セルが印刷範囲の別の場所にある場合、水平改ページがセルの上に挿入され、垂直改ページがセルの左に挿入されます。</p>
            <p class="body">改ページが印刷範囲に挿入されるとき、印刷範囲の端までしか拡張されません。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の左上隅にある場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)">
            <summary>垂直改ページを指定した列の左に挿入します。</summary>
            <param name="column">改ページを挿入する列。</param>
            <remarks>
            <p class="body">列が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれていない場合、追加される改ページは次のようになります。列が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の左端にある場合、例外がスローされます。列がワークシートの他の場所にある場合、垂直改ページが列の左に挿入されます。</p>
            <p class="body">列が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれている場合、追加される改ページは次のようになります。列が印刷範囲の左端にある場合、改ページは挿入されません。列が印刷範囲の他の場所にある場合、垂直改ページが列の左に挿入されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="column" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="column" /> が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の左端にある場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)">
            <summary>水平改ページを指定した行の上に挿入します。</summary>
            <param name="row">改ページを挿入する行。</param>
            <remarks>
            <p class="body">行が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれていない場合、追加される改ページは次のようになります。行が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の上端にある場合、例外がスローされます。行がワークシートの他の場所にある場合、水平改ページが行の上に挿入されます。</p>
            <p class="body">行が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" /> コレクション中のいずれかの印刷範囲に含まれている場合、追加される改ページは次のようになります。行が印刷範囲の上端にある場合、改ページは挿入されません。行が印刷範囲の他の場所にある場合、水平改ページが行の上に挿入されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="row" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="row" /> が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> の上端にある場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas" />
        </member>
        <member name="M:Infragistics.Documents.Excel.PrintOptions.Reset">
            <summary>印刷オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin">
            <summary>ワークシートの各の印刷したページの下側のマージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページの下側のマージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RightMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.TopMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.CenterHorizontally">
            <summary>印刷ページが水平方向にセンタリングされるかどうかを示す値を取得または設定します。</summary>
            <value>印刷ページが水平方向にセンタリングされるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.CenterVertically" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.CenterVertically">
            <summary>印刷ページが垂直方向にセンタリングされるかどうかを示す値を取得または設定します。</summary>
            <value>印刷ページが垂直方向にセンタリングされるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.CenterHorizontally" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft">
            <summary>すべてのページに印刷する列の範囲を取得または設定します</summary>
            <exception cref="T:System.ArgumentException">
            指定した値が null でなく、その <seealso cref="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex" /> 値が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の列数以上の場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.DraftQuality">
            <summary>印刷ページがドラフト品質を使用して印刷されるかどうかを示す値を取得または設定します。</summary>
            <value>印刷ページがドラフト品質を使用して印刷されるかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.Footer">
            <summary>印刷されるワークシートの各ページのフッタを取得または設定します。</summary>
            <remarks>
            <p class="body">ヘッダおよびフッタの &apos;&amp;&apos; 文字は特別な文字です。その後に何がくるかによって、テキストの書式は制御されたり、動的テキストを挿入できます。以下に使用できるコマンドのリストを掲載します。<list type="table">
            	<listheader>
            		<term>セクション コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;L</term>
            		<description>以下のテキストは左のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            	<item>
            		<term>&amp;C</term>
            		<description>以下のテキストは中央のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            	<item>
            		<term>&amp;R</term>
            		<description>以下のテキストは右のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>再配置コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;&amp;</term>
            		<description>&apos;&amp;&apos; 文字を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;A</term>
            		<description>現在のワークシート名を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;D</term>
            		<description>現在の日付を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;F</term>
            		<description>現在のファイル名を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;G</term>
            		<description>画像を挿入します (<b>注:</b> このコマンドは現在サポートされていません)。</description>
            	</item>
            	<item>
            		<term>&amp;N</term>
            		<description>印刷する必要があるワークシートのページ番号を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;P</term>
            		<description>現在のページ番号を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;T</term>
            		<description>現在の時刻を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;Z</term>
            		<description>現在のファイル パスを挿入します (ファイル名なし)。</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>書式コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;B</term>
            		<description>ボールドを切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;E</term>
            		<description>二重下線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;I</term>
            		<description>イタリックを切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;S</term>
            		<description>打ち消し線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;U</term>
            		<description>下線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;X</term>
            		<description>上付を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;Y</term>
            		<description>下付を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;&lt;FontSize&gt;</term>
            		<description>以下のテキストに新しいフォント サイズを設定します。サイズは正の整数として表されます。ヘッダで数値をこのコマンドに続ける場合、スペースで分割する必要があります。</description>
            	</item>
            	<item>
            		<term>&amp;&quot;&lt;FontName&gt;&quot;</term>
            		<description>以下のテキストに新しいフォントを設定します。フォント名が認識されない場合、デフォルト フォントが使用されます。</description>
            	</item>
            	<item>
            		<term>&amp;&quot;&lt;FontName&gt;,&lt;FontStyle&gt;&quot;</term>
            		<description>以下のテキストの新しいフォントとフォント スタイルを設定します。フォント スタイルは、「標準」、「ボールド」、「イタリック」または「ボールド イタリック」ですが、フォントによって他のスタイルになる可能性があります。使用できるフォント スタイルは、フォントを選択した状態でフォント ダイアログで確認できます。</description>
            	</item>
            </list>
            </p>
            <p class="body">ヘッダー/フッター文字列は次のようになります。&amp;L&amp;&quot;Arial,Bold&quot;&amp;D&amp;CPage &amp;P of &amp;N on &amp;A&amp;R&amp;14&amp;F。</p>
            </remarks>
            <value>ワークシートの各ペ―ジのフッタ。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.Header" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin">
            <summary>ワークシートの各印刷したページのフッター マージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページのフッター マージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.Footer" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RightMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.TopMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.Header">
            <summary>印刷されるワークシートの各ページのヘッダを取得または設定します。</summary>
            <remarks>
            <p class="body">ヘッダおよびフッタの &apos;&amp;&apos; 文字は特別な文字です。その後に何がくるかによって、テキストの書式は制御されたり、動的テキストを挿入できます。以下に使用できるコマンドのリストを掲載します。<list type="table">
            	<listheader>
            		<term>セクション コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;L</term>
            		<description>以下のテキストは左のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            	<item>
            		<term>&amp;C</term>
            		<description>以下のテキストは中央のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            	<item>
            		<term>&amp;R</term>
            		<description>以下のテキストは右のセクションに表示します。新しいセクションの書式は、以前のセクションの書式に関係なく、常にデフォルト書式となります。</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>再配置コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;&amp;</term>
            		<description>&apos;&amp;&apos; 文字を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;A</term>
            		<description>現在のワークシート名を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;D</term>
            		<description>現在の日付を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;F</term>
            		<description>現在のファイル名を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;G</term>
            		<description>画像を挿入します (<b>注:</b> このコマンドは現在サポートされていません)。</description>
            	</item>
            	<item>
            		<term>&amp;N</term>
            		<description>印刷する必要があるワークシートのページ番号を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;P</term>
            		<description>現在のページ番号を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;T</term>
            		<description>現在の時刻を挿入します。</description>
            	</item>
            	<item>
            		<term>&amp;Z</term>
            		<description>現在のファイル パスを挿入します (ファイル名なし)。</description>
            	</item>
            </list>
            <list type="table">
            	<listheader>
            		<term>書式コマンド</term>
            	</listheader>
            	<item>
            		<term>&amp;B</term>
            		<description>ボールドを切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;E</term>
            		<description>二重下線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;I</term>
            		<description>イタリックを切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;S</term>
            		<description>打ち消し線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;U</term>
            		<description>下線を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;X</term>
            		<description>上付を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;Y</term>
            		<description>下付を切り替えます。</description>
            	</item>
            	<item>
            		<term>&amp;&lt;FontSize&gt;</term>
            		<description>以下のテキストに新しいフォント サイズを設定します。サイズは正の整数として表されます。ヘッダで数値をこのコマンドに続ける場合、スペースで分割する必要があります。</description>
            	</item>
            	<item>
            		<term>&amp;&quot;&lt;FontName&gt;&quot;</term>
            		<description>以下のテキストに新しいフォントを設定します。フォント名が認識されない場合、デフォルト フォントが使用されます。</description>
            	</item>
            	<item>
            		<term>&amp;&quot;&lt;FontName&gt;,&lt;FontStyle&gt;&quot;</term>
            		<description>以下のテキストの新しいフォントとフォント スタイルを設定します。フォント スタイルは、「標準」、「ボールド」、「イタリック」または「ボールド イタリック」ですが、フォントによって他のスタイルになる可能性があります。使用できるフォント スタイルは、フォントを選択した状態でフォント ダイアログで確認できます。</description>
            	</item>
            </list>
            </p>
            <p class="body">ヘッダー/フッター文字列は次のようになります。&amp;L&amp;&quot;Arial,Bold&quot;&amp;D&amp;CPage &amp;P of &amp;N on &amp;A&amp;R&amp;14&amp;F。</p>
            </remarks>
            <value>ワークシートの各ペ―ジのヘッダ。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.Footer" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin">
            <summary>ワークシートの各印刷したページのヘッダー マージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページのヘッダー マージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.Header" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RightMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.TopMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.HorizontalPageBreaks">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の水平改ページのコレクションを取得します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.HorizontalPageBreak" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin">
            <summary>ワークシートの各印刷したページの左側のマージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページの左側のマージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RightMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.TopMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally">
            <summary>ワークシートを印刷するために水平方向で許可される最大ページ数を取得または設定します。</summary>
            <remarks>
            <p class="body">ゼロの値は、水平方向で最大値が使用されないことを示します。必要に応じたページを使用します。</p>
            <p class="note"><B>注:</B> ワークシートを印刷する方法に影響を与える MaxPagesHorizontally および <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically" /> では、<see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" /> は FitToPages の値に設定する必要があります。ただし、ScalingType は異なり、これらの値は使用されず、ワークシートで保存されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 32767 の有効範囲の外です。
            </exception>
            <value>ワークシートを印刷するために水平方向で許可される最大ページ数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically">
            <summary>ワークシートを印刷するために垂直方向で許可される最大ページ数を取得または設定します。</summary>
            <remarks>
            <p class="body">ゼロの値は、垂直方向で最大値が使用されないことを示します。必要に応じたページを使用します。</p>
            <p class="note"><B>注:</B> ワークシートを印刷する方法に影響を与える <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally" /> および MaxPagesVertically では、<see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" /> は FitToPages の値に設定する必要があります。ただし、ScalingType は異なり、これらの値は使用されず、ワークシートで保存されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 32767 の有効範囲の外です。
            </exception>
            <value>ワークシートを印刷するために垂直方向で許可される最大ページ数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.NumberOfCopies">
            <summary>印刷するコピー数を取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、1 および 65535 の有効範囲の外です。
            </exception>
            <value>印刷するコピー数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.Orientation">
            <summary>印刷されるワークシートの各ページの方向を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.Orientation" /> 列挙体で定義されていません。
            </exception>
            <value>印刷されるワークシートの各ペ―ジの方向。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.OrientationResolved">
            <summary>印刷されるワークシートの各ペ―ジの解決された方向を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PageOrder">
            <summary>複数ページのワークシートのページ数を印刷する順序を取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PageOrder" /> 列挙体で定義されていません。
            </exception>
            <value>複数ページのワークシートのページ数を印刷する順序。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PageNumbering">
            <summary>ページを付ける方法を取得または設定します。</summary>
            <remarks>
            <p class="body">これが UseStartPageNumber の値に設定される場合、最初のページは <see cref="P:Infragistics.Documents.Excel.PrintOptions.StartPageNumber" /> を使用して番号が付けられます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PageNumbering" /> 列挙体で定義されていません。
            </exception>
            <value>ページが付けられる方法。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.StartPageNumber" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PaperSize">
            <summary>ワークシートの印刷される各ページの用紙サイズを取得または設定します。</summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PaperSize" /> 列挙体で定義されていません。
            </exception>
            <value>ワークシートの印刷される各ペ―ジの用紙サイズ。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintAreas">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の印刷範囲のコレクションを取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintErrors">
            <summary>セルのエラー値が印刷される方法を取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" /> が直接 <see cref="T:Infragistics.Documents.Excel.ErrorValue" /> に設定されている場合、またはエラーを評価する <see cref="T:Infragistics.Documents.Excel.Formula" /> に設定されている場合、セルはエラー値を持つことができます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintErrors" /> 列挙体で定義されていません。
            </exception>
            <value>セルのエラー値が印刷される方法。</value>
            <seealso cref="T:Infragistics.Documents.Excel.ErrorValue" />
            <seealso cref="T:Infragistics.Documents.Excel.Formula" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintGridlines">
            <summary>ワークシートのガイドラインを印刷するかどうかを示す値を取得または設定します。</summary>
            <value>ワークシートのガイドラインを印刷するかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.ShowGridlines" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintInBlackAndWhite">
            <summary>ワークシートを白黒で印刷するかどうかを示す値を取得または設定します。</summary>
            <value>ワークシートを白黒で印刷するかどうかを示す値。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintNotes">
            <summary>セルのコメントを印刷する方法を取得または設定します。</summary>
            <remarks>
            <p class="body">これを PrintAsDisplayed の値に設定すると、ワークシートに表示される場合、コメントが印刷されます。コメントが非表示でインジケーターが表示される場合、インジケーターとコメントは印刷されません。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.PrintNotes" /> 列挙体で定義されていません。
            </exception>
            <value>セル メモが印刷される方法。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCellComment" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.PrintRowAndColumnHeaders">
            <summary>行と列ヘッダを印刷するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">行および列ヘッダは、行または列の識別子を表示します。</p>
            </remarks>
            <value>行と列ヘッダを印刷するかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.ShowRowAndColumnHeaders" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.Resolution">
            <summary>水平方向の印刷解像度を DPI で取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 65535 の有効範囲の外です。
            </exception>
            <value>DPI での水平方向の印刷解像度。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.VerticalResolution" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.RightMargin">
            <summary>ワークシートの各印刷したページの右側のマージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページの右側のマージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.TopMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop">
            <summary>すべてのページに印刷する行の範囲を取得または設定します</summary>
            <exception cref="T:System.ArgumentException">
            指定した値が null でなく、その <seealso cref="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex" /> 値が <see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の行数以上の場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor">
            <summary>ワークシートを印刷する時に使用するスケール率を取得または設定します。</summary>
            <remarks>
            <p class="body">スケール率は、通常のスケールのパーセントとして保存される拡大率と似ています。100 の値は通常のスケールを示し、200 の値はワークシートを通常のサイズの 2 倍にスケールすることを示します。</p>
            <p class="note"><B>注:</B> ワークシートを印刷する方法に影響を与える ScalingFactor では、<see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" /> は UseScalingFactor の値に設定する必要があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、10 および 400 の有効範囲の外です。
            </exception>
            <value>ワークシートを印刷する時に使用するためのスケール率。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInNormalView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageBreakView" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDisplayOptions.MagnificationInPageLayoutView" />
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewDisplayOptions.MagnificationInCurrentView" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.ScalingType">
            <summary>印刷する時にワークシートをスケールするための方法を取得または設定します。</summary>
            <remarks>
            <p class="body">これが UseScalingFactor の値に設定されている場合、<see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor" /> は印刷されるページでワークシートを統一してスケールするために使用されます。</p>
            <p class="body">これが FitToPages の値に設定されている場合、<see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally" /> および <see cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically" /> は、両方向で印刷されるワークシートを収めるために最大ページ数を設定するために使用されます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingType" /> 列挙体で定義されていません。
            </exception>
            <value>印刷する時にワークシートをスケールするための方法。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesHorizontally" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.MaxPagesVertically" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ScalingFactor" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.StartPageNumber">
            <summary>ワークシートの最初の印刷されるページのページ数を取得または設定します。</summary>
            <remarks>
            <p class="body">使用されるこの値については、<see cref="P:Infragistics.Documents.Excel.PrintOptions.PageNumbering" /> は UseStartPageNumberの値に設定する必要があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、-32765 および 32767 の有効範囲の外です。
            </exception>
            <value>ワークシートの最初の印刷されるページのページ数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.PageNumbering" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.TopMargin">
            <summary>ワークシートの各印刷したページの上側のマージンをインチで取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            設定した値は 0 ~ 100 インチの有効なマージン範囲以外です。
            </exception>
            <value>ワークシートの各印刷したページの上側のマージン (インチ)。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.BottomMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.FooterMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.HeaderMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.LeftMargin" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RightMargin" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.VerticalPageBreaks">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> 内の垂直改ページのコレクションを取得します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.VerticalPageBreak" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.ClearPageBreaks" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetColumn)" />
            <seealso cref="M:Infragistics.Documents.Excel.PrintOptions.InsertPageBreak(Infragistics.Documents.Excel.WorksheetRow)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.PrintOptions.VerticalResolution">
            <summary>垂直方向の印刷解像度を DPI で取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、0 および 65535 の有効範囲の外です。
            </exception>
            <value>DPI での垂直方向の印刷解像度。</value>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.Resolution" />
        </member>
        <member name="T:Infragistics.Documents.Excel.RepeatTitleRange">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の先頭または左または印刷ページにある、繰り返す必要がある連続する行または列の範囲を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.ColumnsToRepeatAtLeft" />
            <seealso cref="P:Infragistics.Documents.Excel.PrintOptions.RowsToRepeatAtTop" />
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.#ctor(System.Int32,System.Int32)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.RepeatTitleRange" /> インスタンスを作成します。</summary>
            <param name="startIndex">範囲内の最初の行または列のインデックス。</param>
            <param name="endIndex">範囲内の最後の行または列のインデックス。</param>
            <remarks>
            <p class="body"><paramref name="startIndex" /> と <paramref name="endIndex" /> の順序はどちらでもかまいません。つまり、startIndex が endIndex よりも大きい場合、保存されるときに入れ替えられます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="startIndex" /> または <paramref name="endIndex" /> が 0 よりも小さい場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index" />
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.Equals(System.Object)">
            <summary>指定した値がこの <see cref="T:Infragistics.Documents.Excel.RepeatTitleRange" /> と等しいかどうかを決定します。</summary>
            <param name="obj">等価をテストするための値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.RepeatTitleRange" /> のハッシュ コードを取得します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.RepeatTitleRange.ToString">
            <summary>範囲の文字列表現を取得します。</summary>
            <returns>範囲の文字列表現。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.RepeatTitleRange.EndIndex">
            <summary>範囲内の最後の行または列のインデックスを取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index" />
        </member>
        <member name="P:Infragistics.Documents.Excel.RepeatTitleRange.StartIndex">
            <summary>範囲内の最初の行または列のインデックスを取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.Index" />
        </member>
        <member name="T:Infragistics.Documents.Excel.ExcelResourceCustomizer">
            <summary>リソース文字列のカスタマイズ機能を提供するクラス。</summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.GetCustomizedString(System.String)">
            <summary>指定した文字列リソース名によって識別されるカスタマイズされた文字列を取得します。</summary>
            <param name="name">カスタマイズされた文字列リソース名。</param>
            <returns>カスタマイズした文字列。リソースがカスタマイズされていなければ null。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings" />
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings">
            <summary><see cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)" /> メソッドを呼び出してカスタマイズした文字列をすべてクリアします。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)">
            <summary>特定の文字列リソース名で識別されるカスタマイズ文字列をリセットします。</summary>
            <param name="name">リセット後、対象の文字列はリソースファイルから読み込みされるようになります。</param>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.SetCustomizedString(System.String,System.String)">
            <summary>指定された文字列リソース名によって識別されるカスタマイズされた文字列を設定します。</summary>
            <param name="name">リセット後、対象の文字列はリソースファイルから読み込みされるようになります。</param>
            <param name="customizedText">カスタマイズした文字列。null を指定した場合は、<see cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)" /> を呼び出したときと同じ結果になります。</param>
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetAllCustomizedStrings" />
            <seealso cref="M:Infragistics.Documents.Excel.ExcelResourceCustomizer.ResetCustomizedString(System.String)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.RowColumnCollectionBase`1">
            <summary>行コレクションと列コレクションの基本クラス。</summary>
            <typeparam name="T">コレクションに含まれる項目のタイプ。</typeparam>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetItemCollection`1">
            <summary>メイン ワークシート要素のコレクションのための抽象基本クラス（行、列、およびセル）。</summary>
            <remarks>
            <p class="body">ワークシートの大きな要素数のため、要求されるとこのコレクションは内部的に要素を作成します。このコレクションの繰り返しは、すでに作成された要素を繰り返すだけです。</p>
            </remarks>
            <typeparam name="T">コレクションに含まれる項目のタイプ。</typeparam>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemCollection`1.MaxCount">
            <summary>このコレクションの項目の最大数を取得します。</summary> 
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeGroup">
            <summary>ワークシートの形状のグループを表します。このグループは、他のグループ内またはワークシートに配置および含むことができる形状でもあります。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeGroup.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> インスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeGroup.Shapes">
            <summary>グループ内に含まれる形状のコレクションを取得します。</summary>
            <value>グループ内に含まれる形状のコレクション。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason">
            <summary>内部使用のみ。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.CouldNotGetPackagePart">
            <summary>IPackage.GetPart メソッドが以外をスローしました。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.Conformant">
            <summary>IPackagePart は ECMA TC45 Open Packaging Conventions に完全に準拠します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameMissing">
            <summary>パケージを実装するために部分名が必要です。[M1.1]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeMissing">
            <summary>パケージ を実装するためにコンテンツ タイプが必要です。フォーマット デザイナーはコンテンツ タイプを指定します。[M1.2], [M1.13]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentEmpty">
            <summary>部分名は空セグメントを許可しません。[M1.3]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameDoesNotStartWithForwardSlash">
            <summary>部分名はスラッシュ （「/」） で開始する必要です。[M1.4]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameEndsWithForwardSlash">
            <summary>部分名は最後の文字としてスラッシュ (「/」） を使用できません。[M1.5]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasNonPCharCharacters">
            <summary>セグメントは pchar 文字のみ含むことができます。[M1.6]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasPercentEncodedSlashCharacters">
            <summary>セグメントにパーセントエンコードのスラッシュ (「/」) またはバックスラッシュ (「￥」) を含むことはできません。[M1.7]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentHasPercentEncodedUnreservedCharacters">
            <summary>セグメントはパーセントエンコード予約されていない文字を含むことはできません。[M1.8]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentEndsWithDotCharacter">
            <summary>セグメントは最後の文字としてドットの文字 (「.」) を使用できません 。[M1.9]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.SegmentMissingNonDotCharacter">
            <summary>セグメントは、ドットではない文字を 1 つ以上含む必要があります。[M1.10]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.NameDerivesFromExistingPartName">
            <summary>パッケージ インプリメンターは、セグメントを追加して他の部分名から派生する名前で部分の作成をしたり部分を認識したりしません。[M1.11]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.DuplicateName">
            <summary>部分名の等価は、大文字と小文字を区別しない ASCII 文字列として部分名を比較して決定されます。パッケージは等しい部分名を含みません。またパッケージ インプリメンターはパッケージを作成したり、同じ部分名を認識しません。[M1.12]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasInvalidSyntax">
            <summary>IPackage インプリメンターは、作成およびコンテンツ タイプのある部分のみ認識します。フォーマット デザイナーは、フォーマットに含まれる各部分のコンテンツ タイプを指定します。パッケージ部分のコンテンツ タイプは、定義および RFC 2616, §3.7 で指定されたメディア タイプの構文に適応します。[M1.13]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasInvalidWhitespace">
            <summary>コンテンツ タイプは、タイプとサブタイプの間または属性とその値の間のどちらかでリニアの空白を使用しません。コンテンツ タイプは、先頭または航続の空白もありません。IPackage は、コンテンツ タイプのみを作成します。またパッケージの一部を取得する場合にそのようなコンテンツ タイプを必要とします。フォーマット デザイナーは、フォーマットに含まれるコンテンツ タイプ指定します。[M1.14]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasComments">
            <summary>パケージ インプリメンターは、コメントを含まないコンテンツ タイプが必要です。フォーマット デザイナーはコンテンツ タイプを指定します。[M1.15]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.ContentTypeHasParameters">
            <summary>IPackage インプリメンターとフォーマット デザイナーは、この Open Packaging で定義されたパッケージ固有の部分にパラメーターのあるコンテンツ タイプを作成しません。またコンテンツ タイプでパラメーターの存在をエラーとして処理します。[M1.22]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.GrowthHintChanged">
            <summary>パッケージ インプリメンターが growth hint を指定する場合、部分が作成されたときに設定されます。またパッケージ インプリメンターは、部分が作成された後に growth hint を変更することはできません。[M1.16]</summary>
            <remarks><p class="body">PackageConformanceManager は、この仕様を検証しません。</p></remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlEncodingUnsupported">
            <summary>XML コンテンツは、UTF-8 or UTF-16 のどちらかを使ってエンコードされます。XML 1.0 仕様の § 4.3.3 で定義されている部分がエンコーディング宣言を含む場合に、宣言は UTF-8 または UTF-16 エンコーディング以外使用できません。IPackage インプリメンターは、XML の作成時および取得時にこの要件を適用します。[M1.17]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlContentInvalidForSchema">
            <summary>XML コンテンツは、この Open Packaging 仕様で定義されている対応する XSD で有効になります。特に XML コンテンツは、XSD に対応する明示的に定義されていない名前空間から引き出された要素または属性を含みません (XSD が名前空間から引き出す要素または属性が特定の場所に表示される場合を除く)。IPackage インプリメンターは、XML の作成時および取得時にこの要件を適用します。[M1.20]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.XmlContentDrawsOnUndefinedNamespace">
            <summary>XML コンテンツは、&quot;xml&quot; または &quot;xsi&quot; 名前空間から引き出す要素や属性を含みません (XSD スキーマまたはこの Open Packaging 仕様の他の手段によって明示的に定義されている場合は除く)。IPackage インプリメンターは、XML の作成時および取得時にこの要件を適用します。[M1.21]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetsOtherRelationship">
            <summary>Relationships 部分は、他のどの部分とも関係を持ちません。IPackage インプリメンターは、関係を作成する時にこの要件を適用し、そのような関係はどれも無効として扱われます。[M1.25]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipIdInvalid">
            <summary>パッケージ インプリメンターは、ID 属性を持つ各 Relationship 要素が Relationships 部分内で一意の値で、ID タイプが xsd、xsd 名前付け制限に従っている値、そして W3C 推奨 &quot;XML Schema Part 2: Datatypes&quot; で説明されている IDas を持つことを必要とします。[M1.26]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTypeInvalid">
            <summary>パッケージ インプリメンターでは、Type 属性が URI である必要があります。URI は関係のロールを定義し、フォーマット デザイナーは Type などを指定します。[M1.27]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetInvalid">
            <summary>パッケージ インプリメンターは、ターゲット リソースへポイントする URL の参照となる Target の属性が必要です。URI の参照は、URI または相対参照になります。[M1.28]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipTargetNotRelativeReference">
            <summary>Internal に設定する時に、Target 属性が相対参照になり、参照は “親” 部分に相対的に変換されます。パッケージ関係では、パッケージ インプリメンターが前のパッケージ リソースを認識するパック URI に対して Target 属性に相対的な参照を解決します。[M1.29]</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceReason.RelationshipNameInvalid">
            <summary>パッケージ インプリメンターは、特別な関係部分の名前付け規則に応じて関係部分に名前を付けます。またこの名前付け規則に適合する名前のある部分は、Relationships 部分のコンテンツ タイプを必要とします。[M1.30]</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason">
            <summary><see cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">OpenPackagingNonConformanceException</see> がスローされた理由を定義する定数。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">OpenPackagingNonConformanceException クラス</seealso>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.None">
            <summary>未定義。変数の初期化に使用されます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.CorePropertiesRelationshipAlreadyProcessed">
            <summary>IPackage の IPackagePart 部分は、処理された後にパッケージでコア プロパティ関係であると定義されます。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の Annex H, パート 4 で規定されています。<br></br>フォーマット デザイナーは、プロデューサーの特定およびフォーマットをします。プロデューサーは、パッケージの最もコアな <b>one</b> プロパティ関係を作成します。フォーマット コンシューマーは、コア プロパティ関係が 1 つ以上の場合にエラーであると見なします。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.UsesMarkupCompatibilityNamespace">
            <summary>IPackage の IPackagePart は、パッケージのコア プロパティ関係であると確定されます。IPackagePart に Markup Compatibility 名前空間への参照を含むことが分かります。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の Annex H, パート 4 で規定されています。<br></br>プロデューサーを指定またはフォーマットするフォーマット デザイナーは、Core Properties を作成しません。Core Properties は、Annex F, “Standard Namespaces and Content Types” で定義されている通り Markup Compatibility 名前空間を使用します。フォーマット コンシューマーは、Markup Compatibility 名前空間の使用をエラーだと見なします。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.ContainsDublinCoreRefinements">
            <summary>IPackage の IPackagePart は、パッケージのコア プロパティ関係であると確定されます。IPackagePart が、&apos;dcterms:created&apos; や &apos;dcterms:modified&apos; 要素以外の Dublin Core 要素への洗練を含むことが分かります。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の Annex H, パート 4 で規定されています。<br></br>プロデューサーは、Dublin Core 要素への洗練を含むドキュメント要素を作成しません (スキーマで指定された 2 つを除く: dcterms: 作成済み、dcterms: 編集済み)。コンシューマーは、この制約に違反するドキュメント要素をエラーと見なします。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.ContainsXmlLanguageAttribute">
            <summary>IPackage の IPackagePart は、パッケージのコア プロパティ関係であると確定されます。IPackagePart に xml:lang 属性を含む要素を含むことが分かります。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の Annex H, パート 4 で規定されています。<br></br>&quot;プロデューサーは、xml:lang 属性を含むドキュメント要素を作成しません。コンシューマーは、この制約に違反するドキュメント要素をエラーと見なします。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.XsiTypeAttributeInvalid">
            <summary>IPackage の IPackagePart は、パッケージでコア プロパティ関係にあると確定されます。IPackagePart では、&apos;dcterms:created&apos; と &apos;dcterms:modified&apos; 要素の例外がある、属性が必要な値 &apos;dcterms:W3CDTF&apos; を保留すると予想される xsi: タイプ属性を含む要素を含むことが分かります。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の Annex H, パート 4 で規定されています。<br></br>プロデューサーは、xsi: タイプの属性を含むドキュメント要素を作成しません (dcterms が Dublin Core 名前空間の接頭辞で、xsi: タイプの属性が存在し、 dcterms:W3CDTF の値を保留する &apos;dcterms:created&apos; と &apos;dcterms:modified&apos; 要素を除く)。コンシューマーは、この制約に違反するドキュメント要素をエラーと見なします。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.XmlContainsDocumentTypeDefinition">
            <summary>読み込まれた IPackagePart が、DTD (Document Type Definition - ドキュメント型定義) を含むことが分かります。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の 8.1.4 項 2 条で規定されています。<br></br>XML 1.0 仕様では、DTD (Document Type Definitions) の使用を許可します。通常は内部エンティティ を展開する技術を使用してサービス拒否攻撃を有効にします。この潜在的脅威の緩和として、DTD 宣言では、この Open Packaging 仕様で定義されている XML マークアップでは使用されません。IPackage インプリメンターは、XML コンテンツの作成および取得時にこの要件を適用します。また DTD 宣言の存在をエラーとして扱います。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason.DuplicatePartName">
            <summary>IPackagePart は、既存する部品と同じ名前を持ちます。</summary>
            <remarks>
            <p class="body">&apos;Office Open XML Part 2 - Open Packaging Conventions&apos; の 8.1.1.2 項で規定されています。<br></br>&quot;部分名の等価は、大文字と小文字を区別しない ASCII 文字列として部分名を比較して決定されます。パッケージは等しい部分名を含みません。またパッケージ インプリメンターはパッケージを作成したり、同じ部分名を認識しません。</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException">
            <summary>SpreadsheetMLpackage が不整合の場合にスローされます。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException.IPackagePart">
            <summary>例外をスローした <a href="http://msdn.microsoft.com/en-us/library/system.io.packaging.packagepart.aspx">IPackagePart</a> インスタンスを返します。例外が IPackagePart によるものでない場合は、null (VB では Nothing) を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceException.Reason">
            <summary>例外がスローされた <see cref="T:Infragistics.Documents.Excel.Serialization.Excel2007.OpenPackagingNonConformanceExceptionReason">reason</see> を返します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Serialization.Excel2007.FillInfo">
            <summary>Fill 要素を表すために使用されるクラスです。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeFill">
            <summary>形状の塗りつぶしのための抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill" />
            <seealso cref="T:Infragistics.Documents.Excel.ShapeFillSolid" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFill.FromColor(System.Drawing.Color)">
            <summary>単色の塗りつぶしアウトラインを説明するためのインスタンスを作成します。</summary>
            <param name="solidColor">作成する塗りつぶし色。</param>
            <returns>指定した色を持つ<see cref="T:Infragistics.Documents.Excel.ShapeFillSolid" />インスタンス。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeFillSolid">
            <summary>単色の形状の塗りつぶしを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Fill" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFillSolid.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeFillSolid.#ctor(System.Drawing.Color)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.ShapeFillSolid" /> インスタンスを作成します。</summary>
            <param name="color">塗りつぶしの色。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeFillSolid.Color">
            <summary>塗りつぶしの色を取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeOutline">
            <summary>形状のアウトライン用の抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline" />
            <seealso cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutline.FromColor(System.Drawing.Color)">
            <summary>単色のアウトラインを説明するためのインスタンスを作成します。</summary>
            <param name="solidColor">作成するアウトラインの色。</param>
            <returns>指定した色を持つ<see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid" />インスタンス。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.ShapeOutlineSolid">
            <summary>単色の形状アウトラインを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetShape.Outline" />
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutlineSolid.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid" /> インスタンスを作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.ShapeOutlineSolid.#ctor(System.Drawing.Color)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.ShapeOutlineSolid" /> インスタンスを作成します。</summary>
            <param name="color">アウトラインの色。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.ShapeOutlineSolid.Color">
            <summary>アウトラインの色を取得または設定します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition">
            <summary>カスタムの順序付き値リストに基づいてセルを並べ替えるために使用される並べ替え条件です。</summary>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、カスタム リストに含まれているセルが最初に現れてそのリスト内での順序通りに並べられ、そのあとに他のセルが現れて並べ替え以前の順序と同じ相対順序で並べられていくという形でデータ範囲の並べ替えが行われます。並べ替えの方向が降順である場合は、カスタム リストに含まれていないセルが最初にデータ領域に現れて、並べ替え以前の順序と同じ相対順序で並べられます。そのあとには他のセルがリストとは逆の順序で並べられていきます。</p>
            <p class="body">この並べ替え条件に指定されたリスト値が文字列値です。並べ替えられるセルが文字列値を含むセルである場合には、その値に基づいてセルの並べ替えが行われます。そうでない場合にはセル テキストが使用されます。たとえば、セルの値が 0.01 であっても、そのセルがパーセンテージ セルとして書式設定されている場合、この並べ替え条件でセルを並べ替えるために使用されるテキストは、「0.01」ではなく、「1%」になります。セル テキストが使用される場合、さまざまなセルで繰り返し利用される埋め込み文字がセルの書式文字列に含まれていても、そうした文字は比較に使用されるセル テキストから除外されます。</p>
            <p class="body">セルの値をカスタム リスト内の値と突き合わせる場合、文字列の比較は、<see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive" /> の設定によって、大文字・小文字を区別または区別せずに比較されます。</p>
            <p class="body">セル テキストに埋め込み文字が繰り返し現れる場合、そうした文字は文字列の比較対象から除外されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive" />
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortCondition">
            <summary>個々の領域におけるデータのソート方式を記述する並べ替え条件を表す抽象基本クラス。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" />
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition" />
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" />
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition" />
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortCondition.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortCondition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection">
            <summary>並べ替え条件に記述される並べ替え方向の指定値を取得します。</summary>
            <value>SortDirection.Ascending または SortDirection.Descending。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(System.String[])">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> インスタンスを作成します。</summary>
            <param name="list">並べ替えの優先順位に従って並べられた値のリスト。</param>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、カスタム リストに含まれているセルが最初に現れてそのリスト内での順序通りに並べられ、そのあとに他のセルが現れて並べ替え以前の順序と同じ相対順序で並べられていくという形でデータ範囲の並べ替えが行われます。並べ替えの方向が降順である場合は、カスタム リストに含まれていないセルが最初にデータ領域に現れて、並べ替え以前の順序と同じ相対順序で並べられます。そのあとには他のセルがリストとは逆の順序で並べられていきます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> インスタンスを作成します。</summary>
            <param name="list">並べ替えの優先順位に従って並べられた値のリスト。</param>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、カスタム リストに含まれているセルが最初に現れてそのリスト内での順序通りに並べられ、そのあとに他のセルが現れて並べ替え以前の順序と同じ相対順序で並べられていくという形でデータ範囲の並べ替えが行われます。並べ替えの方向が降順である場合は、カスタム リストに含まれていないセルが最初にデータ領域に現れて、並べ替え以前の順序と同じ相対順序で並べられます。そのあとには他のセルがリストとは逆の順序で並べられていきます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection,System.String[])">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> インスタンスを作成します。</summary>
            <param name="sortDirection">データの並べ替えに使用する方向。</param>
            <param name="list">並べ替えの優先順位に従って並べられた値のリスト。</param>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、カスタム リストに含まれているセルが最初に現れてそのリスト内での順序通りに並べられ、そのあとに他のセルが現れて並べ替え以前の順序と同じ相対順序で並べられていくという形でデータ範囲の並べ替えが行われます。並べ替えの方向が降順である場合は、カスタム リストに含まれていないセルが最初にデータ領域に現れて、並べ替え以前の順序と同じ相対順序で並べられます。そのあとには他のセルがリストとは逆の順序で並べられていきます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection" />が<see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection,System.Collections.Generic.IEnumerable{System.String})">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> インスタンスを作成します。</summary>
            <param name="sortDirection">データの並べ替えに使用する方向。</param>
            <param name="list">並べ替えの優先順位に従って並べられた値のリスト。</param>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、カスタム リストに含まれているセルが最初に現れてそのリスト内での順序通りに並べられ、そのあとに他のセルが現れて並べ替え以前の順序と同じ相対順序で並べられていくという形でデータ範囲の並べ替えが行われます。並べ替えの方向が降順である場合は、カスタム リストに含まれていないセルが最初にデータ領域に現れて、並べ替え以前の順序と同じ相対順序で並べられます。そのあとには他のセルがリストとは逆の順序で並べられていきます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="list" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="list" /> に項目は含まれません。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection" />が<see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Sorting.CustomListSortCondition" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.CustomListSortCondition.List">
            <summary>並べ替えに使用する値の優先順位リストを取得します。</summary>
            <remarks>
            <p class="body">この並べ替え条件に指定されたリスト値が文字列値です。並べ替えられるセルが文字列値を含むセルである場合には、その値に基づいてセルの並べ替えが行われます。そうでない場合にはセル テキストが使用されます。たとえば、セルの値が 0.01 であっても、そのセルがパーセンテージ セルとして書式設定されている場合、この並べ替え条件でセルを並べ替えるために使用されるテキストは、「0.01」ではなく、「1%」になります。セル テキストが使用される場合、さまざまなセルで繰り返し利用される埋め込み文字がセルの書式文字列に含まれていても、そうした文字は比較に使用されるセル テキストから除外されます。</p>
            <p class="body">セルの値をカスタム リスト内の値と突き合わせる場合、文字列の比較は、<see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive" /> の設定によって、大文字・小文字を区別または区別せずに比較されます。</p>
            <p class="body">セル テキストに埋め込み文字が繰り返し現れる場合、そうした文字は文字列の比較対象から除外されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortDirection">
            <summary><see cref="T:Infragistics.Documents.Excel.Sorting.SortCondition" /> で使用できる各種の並べ替え方向を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
        </member>
        <member name="F:Infragistics.Documents.Excel.Sorting.SortDirection.Ascending">
            <summary>昇順で値を並べ替えます。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.Sorting.SortDirection.Descending">
            <summary>降順で値を並べ替えます。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.FillSortCondition">
            <summary>背景の塗りつぶしに基づいてセルを並べ替えるために使用される並べ替え条件を表します。</summary>
            <remarks>
            <p class="body">この並べ替え条件は 1 つの <see cref="T:Infragistics.Documents.Excel.CellFill" /> を指定します。並べ替えの方向が昇順である場合は、この色のセルがデータ範囲の先頭に移され、並べ替えの方向が降順である場合は、この色のセルがデータ範囲の末尾に移されることになります。すべての一致セルは互いの相対順序を保持します。また、一致しないセルもすべて互いの相対順序を保持します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.#ctor(Infragistics.Documents.Excel.CellFill)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition" /> インスタンスを作成します。</summary>
            <param name="fill">セルの絞り込みに使用する <see cref="T:Infragistics.Documents.Excel.CellFill" />。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill" /> が null です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.#ctor(Infragistics.Documents.Excel.CellFill,Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition" /> インスタンスを作成します。</summary>
            <param name="fill">セルの絞り込みに使用する <see cref="T:Infragistics.Documents.Excel.CellFill" />。</param>
            <param name="sortDirection">セルの並べ替えに使用する方向。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection" />が<see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FillSortCondition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Sorting.FillSortCondition" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.FillSortCondition.Fill">
            <summary>セルの絞り込みに使用する <see cref="T:Infragistics.Documents.Excel.CellFill" /> を取得します。</summary>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、この塗りつぶしのセルがデータ範囲の先頭に移され、並べ替えの方向が降順である場合は、この色のセルがデータ範囲の末尾に移されることになります。すべての一致セルは互いの相対順序を保持します。また、一致しないセルもすべて互いの相対順序を保持します。</p>
            </remarks>
            <value>セルの並べ替えに使用する CellFill。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Fill" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition">
            <summary>フォントの色に基づいてセルを並べ替えるために使用される並べ替え条件を表します。</summary>
            <remarks>
            <p class="body">この並べ替え条件には 1 つの色を指定します。並べ替えの方向が昇順である場合は、この色のセルがデータ範囲の先頭に移され、並べ替えの方向が降順である場合は、この色のセルがデータ範囲の末尾に移されることになります。すべての一致セルは互いの相対順序を保持します。また、一致しないセルもすべて互いの相対順序を保持します。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition" /> インスタンスを作成します。</summary>
            <param name="fontColorInfo">セルの並べ替えに使用する色。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo" /> が null です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.#ctor(Infragistics.Documents.Excel.WorkbookColorInfo,Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition" /> インスタンスを作成します。</summary>
            <param name="fontColorInfo">並べ替えるセルに使用する色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" />。</param>
            <param name="sortDirection">セルの並べ替えに使用する方向。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection" />が<see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.Equals(System.Object)">
            <summary>指定したオブジェクトがこの <see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition" /> と等しいかどうかを調べます。</summary>
            <param name="obj">等しいかどうかをテストするためのオブジェクト。</param>
            <returns>指定したオブジェクトがこのインスタンスと等しい場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.Sorting.FontColorSortCondition" /> のハッシュ コードを取得します。</summary>
            <returns>このインスタンスのハッシュに使用できる数値。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.FontColorSortCondition.FontColorInfo">
            <summary>並べ替えるセルに使用する色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" /> を取得します。</summary>
            <remarks>
            <p class="body">並べ替えの方向が昇順である場合は、この色のセルがデータ範囲の先頭に移され、並べ替えの方向が降順である場合は、この色のセルがデータ範囲の末尾に移されることになります。すべての一致セルは互いの相対順序を保持します。また、一致しないセルもすべて互いの相対順序を保持します。</p>
            </remarks>
            <value>並べ替えるセルに使用する色を説明する WorkbookColorInfo。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortCondition.SortDirection" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Font" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorkbookFont.ColorInfo" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.ISortable">
            <summary>並べ替えを適用できるセルの範囲を表すタイプ。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.ISortable.Index">
            <summary>親領域内において並べ替え可能な子項目の識別に使用されるインデックスを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition">
            <summary>昇順または降順での並べ替えに使用できる並べ替え条件の優先順位を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.OrderedSortCondition.#ctor">
            <summary>並べ替え方向を昇順にして <see cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition" /> インスタンスを新規作成します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.OrderedSortCondition.#ctor(Infragistics.Documents.Excel.Sorting.SortDirection)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.Sorting.OrderedSortCondition" /> インスタンスを作成します。</summary>
            <param name="sortDirection">データの並べ替えに使用する方向。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="sortDirection" />が<see cref="T:Infragistics.Documents.Excel.Sorting.SortDirection" />列挙体で定義されていないです。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1">
            <summary>ワークシートの並べ替え可能な領域に適用される並べ替え条件の順序付きコレクション。</summary>
            <remarks>
            <p class="body">コレクションの並べ替え条件はデータの順序で適用されます。</p>
            <p class="note"><B>注:</B> このコレクションには最大 64 件の並べ替え条件を収めることができます。</p>
            </remarks>
            <typeparam name="T">
            論理的な形でデータを含んでいて、そのデータに適用される並び替え条件を設定できるタイプ。
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Add(`0,Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>このコレクションに並べ替え条件を追加します。</summary>
            <param name="sortableItem">並べ替え条件の適用対象となる並べ替え可能な項目。</param>
            <param name="sortCondition">並べ替え可能な項目に適用する並べ替え条件。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="sortableItem" /> に適用される並べ替え条件がすでにこのコレクションの中に定義されています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このコレクションには 64 件の並べ替え条件があります。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Clear">
            <summary>コレクションを消去します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Contains(`0)">
            <summary>指定した並べ替え可能項目がこのコレクションに含まれているかどうかを調べます。</summary>
            <param name="sortableItem">このコレクションに含まれているかどうかを調べたい並べ替え可能項目。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <returns>この並べ替え可能項目がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Contains(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>指定した並べ替え条件がこのコレクションに含まれているかどうかを調べます。</summary>
            <param name="sortCondition">このコレクションに含まれているかどうかを調べたい並べ替え条件。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition" /> が null です。
            </exception>
            <returns>この並べ替え条件がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.IndexOf(`0)">
            <summary>コレクション内における指定した並べ替え可能項目のインデックスを取得します。</summary>
            <param name="sortableItem">このコレクションに含まれているかどうかを調べたい並べ替え可能項目。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <returns>コレクション内における指定した並べ替え可能項目のインデックス (ゼロを基準とした数値) が返されます。指定した項目がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.IndexOf(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>コレクション内における指定した並べ替え条件のインデックスを取得します。</summary>
            <param name="sortCondition">このコレクションに含まれているかどうかを調べたい並べ替え条件。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition" /> が null です。
            </exception>
            <returns>コレクション内における指定した並べ替え条件のインデックス (ゼロを基準とした数値) が返されます。指定した並べ替え条件がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Insert(System.Int32,`0,Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>このコレクションに並べ替え条件を挿入します。</summary>
            <param name="index">この並べ替え条件の挿入位置を表すインデックス (ゼロを基準とした数値)。</param>
            <param name="sortableItem">並べ替え条件の適用対象となる並べ替え可能な項目。</param>
            <param name="sortCondition">並べ替え可能な項目に適用する並べ替え条件。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> は 0 未満、または <see cref="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count" /> を超える値です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="sortableItem" /> に適用される並べ替え条件がすでにこのコレクションの中に定義されています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このコレクションには 64 件の並べ替え条件があります。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Remove(`0)">
            <summary>このコレクションから並べ替え可能項目を削除します。</summary>
            <param name="sortableItem">コレクションから削除する並べ替え可能項目。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <returns>この並べ替え可能項目が見つかって削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Remove(Infragistics.Documents.Excel.Sorting.SortCondition)">
            <summary>このコレクションから並べ替え条件を削除します。</summary>
            <param name="sortCondition">コレクションから削除する並べ替え条件。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortCondition" /> が null です。
            </exception>
            <returns>この並べ替え条件が見つかって削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.RemoveAt(System.Int32)">
            <summary>インデックスを指定して並べ替え条件を削除します。</summary>
            <param name="index">削除する並べ替え条件のインデックス (ゼロを基準とした数値)。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count" /> 以上の値です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Count">
            <summary>このコレクションに含まれている並べ替え条件の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Item(System.Int32)">
            <summary>指定したインデックスにある項目および並べ替え条件の組み合わせを取得または設定します。</summary>
            <param name="index">項目および並べ替え条件の組み合わせを取得するインデックス。</param>
            <exception cref="T:System.ArgumentNullException">
            割り当てられた値の Key または Value は null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            異なるインデックスにあるコレクション内のすでに割り当てられた値の Key。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1.Item(`0)">
            <summary>指定した並べ替え可能項目の並べ替え条件を取得または設定します。</summary>
            <param name="sortableItem">並べ替え条件を取得または設定する並べ替え可能項目。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sortableItem" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この並べ替え可能項目はまだコレクション内に存在せず、このコレクションにはすでに 64 件の並べ替え条件が存在します。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.Sorting.SortSettings`1">
            <summary>一定の領域内にある値の並べ替えに適用される設定値を表します。</summary>
            <typeparam name="T">
            論理的な形でデータを含んでいて、そのデータに適用される並び替え条件を設定できるタイプ。
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.CaseSensitive">
            <summary>文字列の並べ替えを行う際に大文字と小文字を区別して文字列を比較するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">これは、文字列の並べ替えに適用される並べ替え条件にのみ有効です。</p>
            </remarks>
            <value>大文字と小文字を区別して文字列を並べ替える場合は True、大文字と小文字を区別しない場合は False。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions">
            <summary>データ領域の並べ替えに使用する並べ替え条件のコレクションを取得します。</summary>
            <remarks>
            <p class="body">こうした設定値を <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> で使用した場合、このコレクションに含まれる各並べ替え条件が <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> に適用されます。</p>
            <p class="body">このコレクションは優先順位に基づく順序を備えています。コレクションの先頭にある並べ替え条件が最も高い優先順位を持ちます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" />
        </member>
        <member name="T:Infragistics.Documents.Excel.CustomTableStyleCollection">
            <summary><see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Workbook" /> 内の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> に適用できる、カスタムの <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンスのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Add(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>このコレクションにカスタムの <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を追加します。</summary>
            <param name="style">コレクションに追加するカスタムのテーブル スタイル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style" /> は標準のテーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style" /> はすでに CustomTableStyleCollection 内に存在します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="style" /> の名前は、このコレクション内にある他のカスタム テーブル スタイルの名前としてすでに使用されています。
            名前は大文字と小文字を区別せずに比較されます。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.Name" />
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Clear">
            <summary>コレクションを消去します。</summary>
            <remarks>
            <p class="body">ワークブックにある <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンスのスタイルをこの操作によって削除した場合、そのインスタンスのスタイルは <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> に設定されることになります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Contains(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> がコレクションに含まれるかどうかを判定します。</summary>
            <param name="style">このコレクションに含まれているかどうかを調べたいテーブル スタイル。</param>
            <returns>このスタイルがコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>コレクション内の指定したスタイルのインデックスを取得します。</summary>
            <param name="style">このコレクションで見つけ出すスタイル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style" /> が null です。
            </exception>
            <returns>コレクション内における指定したスタイルのインデックス (ゼロを基準とした数値) が返されます。スタイルがこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.Remove(Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> をコレクションから削除します。</summary>
            <remarks>
            <p class="body">ワークブックにある <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンスのスタイルをこの操作によって削除した場合、そのインスタンスのスタイルは <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> に設定されることになります。</p>
            </remarks>
            <param name="style">コレクションから削除するテーブル スタイル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="style" /> が null です。
            </exception>
            <returns>指定したスタイルがコレクションに含まれていて削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CustomTableStyleCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を削除します。</summary>
            <remarks>
            <p class="body">ワークブックにある <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンスのスタイルをこの操作によって削除した場合、そのインスタンスのスタイルは <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> に設定されることになります。</p>
            </remarks>
            <param name="index">削除するテーブル スタイルのインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count" /> 以上の値です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count">
            <summary>コレクションに含まれているカスタム <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンスの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Item(System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を取得します。</summary>
            <param name="index">取得したい WorksheetTableStyle の位置を示すインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Count" /> 以上の値です。
            </exception>
            <returns>指定したインデックスにある WorksheetTableStyle インスタンス。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CustomTableStyleCollection.Item(System.String)">
            <summary>名前を指定して <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を取得します。</summary>
            <remarks>
            <p class="body">テーブル スタイル名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">調べたい WorksheetTableStyle の名前。</param>
            <returns>指定した名前の WorksheetTableStyle インスタンスが返されます。この名前のテーブル スタイルが存在しない場合には null 値が返されます。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.StandardTableStyleCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.Workbook" /> 内の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> に適用できる、標準の <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンスのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Count">
            <summary>コレクションに含まれているカスタム <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンスの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Item(System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を取得します。</summary>
            <param name="index">取得したい WorksheetTableStyle の位置を示すインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Count" /> 以上の値です。
            </exception>
            <returns>指定したインデックスにある WorksheetTableStyle インスタンス。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.StandardTableStyleCollection.Item(System.String)">
            <summary>名前を指定して <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> を取得します。</summary>
            <remarks>
            <p class="body">テーブル スタイル名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">調べたい WorksheetTableStyle の名前。</param>
            <returns>指定した名前の WorksheetTableStyle インスタンスが返されます。この名前のテーブル スタイルが存在しない場合には null 値が返されます。</returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTable">
            <summary>テーブルとして書式設定されたセルの領域を表します。</summary>
            <remarks>
            <p class="body">テーブルは、一定範囲の関連データを管理/分析する際に役立ちます。テーブル内のデータの管理は、ワークシート内にある他のデータとは別個に行えます。</p>
            <p class="body">テーブルには 1 つ以上の列が含まれ、並べ替えや絞り込みが行えるようになっています。列に適用できる並べ替え条件や絞り込み条件にはさまざまなタイプがあります。絞り込みに関するタイプは Infragistics.Documents.Excel.Filtering 名前空間で調べることができ、フィルターは、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" /> プロパティを設定することによって列に適用できるようになります。並べ替えに関するタイプは Infragistics.Documents.Excel.Sorting 名前空間で調べることができ、列の並べ替えは、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" /> を設定することによって、もしくは <see cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" /> に関する <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" /> コレクションを作成することによって実現できます。</p>
            <p class="body">テーブルには、計算式に基づいて列値を動的に決定する集計列を含めることができます。<see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula" /> の設定によって集計列にすることができます。</p>
            <p class="body">テーブルには、そのテーブルに関する集計情報を表示する集計行を含めることもできます。これは、<see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible" /> を True に設定することで表示できます。集計行の各列には、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel" /> と <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula" /> のいずれかを設定することにより、それぞれテキストまたは集計値を表示できるようになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedTable" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ToString">
            <summary>テーブルの文字列表現を取得します。</summary>
            <returns>テーブルの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters">
            <summary>テーブル内の列からフィルターをすべて消去します。</summary>
            <remarks>
            <p class="body">このメソッドを呼び出したときにフィルターが存在していてフィルターの消去が実行された場合、テーブルのデータ領域にあって非表示になっていた行がすべて表示されるようになります。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ClearSortConditions">
            <summary>テーブルの列から並べ替え条件をすべて消去します。</summary>
            <remarks>
            <p class="note"><b>注:</b> Microsoft Excel における場合と同じように、並べ替え条件を消去してもテーブルが元の未ソート状態に戻ることはありません。テーブルは最後に並べ替えられた状態のままです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" />
            <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters">
            <summary>テーブル内の列に定義されているフィルターに基づいてテーブル内の全データ セルにフィルターを適用しなおします。</summary>
            <remarks>
            <p class="body">フィルターは、テーブル データの変更に伴って絶えず評価しなおされるというわけではありません。フィルターがテーブルに適用されるのは、テーブル列のフィルターが追加または削除されたときや、ReapplyFilters メソッドが呼び出されたときだけです。</p>
            <p class="body">どのテーブル列にもフィルターが設定されていない場合、このメソッドは列データに対して何も行いません。</p>
            <p class="note"><B>注:</B> フィルターを評価しなおした場合、テーブル列のフィルター条件を満たしていないセルがあると、そうしたセルの行は表示されなくなります。フィルターでふるい落とされた行があると、その行全体がワークシートから隠されてしまうため、同じ行のデータは、テーブルの外側にあっても表示されなくなります。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions">
            <summary>テーブル内の列に定義されている並べ替え条件に基づいてテーブル内の全データ セルに並べ替え条件を適用しなおします。</summary>
            <p class="body">
            並べ替え条件は、テーブル データの変更に伴って絶えず評価しなおされるというわけではありません。並べ替え条件がテーブルに適用されるのは、テーブル列のフィルターが追加または削除されたときや、ReapplySortCondition メソッドが呼び出されたときだけです。
            </p>
            <p class="body">
            どのテーブル列にも並べ替え条件が設定されていない場合、このメソッドは列データに対して何も行いません。
            </p>
            <p class="note">
            <B>注:</B> 並べ替え条件を評価しなおすと、表示されているデータだけが並べ替えられます。データのデータ領域で非表示になっている行がある場合、そうした行のデータは並べ替えられません。
            </p>
            <p class="note">
            <B>注:</B> 並べ替え条件が評価しなおされると、セルは並べ替えられますが、行の並べ替えは行われません。したがって、テーブルのデータ領域と交差する行にあるデータは、テーブルの外側でも並べ替えられることはありません。テーブル内で並べ替えられたセルに数式が含まれている場合、他のセルへの相対参照値には、そのセルが移動した量だけ増減が加えられることになります。たとえば、B5 セルがテーブル内にあり、このセルに C10 セルを参照する数式が含まれているとします。この B5 セルが並べ替えによって B12 にシフトすると、C10 セルへの参照値も同じ量だけ増え、数式は C17 セルを参照するようになります。ただし、移動したセルを参照している数式に対しては、このような更新が行われることはありません。したがって、移動したセルを参照している数式は、並べ替えの適用後に同じ場所に移動してきた別のセルを参照することになります。
            </p>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" />
            <see cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)">
            <summary>テーブルをワークシートの新しいデータの範囲にサイズ変更します。</summary>
            <param name="headerAndDataRegionAddress">表示される場合、1 つ以上のデータ行を持って、重複して、現在のテーブル領域と同じトップ位置を持つテーブルのヘッダーおよびデータの新しい領域のアドレス。</param>
            <remarks>
            <p class="body">合計行が表示される場合、自動的に最後のデータ行の下に配置されます。合計行が新しいテーブル領域にある場合、新しいデータ行の下に移動されます。新しいデータ行が 1 行上に移動されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> がワークシートから削除された場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headerAndDataRegionAddress" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスの場合に発生します。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="headerAndDataRegionAddress" /> は、相対 R1C1 アドレスの場合に発生します。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> の上側がテーブルの上側と同じではない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> がテーブルで 1 つ以上のデータ行を含まない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> が現在のテーブル領域と重複しない場合に発生します。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            新しい領域に結合されたセル、配列数式、データ テーブル、または他のテーブルがある場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>テーブルをワークシートの新しいデータの範囲にサイズ変更します。</summary>
            <param name="headerAndDataRegionAddress">表示される場合、1 つ以上のデータ行を持って、重複して、現在のテーブル領域と同じトップ位置を持つテーブルのヘッダーおよびデータの新しい領域のアドレス。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <remarks>
            <p class="body">合計行が表示される場合、自動的に最後のデータ行の下に配置されます。合計行が新しいテーブル領域にある場合、新しいデータ行の下に移動されます。新しいデータ行が 1 行上に移動されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> がワークシートから削除された場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headerAndDataRegionAddress" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスの場合に発生します。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="headerAndDataRegionAddress" /> は、相対 R1C1 アドレスの場合に発生します。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> の上側がテーブルの上側と同じではない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> がテーブルで 1 つ以上のデータ行を含まない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegionAddress" /> が現在のテーブル領域と重複しない場合に発生します。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            新しい領域に結合されたセル、配列数式、データ テーブル、または他のテーブルがある場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>テーブルをワークシートの新しいデータの範囲にサイズ変更します。</summary>
            <param name="headerAndDataRegion">表示される場合、1 つ以上のデータ行を持って、重複して、現在のテーブル領域と同じトップ位置を持つテーブルのヘッダーおよびデータの新しい領域。</param>
            <remarks>
            <p class="body">合計行が表示される場合、自動的に最後のデータ行の下に配置されます。合計行が新しいテーブル領域にある場合、新しいデータ行の下に移動されます。新しいデータ行が 1 行上に移動されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> がワークシートから削除された場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="headerAndDataRegion" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            別のワークシートの <paramref name="headerAndDataRegion" /> がテーブルのワークシートから移動された場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegion" /> の上側がテーブルの上側と同じではない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegion" /> がテーブルで 1 つ以上のデータ行を含まない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="headerAndDataRegion" /> が現在のテーブル領域と重複しない場合に発生します。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            新しい領域に結合されたセル、配列数式、データ テーブル、または他のテーブルがある場合に発生します。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の各領域で使用される書式のコレクションを取得します。</summary>
            <remarks>
            <p class="body">書式設定の対象として選択できるテーブル領域は、テーブル全体、ヘッダー、データ、および集計領域です。</p>
            <p class="body">ある領域に書式を適用すると、その領域内のすべてのセルに同じ書式が適用されます。</p>
            <p class="body">テーブルのサイズを変更して列の数を増やすときに特定のテーブル領域に関する書式を設定した場合、新しい列の領域書式設定がテーブルの領域書式設定と初期化されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Columns">
            <summary>このテーブル内にある列のコレクションを取得します。</summary>
            <remarks>
            <p class="body">各列は <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> インスタンスによって表され、コンテンツの制御や、列の書式/並べ替え/フィルター処理に関する各種設定値を備えています。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DataAreaRegion">
            <summary>テーブルのデータ領域内にあるセル領域を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
            <remarks>
            <p class="body">テーブルのデータ領域を Resize オーバーロードを使用して変更できます。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayBandedColumns">
            <summary>隔列書式を <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の該当列に適用するどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">列の書式は、WorksheetTable に適用される <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> によって決まります。こうした書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションに収められ、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.ColumnStripe 値および WorksheetTableStyleArea.AlternateColumnStripe 値の参照キーが付けられます。AlternateColumnStripe 値に領域の書式が適用されていない場合、このプロパティはテーブルの表示に影響を与えません。</p>
            <p class="body">この値が true であり、かつ、隔列ストライプに関する領域書式がない場合、ストライプの幅は <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth" /> と <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth" /> の値によって定義されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayBandedRows">
            <summary>隔行書式を <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の該当行に適用するどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">行の書式は、WorksheetTable に適用される <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> によって定義されます。こうした書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションに収められ、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.RowStripe 値および WorksheetTableStyleArea.AlternateRowStripe 値の参照キーが付けられます。AlternateRowStripe 値に関して適用される領域書式がない場合、このプロパティはテーブルの表示に影響を与えません。</p>
            <p class="body">この値が True であり、かつ、隔行ストライプに関する領域書式がない場合、ストライプの幅は <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight" /> と <see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight" /> の値によって定義されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayFirstColumnFormatting">
            <summary>先頭列の書式を <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の該当列に適用するどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">先頭列の書式は、WorksheetTable に適用される <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> によって決まります。この書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションに収められ、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.FirstColumn 値の参照キーが付けられます。FirstColumn 値に領域の書式が適用されていない場合、このプロパティはテーブルの表示に影響を与えません。</p>
            <p class="body">テーブルの列が 1 つだけであるときに先頭列と最終列の両方の書式を適用した場合、最終列の書式が優先されることになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.DisplayLastColumnFormatting" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.DisplayLastColumnFormatting">
            <summary>最終列の書式を <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の該当列に適用するどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">最終列の書式は、WorksheetTable に適用される <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> によって決まります。この書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションに収められ、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.LastColumn 値の参照キーが付けられます。LastColumn 値に関して適用される領域書式がない場合、このプロパティはテーブルの表示に影響を与えません。</p>
            <p class="body">テーブルの列が 1 つだけであるときに先頭列と最終列の両方の書式を適用した場合、最終列の書式が優先されることになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.DisplayFirstColumnFormatting" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.HeaderRowRegion">
            <summary>テーブルのヘッダー行にあるセル領域を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
            <value>
            テーブルのヘッダー行にあるセル領域を表す WorksheetRegion が返されます。ヘッダー行が非表示になっている場合は null 値が返されます。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible">
            <summary>フィルターを許可し、テーブル ヘッダーにフィルター ボタンを表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" /> が False の場合、このプロパティは False でなければならず、True に設定するとエラーが発生します。<see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" /> が True に設定されると、このプロパティも自動的に True に設定されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            指定された値は True で、<see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" /> は False です。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible">
            <summary>列ヘッダー行を表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">ヘッダー行が表示されている場合、それぞれのデータ列の上には、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" /> 値を示すセルが表示されます。したがって、どのヘッダー セルにも常に文字列値が表示されることになります。また、そうした文字列値はすべて一意の値をとります。</p>
            </remarks>
            <value>列のヘッダーを含んでいる行が表示される場合は True、非表示の場合は False。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible">
            <summary>列集計行を表示するかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="body">集計行が表示されている場合、各データ列の下には、集計値やテキスト値を示すセル、もしくは空のセルが表示されます。このセルに集計値を表示するには、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula" /> を設定します。テキストのラベルを表示するには、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel" /> を設定します。両方を設定した場合、集計値が優先されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            この値が True に設定され、テーブルはワークシートの最後の行を占有します。
            </exception>
            <value>列集計値を含んでいる行が表示される場合は True、非表示の場合は False。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings">
            <summary>テーブル データの並べ替え方式を決定する設定値を取得します。</summary>
            <remarks>
            <p class="note"><B>注:</B> 並べ替え条件は、テーブル データの変更に伴って絶えず評価しなおされるというわけではありません。並べ替え条件がテーブルに適用されるのは、テーブル列のフィルターが追加または削除されたときや、<see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions" /> メソッドが呼び出されたときだけです。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Style">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> で使用するスタイルを取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> はテーブル内の各種領域で使用する書式を定義します。こうした書式は、まだ書式プロパティの設定されていないセルに関するデフォルトとして使用されます。</p>
            <p class="body">WorksheetTableStyle に指定した領域書式は差分書式です。つまり、デフォルト以外の値に設定されているプロパティのみが該当セルに適用されます。領域書式で定義できるは、背景色またはフォント情報のみで、その書式はセルに適用されることになりますが、他の書式プロパティはすべて保持されます。</p>
            <p class="body">この値を null 値に設定すると、Style は <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> に設定されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値が、<see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" /> コレクションに存在しません。
            </exception>
            <value>各種テーブル領域書式のデフォルトを定義する <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンス。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.TotalsRowRegion">
            <summary>テーブルの集計行にあるセル領域を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
            <value>
            テーブルの集計行にあるセル領域を表す WorksheetRegion が返されます。集計行が非表示になっている場合は null 値が返されます。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.WholeTableRegion">
            <summary>テーブル全体に含まれるセル領域 (ヘッダーや集計行が表示される場合にはそれらを含めた全表示領域) を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
            <remarks>
            <p class="body">テーブルの領域を Resize オーバーロードを使用して変更できます。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTable.Worksheet">
            <summary>このテーブルが属する <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Worksheet" /> を取得します。</summary>
            <value>このテーブルの所属する Worksheet が返されます。このテーブルが親 Worksheet から削除されている場合は null 値が返されます。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の各領域に関する書式のコレクション。</summary>
            <typeparam name="TArea">
            書式設定の可能な各種テーブル領域を定義している列挙体。
            </typeparam>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.HasFormat(`0)">
            <summary>この領域にデフォルトではないフォーマットが適用されているかどうかを調べます。</summary>
            <param name="area">フォーマットをテストする領域。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="area" /> は定義されていません。
            </exception>
            <returns>この領域にデフォルトではないフォーマットが適用されている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.Count">
            <summary>このコレクションに含まれている領域書式の数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableAreaFormatsCollection`1.Item(`0)">
            <summary>特定の領域に関する書式を取得します。</summary>
            <param name="area">書式を取得したい領域。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="area" /> は定義されていません。
            </exception>
            <value>
            指定した領域の外観を説明する <see cref="T:Infragistics.Documents.Excel.IWorksheetCellFormat" /> インスタンス。
            </value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableCollection">
            <summary>特定の <see cref="T:Infragistics.Documents.Excel.Worksheet" /> に関する <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンスのコレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>特定の領域をテーブルとして書式設定し、関連する <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> をこのコレクションに追加します。</summary>
            <param name="region">テーブルとして書式設定する領域。</param>
            <param name="tableHasHeaders">この領域の一番上の行にテーブルのヘッダーが含まれているかどうかを示す値です。</param>
            <param name="tableStyle">このテーブルに適用する <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" />、または <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> を使用する場合は null 値になります。</param>
            <remarks>
            <p class="body">このテーブルを作成すると、指定された <paramref name="tableStyle" /> は <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" /> の値に適用されます。</p>
            <p class="body"><paramref name="tableHasHeaders" /> が True である場合、このテーブルを作成すると、列名はヘッダー行のセルから取り込まれます。False の場合、列名が生成されてヘッダー行のセルがワークシートに挿入されます。</p>
            <p class="body">列の名前は、親 WorksheetTable 内における一意の名前です。テーブルの作成時に同名の列が 2 つ以上存在する場合、各列を一意に識別できるように 2 番目以降の重複列名の末尾に番号が振られていきます。ヘッダー行のセルのなかに文字列以外の値を持つものがある場合、その値は文字列 (そのセルの現在の表示テキスト) に変換されます。ヘッダー行のセルに値を持たないものがある場合、それらのセルには生成された列名が与えられます。</p>
            <p class="body">この領域に収めきれない結合セル領域がある場合、そうしたセル領域はワークシートから除外され、結合領域のセルがすべて収まるようにテーブル領域が拡張されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            親ワークシートは子ワークブックから削除されています。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> はワークブックのセル参照モードで無効な領域アドレスです。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定された <paramref name="tableStyle" /> は <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" /> コレクションに存在しません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、別の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> のセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、マルチセルの <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> が適用されるセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、<see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> の一部であるセルが 1 つ以上含まれています。
            </exception>
            <returns>作成された <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> は、この領域の書式設定付きテーブルを表します。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Clear">
            <summary>このコレクションを消去し、ワークシートからテーブルをすべて削除します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Contains(Infragistics.Documents.Excel.WorksheetTable)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> がコレクションにあるかどうかを判定します。</summary>
            <param name="table">コレクションに含まれているかどうかを調べたい WorksheetTable。</param>
            <returns>この WorksheetTable がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Exists(System.String)">
            <summary>指定した名前の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> がコレクションに含まれているかどうかを調べます。</summary>
            <param name="name">調べたい WorksheetTable の名前。</param>
            <remarks>
            <p class="body">テーブル名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <returns>指定した名前の WorksheetTable があった場合は True、なかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTable)">
            <summary>コレクション内の指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> のインデックスを取得します。</summary>
            <param name="table">コレクションに含まれているかどうかを調べたい WorksheetTable。</param>
            <returns>コレクション内における指定した WorksheetTable のインデックス (ゼロを基準とした数値) が返されます。指定した WorksheetTable がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.Remove(Infragistics.Documents.Excel.WorksheetTable,System.Boolean)">
            <summary>このコレクションから <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を削除します。</summary>
            <param name="table">コレクションから削除したい WorksheetTable。</param>
            <param name="convertToRange">テーブル スタイルの書式設定をセルに適用するには True。</param>
            <returns>指定した WorksheetTable が見つかって削除された場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableCollection.RemoveAt(System.Int32,System.Boolean)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を削除します。</summary>
            <param name="index">削除したい WorksheetTable のインデックス (ゼロを基準とした数値)。</param>
            <param name="convertToRange">テーブル スタイルの書式設定をセルに適用するには True。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満、または <see cref="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count" /> 以上の値です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count">
            <summary>このコレクションにあるテーブルの数を取得します。</summary>
            <value>このコレクションにあるテーブルの数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Item(System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を取得します。</summary>
            <param name="index">取得したい WorksheetTable のインデックス (ゼロを基準とした数値)。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetTableCollection.Count" /> 以上です。
            </exception>
            <value>指定したインデックスにある WorksheetTable。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableCollection.Item(System.String)">
            <summary>名前を指定して <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を取得します。</summary>
            <remarks>
            <p class="body">ワークシート名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">取得したい WorksheetTable の名前。</param>
            <exception cref="T:System.InvalidOperationException">
            指定した名前の WorksheetTable はコレクションに存在しません。 
            </exception>
            <value>指定した名前の WorksheetTable。</value>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReferenceBase.Name" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumn">
            <summary>特定の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> にある列を表します。</summary>
            <remarks>
            <p class="body">各列は、コンテンツの制御や、列内の書式/並べ替え/フィルター処理に関する各種設定値を備えています。</p>
            </remarks>
            <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter" /> を適用します。</summary>
            <param name="type">データ範囲の平均を下回るデータに絞り込むか、平均を上回るデータに絞り込むかを示す値。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type" />が<see cref="T:Infragistics.Documents.Excel.Filtering.AverageFilterType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.AverageFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" /> を適用します。</summary>
            <param name="condition">データを表示するために一致する必要のある条件。</param>
            <remarks>
            <p class="note"><b>注:</b> フィルター条件値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" /> を適用します。</summary>
            <param name="condition1">データの絞り込みに使用される第 1 条件。</param>
            <param name="condition2">データの絞り込みに使用される第 2 条件。</param>
            <param name="conditionalOperator"><paramref name="condition1" /> および <paramref name="condition2" /> との論理的な連結を定義する演算子。</param>
            <remarks>
            <p class="body"><paramref name="condition2" /> が null 値である場合、<paramref name="conditionalOperator" /> の値は無視されます。</p>
            <p class="note"><b>注:</b> フィルター条件値の 1 つの長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="condition1" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="conditionalOperator" />が<see cref="T:Infragistics.Documents.Excel.Filtering.ConditionalOperator" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.CustomFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter" /> を適用します。</summary>
            <param name="type">表示する日付期間のタイプ。</param>
            <param name="value">表示する月または四半期の 1 から始まる値。</param>
            <remarks>
            <p class="body"><paramref name="type" /> が Month である場合、<paramref name="value" /> の値に 1 を指定すると January に、2 を指定すると February に日付が絞り込まれるという具合になります。タイプが Quarter の場合、この値に 1 を指定すると Quarter 1 に日付が絞り込まれるという形になります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type" />が<see cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilterType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="type" /> が Quarter であり、<paramref name="value" /> が 1 未満または 4 を超える値であるか、もしくはタイプが Month で、値が 1 未満または 12　を超える値です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.DatePeriodFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFillFilter(Infragistics.Documents.Excel.CellFill)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FillFilter" /> を適用します。</summary>
            <param name="fill">フィルターするセルに使用する <see cref="T:Infragistics.Documents.Excel.CellFill" />。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fill" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FillFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> を適用します。</summary>
            <param name="includeBlanks">空のセルを表示するかどうかを示す値。</param>
            <param name="displayValues">表示される大文字と小文字を区別しない一意のセル テキスト値のコレクションを取得します。</param>
            <remarks>
            <p class="note"><b>注:</b> テキスト値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなるか、フィルターを再適用すると一致するセルのいくつかが非表示になる場合があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues" /> コレクションの値は null 値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="displayValues" /> コレクションからの複数値は大文字と小文字を区別せず等しいです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks" /> が False で <paramref name="displayValues" /> に項目はありません。少なくとも 1 つの値を許可する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> を適用します。</summary>
            <param name="includeBlanks">空のセルを表示するかどうかを示す値。</param>
            <param name="displayValues">表示される大文字と小文字を区別しない一意のセル テキスト値のコレクションを取得します。</param>
            <remarks>
            <p class="note"><b>注:</b> テキスト値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなるか、フィルターを再適用すると一致するセルのいくつかが非表示になる場合があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="displayValues" /> コレクションの値は null 値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="displayValues" /> コレクションからの複数値は大文字と小文字を区別せず等しいです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks" /> が False で <paramref name="displayValues" /> に項目はありません。少なくとも 1 つの値を許可する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> を適用します。</summary>
            <param name="includeBlanks">空のセルを表示するかどうかを示す値。</param>
            <param name="dateGroups">表示される固定日付グループのコレクション。</param>
            <remarks>
            <p class="note"><b>注:</b> テキスト値の長さ 255 文字よりも長く、ワークブックが 2003 フォーマットの 1 つで保存される場合、保存されたファイルで正しい行は非表示になりますが、フィルターは列からなくなるか、フィルターを再適用すると一致するセルのいくつかが非表示になる場合があります。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> コレクションの FixedDateGroup は null 値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="dateGroups" /> の複数項目は互いに等しいです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks" /> が False で <paramref name="dateGroups" /> に項目はありません。少なくとも 1 つの値を許可する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,Infragistics.Documents.Excel.Filtering.FixedDateGroup[])">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> を適用します。</summary>
            <param name="includeBlanks">空のセルを表示するかどうかを示す値。</param>
            <param name="calendarType"><paramref name="dateGroups" /> コレクションに含まれる値の解釈に使用されるカレンダー タイプ。</param>
            <param name="dateGroups">表示される固定日付グループのコレクション。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType" />が<see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> コレクションの FixedDateGroup は null 値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="dateGroups" /> の複数項目は互いに等しいです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks" /> が False で <paramref name="dateGroups" /> に項目はありません。少なくとも 1 つの値を許可する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" /> を適用します。</summary>
            <param name="includeBlanks">空のセルを表示するかどうかを示す値。</param>
            <param name="calendarType"><paramref name="dateGroups" /> コレクションに含まれる値の解釈に使用されるカレンダー タイプ。</param>
            <param name="dateGroups">表示される固定日付グループのコレクション。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="calendarType" />が<see cref="T:Infragistics.Documents.Excel.Filtering.CalendarType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="dateGroups" /> コレクションの FixedDateGroup は null 値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="dateGroups" /> の複数項目は互いに等しいです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="includeBlanks" /> が False で <paramref name="dateGroups" /> に項目はありません。少なくとも 1 つの値を許可する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FixedValuesFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter" /> を適用します。</summary>
            <param name="fontColor">セルの絞り込みに使用するフォントの色。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColor" /> は空です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter" /> を適用します。</summary>
            <param name="fontColorInfo">フィルターするセルに使用するフォントの色を説明する <see cref="T:Infragistics.Documents.Excel.WorkbookColorInfo" />。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="fontColorInfo" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.FontColorFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" /> を適用します。</summary>
            <param name="offset">相対フィルターのオフセット。このタイプのフィルターを <paramref name="duration" /> と組み合わせて使用すると、許容される全日付範囲が決定されます。</param>
            <param name="duration">許容される全日付範囲の期間です。</param>
            <remarks>
            <p class="body">RelativeDateRangeFilter では、フィルターの適用日を基点として、1 つ前、現在、または次の期間に含まれる日付に絞り込むことができます。指定できる期間は、日、週、月、四半期、および年です。したがって、期間に day を指定して previous というフィルター タイプを使用すると、「yesterday」というフィルターが作成されます。あるいは、期間に year を指定して current というフィルター タイプを使用すると、「this year」というフィルターが作成されます。ただし、こうしたフィルターは、フィルターの作成日を基準日としてデータを評価します。したがって、1999 年に作成された「this year」というフィルターを使用すると、たとえ 2012 年にワークブックを開いたとしても、1999 年の日付を含むセルがすべて表示されることになります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="offset" />が<see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="duration" />が<see cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.RelativeDateRangeFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter">
            <summary>並べ替えられた値リストで上位 10 番目までに入る値を絞り込む列に <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" /> を適用します。</summary>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" /> を適用します。</summary>
            <param name="type">このフィルターのタイプ。</param>
            <param name="value">表示する値の数またはパーセンテージ。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="type" />が<see cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="value" /> が、1 未満、または 500 を超える値です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.TopOrBottomFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter">
            <summary>列に <see cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter" /> を適用します。</summary>
            <exception cref="T:System.InvalidOperationException">
            所有テーブルの <see cref="P:Infragistics.Documents.Excel.WorksheetTable.IsFilterUIVisible" /> 値は False です。 
            ヘッダー行またはフィルター ボタンが非表示の時にフィルターを適用できません。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.Filtering.YearToDateFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter">
            <summary>適用される場合、列からフィルターを削除します。</summary>
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFillFilter(Infragistics.Documents.Excel.CellFill)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumn.SetColumnFormula(Infragistics.Documents.Excel.Formula,System.Boolean)">
            <summary>この列のデータ セルで使用する数式を設定します。</summary>
            <param name="formula">この列のデータ セルで使用したい数式を指定します。null 値を指定すると、現在の列に設定されている数式が削除されます。</param>
            <param name="overwriteExistingValues">既存のセル値を上書きして、この列の全データ セルに数式を適用したい場合は true に設定します。値が設定されていないセルにのみ数式を適用したい場合は False に設定します。</param>
            <remarks>
            <p class="body">指定した数式に相対セル参照や相対領域参照が含まれている場合、実際の数式は当該の列にある最初のデータ セルに適用するものとみなされます。この数式が列内の他のセルに適用される場合、相対参照値が適切な量だけずらされます。</p>
            <p class="body">列の数式を設定し、テーブルのサイズを変更して列の数を増やした場合、その列内の新しいセルには、その列の数式が適用されることになります。</p>
            <p class="body">以前に適用された別の列数式があって、列内のいずれかのセルにその数式が適用されている場合、その数式を別の数式に変更すると、セルに適用されていた以前の数式は、<paramref name="overwriteExistingValues" /> の値に関係なく上書きされることになります。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <exception cref="T:System.InvalidOperationException">列がテーブルから削除された場合。</exception>
            <paramref name="formula" /> は、セルやテーブル列といった他の領域にすでに適用されています。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats">
            <summary>列の各領域で使用される書式のコレクションを取得します。</summary>
            <remarks>
            <p class="body">書式設定の対象として選択できる列の領域は、ヘッダー、データ、および集計領域です。</p>
            <p class="body">ある領域に書式を適用すると、その領域内のすべてのセルに同じ書式が適用されます。</p>
            <p class="body">テーブルのサイズを変更して行の数を増やすときに特定の列領域に関する書式を設定した場合、当該の列内の新しいセルにはその新しい書式が適用されることになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.Resize(Infragistics.Documents.Excel.WorksheetRegion)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.ColumnFormula">
            <summary>この列のデータ領域に関連付けられている数式を取得します。</summary>
            <remarks>
            <p class="body">列の数式を設定し、テーブルのサイズを変更して列の数を増やした場合、その列内の新しいセルには、その列の数式が適用されることになります。</p>
            </remarks>
            <value>この列のデータ領域に適用されている数式を表す <see cref="T:Infragistics.Documents.Excel.Formula" /> インスタンスが返されます。適用されている数式がない場合は null 値が返されます。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.SetColumnFormula(Infragistics.Documents.Excel.Formula)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.DataAreaRegion">
            <summary>この列のデータ領域内にあるセル領域を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter">
            <summary>この列に適用されるフィルターを取得します。</summary>
            <remarks>
            <p class="body">フィルターは、テーブル データの変更に伴って絶えず評価しなおされるというわけではありません。フィルターがテーブルに適用されるのは、テーブル列のフィルターが追加または削除されたときや、<see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters" /> メソッドが呼び出されたときだけです。</p>
            <p class="note"><B>注:</B> フィルターを評価しなおした場合、テーブル列のフィルター条件を満たしていないセルがあると、そうしたセルの行は表示されなくなります。フィルターでふるい落とされた行があると、その行全体がワークシートから隠されてしまうため、同じ行のデータは、テーブルの外側にあっても表示されなくなります。</p>
            </remarks>
            <value>
            フィルターが適用されている場合は <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Filter" /> 派生インスタンスが返されます。この列にフィルターが適用されていない場合は null 値が返されます。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyAverageFilter(Infragistics.Documents.Excel.Filtering.AverageFilterType)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyCustomFilter(Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.CustomFilterCondition,Infragistics.Documents.Excel.Filtering.ConditionalOperator)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyDatePeriodFilter(Infragistics.Documents.Excel.Filtering.DatePeriodFilterType,System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(System.Drawing.Color)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFontColorFilter(Infragistics.Documents.Excel.WorkbookColorInfo)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.String[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{System.String})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyFixedValuesFilter(System.Boolean,Infragistics.Documents.Excel.Filtering.CalendarType,System.Collections.Generic.IEnumerable{Infragistics.Documents.Excel.Filtering.FixedDateGroup})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyRelativeDateRangeFilter(Infragistics.Documents.Excel.Filtering.RelativeDateRangeOffset,Infragistics.Documents.Excel.Filtering.RelativeDateRangeDuration)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyTopOrBottomFilter(Infragistics.Documents.Excel.Filtering.TopOrBottomFilterType,System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ApplyYearToDateFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableColumn.ClearFilter" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearFilters" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplyFilters" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.HeaderCell">
            <summary>この列のヘッダー セルを表す <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> を取得します。</summary>
            <value>
            この列のヘッダー セルを表す WorksheetCell が返されます。ヘッダー行がテーブルに表示されない場合は null 値が返されます。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Index">
            <summary>所属する <see cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns" /> コレクション内におけるこの列のインデックス (ゼロを基準とした数値) を取得します。</summary>
            <value>
            コレクション内における列のインデックス (ゼロを基準とした数値) が返されます。その列がテーブルから削除されている場合は -1 が返されます。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name">
            <summary>列の名前を取得または設定します。</summary>
            <remarks>
            <p class="body"><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> にヘッダー行が表示される場合、この列の名前がヘッダー行の列セルに表示されます。</p>
            <p class="body">WorksheetTable を作成すると、列の名前はヘッダー行のセルから取り込まれることになります。テーブルにヘッダー行が含まれていない場合、列の名前は自動的に生成されます。</p>
            <p class="body">列の名前は、親 WorksheetTable 内における一意の名前です。テーブルの作成時に同名の列が 2 つ以上存在する場合、各列を一意に識別できるように 2 番目以降の重複列名の末尾に番号が振られていきます。ヘッダー行のセルのなかに文字列以外の値を持つものがある場合、その値は文字列 (そのセルの現在の表示テキスト) に変換されます。ヘッダー行のセルに値を持たないものがある場合、それらのセルには生成された列名が与えられます。</p>
            <p class="body">Name プロパティを null 値または空の文字列に設定した場合、列の名前は自動的に生成されます。指定した列名がすでにテーブル内に存在する場合、すべての列を一意に識別できるよう、インデックス値の大きな列には列名の末尾に番号が付けられることになります。</p>
            </remarks>
            <value>所属する WorksheetTable 内における一意の列名。</value>
            <exception cref="T:System.InvalidOperationException">セッターで列がテーブルから削除された場合、エラーは発生されます。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition">
            <summary>テーブル内での列の並べ替えに使用される並べ替え条件を取得または設定します。</summary>
            <remarks>
            <p class="body">並べ替え条件を列に設定すると、<see cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" /> の SortConditions コレクションがクリアされ、新しい並べ替え条件が追加されます。複数列で並べ替えるには、列で設定する代わりに並べ替え条件を SortConditions コレクションに追加する必要があります。ただし、並べ替え条件をこのプロパティでクリアすると、その列の並べ替え条件は SortConditions コレクションから削除されます。その他すべての SortConditions はコレクションに残ります。</p>
            <p class="note"><B>注:</B> 並べ替え条件は、テーブル データの変更に伴って絶えず評価しなおされるというわけではありません。並べ替え条件がテーブルに適用されるのは、テーブル列のフィルターが追加または削除されたときや、<see cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions" /> メソッドが呼び出されたときだけです。</p>
            </remarks>
            <value>列の並べ替えに使用される <see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.SortCondition" /> 派生インスタンスが返されます。列の並べ替えが行われない場合は null 値が返されます。</value>
            <exception cref="T:System.InvalidOperationException">セッターで列がテーブルから削除された場合、エラーは発生されます。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.SortSettings" />
            <seealso cref="P:Infragistics.Documents.Excel.Sorting.SortSettings`1.SortConditions" />
            <seealso cref="T:Infragistics.Documents.Excel.Sorting.SortConditionCollection`1" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ClearSortConditions" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTable.ReapplySortConditions" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.Table">
            <summary>この列の所属する <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を取得します。</summary>
            <value>
            この列の所属する WorksheetTable が返されます。この列がテーブルから削除されている場合は null 値が返されます。
            </value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalCell">
            <summary>この列の集計セルを表す <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> を取得します。</summary>
            <value>
            この列の集計セルを表す WorksheetCell が返されます。集計行がテーブルに表示されない場合は null 値が返されます。
            </value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula">
            <summary>この列の集計セルで使用する数式を取得または設定します。</summary>
            <remarks>
            <p class="body">集計式は、集計行の表示/非表示に関係なく設定できます。集計行が非表示になっている場合、集計式はどこにも適用されません。集計行が表示される場合は、この列の集計セルに集計行が適用されることになります。</p>
            <p class="body">TotalFormula を null 以外の値に設定すると、<see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel" /> がクリアされ、逆に設定しても同様にクリアされます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            この値は、セルやテーブル列といった他の領域にすでに適用されています。
            </exception>
            <exception cref="T:System.InvalidOperationException">セッターで列がテーブルから削除された場合、エラーは発生されます。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalLabel">
            <summary>この列の集計セルで使用するテキスト ラベルを取得または設定します。</summary>
            <remarks>
            <p class="body">集計ラベルは、集計行の表示/非表示に関係なく設定できます。集計行が非表示になっている場合、ラベルはどこにも適用されません。集計行が表示される場合は、ラベルがこの列の集計セルの値として設定されることになります。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula" /> を null 以外の値に設定すると、TotalLabel がクリアされ、逆に設定しても同様にクリアされます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">セッターで列がテーブルから削除された場合、エラーは発生されます。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.TotalFormula" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsTotalsRowVisible" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumn.WholeColumnRegion">
            <summary>列全体に含まれるセル領域 (ヘッダーや合計セルが表示される場合にはそれらを含めた全表示領域) を表す <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> を取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableColumnCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> に存在する全 <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> インスタンスの読み取り専用コレクション。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Columns" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Contains(Infragistics.Documents.Excel.WorksheetTableColumn)">
            <summary>指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> がコレクションにあるかどうかを判定します。</summary>
            <param name="column">コレクションに含まれているかどうかを調べたい列。</param>
            <returns>指定した列がコレクションに含まれている場合は True、そうでない場合は False。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableColumnCollection.IndexOf(Infragistics.Documents.Excel.WorksheetTableColumn)">
            <summary>コレクション内の指定した <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> のインデックスを取得します。</summary>
            <param name="column">コレクションに含まれているかどうかを調べたい WorksheetTableColumn。</param>
            <returns>コレクション内における指定した WorksheetTableColumn のインデックス (ゼロを基準とした数値) が返されます。指定した項目がこのコレクションに含まれていない場合は -1 が返されます。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Count">
            <summary>コレクション内の <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> インスタンスの数を取得します。</summary>
            <value>このコレクション内の列の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Item(System.Int32)">
            <summary>指定したインデックスにある <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> を取得します。</summary>
            <param name="index">取得する列のインデックス (ゼロを基準とした数値)。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、ゼロ未満、またはコレクションに含まれる列数以上の値です。
            </exception>
            <returns>指定されたインデックスにある WorksheetTableColumn 。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableColumnCollection.Item(System.String)">
            <summary>指定した名前の <see cref="T:Infragistics.Documents.Excel.WorksheetTableColumn" /> が返されます。この列が存在しない場合は null が返されます。</summary>
            <param name="name">取得する列の名前。</param>
            <remarks>
            <p class="body">列名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <returns>指定した名前の WorksheetTableColumn が返されます。指定した名前の列が存在しない場合は null 値が返されます。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetTableStyle">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> に適用できるスタイルを表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableStyle.#ctor(System.String)">
            <summary>カスタムの <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" /> インスタンスを作成します。</summary>
            <param name="name">新しいスタイルの名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetTableStyle.Clone(System.String)">
            <summary>このスタイルを複製してディープ コピーを返します。</summary>
            <param name="name">クローンされたスタイルに指定するための名前。</param>
            <remarks>
            <p class="body">複製したスタイルは、<see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> コレクションに追加しないと、<see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> に適用できません。</p>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> の値だけは元のスタイルから複製されません。標準スタイルを複製すると、同じスタイル設定値を備えたカスタムのスタイルが作成されます。スタイル設定値はあとで変更できます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <returns>スタイルの複製。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth">
            <summary>各隔列ストライプに収められる列の数を取得または設定します。</summary>
            <remarks>
            <p class="body">ストライプのサイズに指定できる値の範囲は 1 から 9 までです。</p>
            <p class="body">列ストライプは、テーブルの左から右に向かって、最初に列ストライプ、次に隔列ストライプという順番で交互に割り当てられていきます。</p>
            <p class="body">隔列ストライプの書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションで定義され、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.AlternateColumnStripe 値の参照キーが付けられます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            この値は設定されていて、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> は False です。つまり、指定したスタイルは読み取り専用の標準テーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            1 未満または 9 よりも大きな値が指定されました。
            </exception>
            <value>各隔列ストライプに収められる列の数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight">
            <summary>各隔行ストライプに収められる行の数を取得または設定します。</summary>
            <remarks>
            <p class="body">ストライプのサイズに指定できる値の範囲は 1 から 9 までです。</p>
            <p class="body">行ストライプは、テーブルの上から下に向かって、最初に行ストライプ、次に隔行ストライプという順番で交互に割り当てられていきます。</p>
            <p class="body">隔行ストライプの書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションで定義され、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.AlternateRowStripe 値の参照キーが付けられます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            この値は設定されていて、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> は False です。つまり、指定したスタイルは読み取り専用の標準テーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            1 未満または 9 よりも大きな値が指定されました。
            </exception>
            <value>各隔行ストライプに収められる行の数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats">
            <summary>このスタイルが適用される <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> の各領域で使用される書式のコレクションを取得します。</summary>
            <remarks>
            <p class="body">指定した領域書式は差分書式です。つまり、デフォルト以外の値に設定されているプロパティのみが該当セルに適用されます。領域書式で定義できるは、背景色またはフォント情報のみで、その書式はセルに適用されることになりますが、他の書式プロパティはすべて保持されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.AreaFormats" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.AreaFormats" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.ColumnStripeWidth">
            <summary>各列ストライプに収められる列の数を取得または設定します。</summary>
            <remarks>
            <p class="body">ストライプのサイズに指定できる値の範囲は 1 から 9 までです。</p>
            <p class="body">列ストライプは、テーブルの左から右に向かって、最初に列ストライプ、次に隔列ストライプという順番で交互に割り当てられていきます。</p>
            <p class="body">列ストライプの書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションで定義され、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.ColumnStripe 値の参照キーが付けられます。</p>
            </remarks>
            <value>各列ストライプに収められる列の数。</value>
            <exception cref="T:System.InvalidOperationException">
            この値は設定されていて、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> は False です。つまり、指定したスタイルは読み取り専用の標準テーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            1 未満または 9 よりも大きな値が指定されました。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateColumnStripeWidth" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom">
            <summary>このスタイルがカスタム スタイルであるかどうかを示す値を取得します。</summary>
            <value>このスタイルがカスタム テーブル スタイルである場合は True、このスタイルが読み取り専用の標準テーブル スタイルである場合は False。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.Name">
            <summary>このスタイルの名前を取得または設定します。</summary>
            <exception cref="T:System.InvalidOperationException">
            この値は設定されていて、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> は False です。つまり、指定したスタイルは読み取り専用の標準テーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentException">
            null、空の値、もしくは 255 文字を超える長さの値が指定されました。
            </exception>
            <exception cref="T:System.ArgumentException">
            親 <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> コレクションに含まれる別のカスタム スタイルに付けられている名前が指定されました。
            テーブル名は大文字と小文字を区別せずに比較されます。
            </exception>
            <value>スタイルの名前です。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetTableStyle.RowStripeHeight">
            <summary>各行ストライプに収められる行の数を取得または設定します。</summary>
            <remarks>
            <p class="body">ストライプのサイズに指定できる値の範囲は 1 から 9 までです。</p>
            <p class="body">行ストライプは、テーブルの上から下に向かって、最初に行ストライプ、次に隔行ストライプという順番で交互に割り当てられていきます。</p>
            <p class="body">行ストライプの書式は、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AreaFormats" /> コレクションで定義され、<see cref="T:Infragistics.Documents.Excel.WorksheetTableStyleArea" />.RowStripe 値の参照キーが付けられます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            この値は設定されていて、<see cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.IsCustom" /> は False です。つまり、指定したスタイルは読み取り専用の標準テーブル スタイルです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            1 未満または 9 よりも大きな値が指定されました。
            </exception>
            <value>各行ストライプに収められる行の数。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableStyle.AlternateRowStripeHeight" />
        </member>
        <member name="T:Infragistics.Documents.Excel.UnfrozenPaneSettings">
            <summary>固定されていないペインがワークシートで整理および使用される方法を制御するクラス。</summary>
            <remarks>
            <p class="note"><B>注:</B> 固定されたペインと固定されていないペインは同時に使用できないので、ペインが固定されているどうかによって、これらの設定が使用されない、または保存されない場合があります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.DisplayOptions.PanesAreFrozen" />
            <seealso cref="T:Infragistics.Documents.Excel.FrozenPaneSettings" />
        </member>
        <member name="M:Infragistics.Documents.Excel.UnfrozenPaneSettings.ResetCore">
            <summary>固定されていないペイン設定をデフォルトにリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.FirstColumnInLeftPane">
            <summary>ワークシートの左ペインの最初の表示可能な列を取得または設定します。</summary>
            <remarks>
            <p class="body">これはワークシートの左ペインのスクロール位置に影響を及ぼし、ワークシートが垂直方向に分割されるかどうかに関係なく使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した値は有効な列範囲の外です (ワークブックの <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> によって 0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> よりも 1 つ小さい)。
            </exception>
            <value>左ペインの最初の表示可能な列の 0 で始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.FirstRowInTopPane">
            <summary>ワークシートの上ペインの最初の表示可能な行を取得または設定します。</summary>
            <remarks>
            <p class="body">これはワークシートの上ペインのスクロール位置に影響を及ぼし、ワークシートが水平方向に分割されるかどうかに関係なく使用されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            割り当てた値が有効な行値の範囲外です (ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> によって、有効な値は、0 から <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount" /> -1 または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount" /> -1 までの範囲になります)。
            </exception>
            <value>上ペインの最初の表示可能な行の 0 で始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.LeftPaneWidth">
            <summary>左ペインの幅をトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">値がゼロの場合、左ペインはワークシートの表示可能なすべての領域を占有します。そうでなければ、左ペインは指定した幅を占有し、右ペインはワークシートの残りの領域を占有します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した幅が有効な幅の範囲（0 から 65535）の外である場合はスローされます。
            </exception>
            <value>左ペインの幅、または水平のペイン分割がなければゼロ。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.UnfrozenPaneSettings.TopPaneHeight">
            <summary>上ペインの高さをトゥイップで取得または設定します (ポイントの 1/20)。</summary>
            <remarks>
            <p class="body">値がゼロの場合、上ペインはワークシートの表示可能なすべての領域を占有します。そうでなければ、上ペインは指定した高さを占有し、下ペインはワークシートの残りの領域を占有します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定した高さが有効な高さの範囲（0 から 65535）の外である場合はスローされます。
            </exception>
            <value>上ペインの高さ、または垂直のペイン分割がなければゼロ。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.UnknownShape">
            <summary>ワークブック ファイルから読み込みされたサポートされない形状を表します。</summary>
            <remarks>
            <p class="body">このクラスは往復目的のために使用されるので、読み込みされたサポートされていない形状は、ワークブックで戻って保存可能です。このクラスによってサポートされていない形状を形状コレクションで識別することができるので、それらを削除できます。すべての形状タイプがサポートされると、この形状は将来のバージョンでは使用されません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.UnknownShape.ClearUnknownData">
            <summary>不明の形状のすべてのデータは確認できないので例外がスローされ、そのデータをクリアすると形状付きのデータはなくなります。</summary>
            <exception cref="T:System.InvalidOperationException">
            このメソッドは、<see cref="T:Infragistics.Documents.Excel.UnknownShape" /> インスタンスで呼び出されます。
            </exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookColorPalette">
            <summary>保存しておいたファイルを Microsoft Excel 2003 以前のバージョンで開いたときに使用されるカラー パレットです。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Palette" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.Contains(System.Drawing.Color)">
            <summary>指定した値がカラー パレットにあるかどうかを調べます。</summary>
            <param name="color">パレットにあるかどうかを調べたい色。</param>
            <returns>同等の色がカラー パレットにあるかどうかを調べます。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.GetIndexOfNearestColor(System.Drawing.Color)">
            <summary>カラー パレットにある最も近い色のインデックスを取得します。Microsoft Excel 2003 以前のバージョンでファイルを開いたときにはこの色が表示されることになります。</summary>
            <param name="color">パレットにある同等の色。</param>
            <returns>パレットにある最も近い色を表すコレクション インデックス (ゼロを基準とした数値)。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset">
            <summary>パレットを Microsoft Excel の既定色にリセットします。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.Count">
            <summary>パレットにある色の数を取得します。この値は常に 56 です。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.Item(System.Int32)">
            <summary>パレットの色を取得または設定します。</summary>
            <remarks>
            <p class="body">パレットに色が設定されると、<see cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom" /> は True を返します。パレットをリセットするには、<see cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset" /> メソッドを使用します。</p>
            <p class="body">パレットに追加される色は不透明でなければなりません。</p>
            </remarks>
            <param name="index">取得または設定したいパレットの色を表すインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、0 未満、または 55 を超える値です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てられた値は色がない状態かシステム カラーまたは不透明でない色です。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom" />
            <seealso cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookColorPalette.IsCustom">
            <summary>パレットがカスタマイズされたかどうかを示す値を取得します。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.WorkbookColorPalette.Reset" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookSaveOptions">
            <summary>ワークブックをファイルまたはストリームへの保存と関連するオプションを含みます。</summary>
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Save(System.String,Infragistics.Documents.Excel.WorkbookSaveOptions)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.Save(System.IO.Stream,Infragistics.Documents.Excel.WorkbookSaveOptions)" /> 
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveOptions.#ctor(Infragistics.Documents.Core.Packaging.IPackageFactory)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorkbookSaveOptions" /> インスタンスを作成します。</summary>
            <param name="packageFactory">ストリームで IPackage を作成するために使用できる IPackageFactory です。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetAllocatedRowCount(Infragistics.Documents.Excel.Worksheet)">
            <summary>割り当てられた行の数を決定するために使用されます。</summary>
            <param name="worksheet">情報が要求されているワークシート。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)">
            <summary>保存されている範囲に行の合計数を決定するために使用されます。開始インデックスは 0 ではない可能で、返された値は最後の項目の後のインデックスではありません。</summary>
            <param name="worksheet">情報が要求されているワークシート。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.GetRows(Infragistics.Documents.Excel.Worksheet,System.Boolean)">
            <summary>保存する行をトラバースする列挙子を返します。</summary>
            <param name="worksheet">情報が要求されているワークシート。</param>
            <param name="forceRowAllocation">False の場合、割り当てられている行のみを返します。True の場合、保存されている範囲のすべての行を返します。</param>
            <returns></returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookSaveFilter.DefaultWorkbookSaveFilter.GetMaxRowCount(Infragistics.Documents.Excel.Worksheet)">
            <returns></returns>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookStyle">
            <summary>セルの書式に適用できる複雑な書式を表します。</summary>
            <remarks>
            <p class="body">CellFormat.Style プロパティの設定によりスタイルをセルに適用しても、そのセルはスタイルの適用を受けた書式プロパティに引き続き書式変更を受け入れることができます。これは、書式プロパティでセル書式に他の値が設定されるまで継続されます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Styles" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyle.Reset">
            <summary>元の状態にスタイルをリセットします。</summary>
            <remarks>
            <p class="body">スタイルがユーザー定義の場合、スタイルの書式はリセットされますが、書式プロパティは影響を受けません。スタイルが組み込みで、変更履歴がある場合、この書式はプリセット状態に戻ります。</p>
            </remarks>
            <see cref="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn">
            <summary>このスタイルが Microsoft Excel の組み込みスタイルであるかどうかを示す値を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.Name">
            <summary>ワークブックのスタイル名を取得または設定します。</summary>
            <remarks>
            <p class="body">スタイルには大文字/小文字の区別なく一意の名前を付ける必要があります。組み込みスタイルの名前は変更できません。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            値が割り当てられ、スタイルが構築されます。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てた値が null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            割り当てた値の長さが 255 文字を超えています。
            </exception>
            <exception cref="T:System.ArgumentException">
            このコレクションに含まれる別のスタイルに付けられている名前が指定されました。
            </exception>
            <value>ワークブック スタイルの名前。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyle.IsBuiltIn" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyle.StyleFormat">
            <summary>ワークブック スタイルに適用されるセル書式を取得します。</summary>
            <value>ワークブック スタイルに適用されるセル書式。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookStyleCollection">
            <summary>ワークブック スタイルのコレクション、または Microsoft Excel でセルに簡単に適用可能な複雑な書式。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorkbookStyle" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)">
            <summary>ユーザー定義の新しいスタイルをワークブックに追加します。</summary>
            <param name="name">Microsoft Excel でスタイルを識別する名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            スタイルは <paramref name="name" /> の名前で既に存在します。名前は大文字と小文字を区別せずに比較されます。
            </exception>
            <returns><see cref="T:Infragistics.Documents.Excel.WorkbookStyle" /> インスタンスとして追加されたユーザー定義スタイル。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)">
            <summary>ユーザー定義の新しいスタイルをワークブックに追加します。</summary>
            <param name="styleFormat">スタイルのセル書式。</param>
            <param name="name">Microsoft Excel でスタイルを識別する名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は 255 文字よりも長いです。
            </exception>
            <exception cref="T:System.ArgumentException">
            スタイルは <paramref name="name" /> の名前で既に存在します。名前は大文字と小文字を区別せずに比較されます。
            </exception>
            <returns><see cref="T:Infragistics.Documents.Excel.WorkbookStyle" /> インスタンスとして追加されたユーザー定義スタイル。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Clear">
            <summary>コレクションから Normal スタイル以外のすべてのスタイルをクリアします。</summary>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)" />
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Contains(Infragistics.Documents.Excel.WorkbookStyle)">
            <summary>スタイルがコレクションにあるかどうかを決定します。</summary>
            <param name="style">このコレクションで見つけ出すスタイル。</param>
            <returns>スタイルが見つかった場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Remove(Infragistics.Documents.Excel.WorkbookStyle)">
            <summary>指定したスタイルをコレクションから削除します。</summary>
            <param name="style">コレクションから削除するスタイル。</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="style" /> は Normal スタイルです。
            </exception>
            <returns>スタイルの削除に成功した場合は True、スタイルがコレクションになかった場合は False。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにあるスタイルをコレクションから削除します。</summary>
            <param name="index">コレクションに含まれるスタイルの 0 から始まるインデックス番号。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count" /> 以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="index" /> で削除しようとしているスタイルは Normal スタイルです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookStyleCollection.Reset">
            <summary>スタイルをすべてクリアしてプリセット組み込みスタイルで追加することによって、このコレクションを元の状態にリセットします。</summary>
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(System.String)" />
            <see cref="M:Infragistics.Documents.Excel.WorkbookStyleCollection.AddUserDefinedStyle(Infragistics.Documents.Excel.IWorksheetCellFormat,System.String)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count">
            <summary>このコレクション内のスタイルの数を取得します。</summary>
            <value>このコレクション内のスタイルの数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Item(System.Int32)">
            <summary>指定したインデックスでスタイルを取得します。</summary>
            <param name="index">取得するスタイルの 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Count" /> 以上です。
            </exception>
            <value>指定されたインデックスにあるスタイル。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.Item(System.String)">
            <summary>指定した名前のスタイルを取得します。</summary>
            <param name="name">取得するスタイルの名前。</param>
            <remarks>
            <p class="body">スタイル名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> が null です。
            </exception>
            <value>指定した名前のスタイルが存在する場合にはそのスタイルが返され、その名前のスタイルが存在しない場合には null 値が返されます。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookStyleCollection.NormalStyle">
            <summary>このワークブックの既定スタイルを取得します。</summary>
            <remarks>
            <p class="body">別の親スタイルが指定されていない限り、標準スタイルがワークブックのすべてのセルおよび差分書式の親スタイルになります。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.Style" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorkbookWindowOptions">
            <summary>ワークブックで保存されるウィンドウ オプションを表します。</summary>
            <remarks>
            <p class="body">このプロパティは明示的にこのクラスで定義され、基本クラスから継承されず、<see cref="T:Infragistics.Documents.Excel.WindowOptions" /> はワークブックで保存できるオプションでカスタム表示では保存できません。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.WindowOptions" />
            <seealso cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorkbookWindowOptions.Reset">
            <summary>ウィンドウ オプションをデフォルト設定にリセットします。</summary>
            <remarks>
            <p class="body">各設定で使用されるデフォルトは、Microsoft Excel が空のワークブックを作成するデフォルトと同じです。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.BoundsInTwips">
            <summary>ワークブックの MDI 子ウィンドウの境界をトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.CustomView" /> で保存できません。これは <see cref="T:Infragistics.Documents.Excel.Workbook" /> に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" /> には対応するプロパティはなく、新しく作成された CustomView はこのプロパティからの設定で初期化されません。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            割り当てられた値の幅または高さは 0 より小さくなります。
            </exception>
            <value>トゥイップでのワークブックの MDI 子ウィンドウの境界（ポイントの 1/20）。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.FirstVisibleTabIndex">
            <summary>ワークシート タブ バーの最初の表示可能なタブのインデックスを取得または設定します。</summary>
            <remarks>
            <p class="body">ワークシート タブ バーが表示できない場合、この値は使用されませんが、ワークブックで保存されます。</p>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.CustomView" /> で保存できません。これは <see cref="T:Infragistics.Documents.Excel.Workbook" /> に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" /> には対応するプロパティはなく、新しく作成された CustomView はこのプロパティからの設定で初期化されません。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値はゼロ未満です。
            </exception>
            <value>ワークシート タブ バーの最初の表示可能なタブのインデックス。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarVisible" />
            <seealso cref="P:Infragistics.Documents.Excel.WindowOptions.TabBarWidth" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorkbookWindowOptions.Minimized">
            <summary>ワークブックの MDI 子ウィンドウが Microsoft Excel で縮小されるかどうかを示す値を取得または設定します。</summary>
            <remarks>
            <p class="note"><b>注:</b> この設定は、Excel ファイルの <see cref="T:Infragistics.Documents.Excel.CustomView" /> で保存できません。これは <see cref="T:Infragistics.Documents.Excel.Workbook" /> に限って保存できます。したがって、<see cref="T:Infragistics.Documents.Excel.CustomViewWindowOptions" /> には対応するプロパティはなく、新しく作成された CustomView はこのプロパティからの設定で初期化されません。</p>
            </remarks>
            <value>ワークブックの MDI 子ウィンドウが Microsoft Excel で縮小されるかどうかを示す値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.CustomViewWindowOptions.Maximized" />
        </member>
        <member name="T:Infragistics.Documents.Excel.Worksheet">
            <summary>Microsoft Excel ワークブック内の １ つのワークシートを表します。</summary>
            <remarks>
            <p class="body">Excel ワークシートは、基本的には限られた行と列を持つテーブルです。新しいワークシートを作成するために、<see cref="M:Infragistics.Documents.Excel.WorksheetCollection.Add(System.String)" /> インスタンスで <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションの <see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> メソッドを使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)">
            <summary>セル領域を削除します。</summary>
            <param name="region">削除する領域</param>
            <param name="shiftCellsLeft">True の場合、削除した領域の右から左へセルを移動し挿入します。そうでない場合はセルを領域の下から上へ移動します。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えば範囲が保護された領域を交差する場合。</exception>
            <exception cref="T:System.ArgumentNullException">領域が Null の場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)">
            <summary>セル領域を削除します。</summary>
            <param name="address">削除する領域のアドレス</param>
            <param name="shiftCellsLeft">True の場合、削除した領域の右から左へセルを移動し挿入します。そうでない場合はセルを領域の下から上へ移動します。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えば範囲が保護された領域を交差する場合。</exception>
            <exception cref="T:System.ArgumentException">アドレスが有効でない場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String)">
            <summary>指定した住アドレスまたは名前にあるセルを取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は、セル アドレスを解析するために使用されます。</p>
            <p class="body">1 つまたは複数の領域参照がセル参照の代わりに指定される場合は、最初の領域の左上のセルが返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">セルのアドレスまたは名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされるセル。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定した住アドレスまたは名前にあるセルを取得します。</summary>
            <remarks>
            <p class="body">1 つまたは複数の領域参照がセル参照の代わりに指定される場合は、最初の領域の左上のセルが返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">セルのアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされるセル。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定した住アドレスまたは名前にあるセルを取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は、セル アドレスを解析するために使用されます。</p>
            <p class="body">1 つまたは複数の領域参照がセル参照の代わりに指定される場合は、最初の領域の左上のセルが返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">セルのアドレスまたは名前。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされるセル。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetCell(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定した住アドレスまたは名前にあるセルを取得します。</summary>
            <remarks>
            <p class="body">1 つまたは複数の領域参照がセル参照の代わりに指定される場合は、最初の領域の左上のセルが返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">セルのアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされるセル。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>指定された単位でデフォルトの列幅を取得します。</summary>
            <remarks>
            <p class="body"><paramref name="units" /> が Character256th の場合、返される値は <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" /> プロパティの値と同じになります。</p>
            </remarks>
            <param name="units">幅を返す単位。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units" />が<see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" />列挙体で定義されていないです。
            </exception>
            <returns>指定された単位のデフォルトの列幅。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は領域アドレスを解析するのに使用されます。</p>
            <p class="body">セルの参照がセル領域の参照の代わりに指定される場合は、アドレスでセルを含む 1x1 領域が返されます。</p>
            <p class="body">参照のリストが指定される場合、最初の参照によって指定された領域が返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">セルの参照がセル領域の参照の代わりに指定される場合は、アドレスでセルを含む 1x1 領域が返されます。</p>
            <p class="body">参照のリストが指定される場合、最初の参照によって指定された領域が返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は領域アドレスを解析するのに使用されます。</p>
            <p class="body">セルの参照がセル領域の参照の代わりに指定される場合は、アドレスでセルを含む 1x1 領域が返されます。</p>
            <p class="body">参照のリストが指定される場合、最初の参照によって指定された領域が返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegion(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">セルの参照がセル領域の参照の代わりに指定される場合は、アドレスでセルを含む 1x1 領域が返されます。</p>
            <p class="body">参照のリストが指定される場合、最初の参照によって指定された領域が返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は領域アドレスを解析するのに使用されます。</p>
            <p class="body">アドレスは参照のリストにすることができ、それぞれがワークシート上の個別の領域を参照します。</p>
            <p class="body">セルまたは単一領域参照が代わりに指定される場合、そのアドレスにある 1 つの領域の配列が返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域の配列。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">アドレスは参照のリストにすることができ、それぞれがワークシート上の個別の領域を参照します。</p>
            <p class="body">セルまたは単一領域参照が代わりに指定される場合、そのアドレスにある 1 つの領域の配列が返されます。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスです。元のセルを取得するオーバー読み込みは、相対 R1C1 参照を解決するために使用される必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域の配列。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">ワークブックの <see cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" /> は領域アドレスを解析するのに使用されます。</p>
            <p class="body">アドレスは参照のリストにすることができ、それぞれがワークシート上の個別の領域を参照します。</p>
            <p class="body">セルまたは単一領域参照が代わりに指定される場合、そのアドレスにある 1 つの領域の配列が返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、ワークブックのセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域の配列。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CellReferenceMode" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.GetRegions(System.String,Infragistics.Documents.Excel.CellReferenceMode,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>指定したアドレスまたは名前にある領域を取得します。</summary>
            <remarks>
            <p class="body">アドレスは参照のリストにすることができ、それぞれがワークシート上の個別の領域を参照します。</p>
            <p class="body">セルまたは単一領域参照が代わりに指定される場合、そのアドレスにある 1 つの領域の配列が返されます。</p>
            <p class="body">名前が指定されている場合で、ワークブックに A1 セル参照モードがある場合、または絶対 R1C1 アドレスが指定されている場合、指定した元のセルは使用されません。</p>
            <p class="body">名前が指定されている場合、<see cref="T:Infragistics.Documents.Excel.Worksheet" /> にあるセルまたは領域を参照しなければならず、<see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> またはワークシートを対象範囲としなければならない、または null 値が返されます。</p>
            </remarks>
            <param name="address">領域のアドレスまたは名前。</param>
            <param name="cellReferenceMode">セル アドレスを解析する時に使用されるセル参照モード。</param>
            <param name="originCell">相対 R1C1 の参照を解決する基点。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="address" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="P:Infragistics.Documents.Excel.Worksheet.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="address" /> は、無効な名前であるか、指定されたセル参照モードの無効なセルまたは領域アドレスです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="address" /> は、相対 R1C1 アドレスで、<paramref name="originCell" /> は null です。相対 R1C1 参照を解決するために元のセルを指定する必要があります。
            </exception>
            <returns>指定したアドレスまたは名前によって表わされる領域の配列。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedCell" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.NamedReference.ReferencedRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)">
            <summary>セル領域を挿入します。</summary>
            <param name="region">挿入する領域</param>
            <param name="shiftCellsRight">True の場合、新しく挿入するセルの場所を確保するために既存のセルを右へ移動します。そうでない場合は既存のセルを領域の下へ移動します。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えばワークシートからデータが移動される恐れがある場合。</exception>
            <exception cref="T:System.ArgumentNullException">領域が Null の場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.InsertCells(System.String,System.Boolean)">
            <summary>セル領域を挿入します。</summary>
            <param name="address">挿入する領域</param>
            <param name="shiftCellsRight">True の場合、新しく挿入するセルの場所を確保するために既存のセルを右へ移動します。そうでない場合は既存のセルを領域の下へ移動します。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えばワークシートからデータが移動される恐れがある場合。</exception>
            <exception cref="T:System.ArgumentException">アドレスが有効でない場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.InsertCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(Infragistics.Documents.Excel.WorksheetRegion,System.Boolean)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.DeleteCells(System.String,System.Boolean)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.MoveToIndex(System.Int32)">
            <summary>ワークシートをワークシートのワークブック コレクションの新しい位置へ移動します。</summary>
            <param name="index">ワークシートが移動される新しい 0 から始まるインデックスです。</param>
            <exception cref="T:System.InvalidOperationException">
            ワークシートは、このワークブックからすでに削除されています。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が、0 以下であるか、またはワークブックのワークシート数以上です。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Index" />
        </member>
        <member name="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>指定された単位でデフォルトの列幅を設定します。</summary>
            <param name="value">ワークシートに設定されたデフォルトの列幅で、指定した <paramref name="units" /> で表される。</param>
            <param name="units"><paramref name="value" /> が表される単位。</param>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> は無限または NaN です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units" />が<see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" />列挙体で定義されていないです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Columns">
            <summary>このワークシート内の列のコレクションを取得します。</summary>
            <remarks>
            <p class="body">列のコレクションは、<see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> によって <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> のコレクションで列の最大数を持つ固定された長さのコレクションです。内部的には、要求があった場合、列が作成されコレクションに追加されます。</p>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべての列を作成しません。これはすでに使用されている列を繰り返すだけです。ワークシートですべての列の作成および反復には、For ループを使用し、0 から最大列カウントよりひとつ少ない回数繰り返し、コレクションのインデクサーに各インデックスを渡します。</p>
            </remarks>
            <value>このワークシート内の列のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DataTables">
            <summary>このワークシート内のデータ テーブルのコレクションを取得します。</summary>
            <value>このワークシート内のデータ テーブルのコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetDataTable" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules">
            <summary>ワークシート内のセルに適用されているデータの入力規則ルールのコレクションを取得します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.DataValidationRule" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth">
            <summary>ワークブックのデフォルトのフォントで &apos;0&apos; 数字幅の 1/ 256 で、余白を含む、デフォルトの列幅を取得または設定します。</summary>
            <remarks>
            <p class="body">デフォルトの列幅は、幅が設定されていないすべての列の幅です。</p>
            <p class="body">指定される値は、0 から 65535 の間でなければなりません。無効な値は自動的に有効値に調整されます。</p>
            <p class="body">このプロパティを設定または取得することは、<see cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" /> または <see cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" /> を呼び出し、Character256th の <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" /> 値を使用すること同じ結果が得られます。</p>
            </remarks>
            <value>
            ワークシートのデフォルトのフォントで &apos;0&apos; 数字幅の 1/ 256 で、余白を含む、デフォルトの列幅。
            </value>
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DefaultRowHeight">
            <summary>デフォルト行の高さをトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">デフォルト行の高さは、正の数に明示的に設定された高さを持たないすべての行の高さです。</p>
            <p class="body">指定された値が -1 の場合、デフォルト行の高さはワークブックのデフォルト フォントに基づいて計算され、以降にこのプロパティを取得するとフォント ベースのデフォルト行の高さを返します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定される値は、-1 および 8192 の値範囲の外です。
            </exception>
            <value>デフォルト行のトゥイップでの高さ（1 ポイントの 1/20）。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.DisplayOptions">
            <summary>ワークシートの表示を制御するオブジェクトを取得します。</summary>
            <remarks>
            <p class="body">表示オプションには、Microsoft Excel で表示された時にワークシートの表示に影響を及ぼす設定が含まれます。これらの設定は、ワークシートに保存された印刷されるワークシートまたはデータに影響を及ぼしません。</p>
            </remarks>
            <value>ワークシートの表示を制御するオブジェクト。</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetDisplayOptions(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.ImageBackground">
            <summary>ワークシートの背景画像を取得または設定します。</summary>
            <remarks>
            <p class="body">この画像はワークシートの背景にタイルされます。Null の場合、ワークシートには背景はありません。</p>
            </remarks>
            <value>ワークシートの背景画像。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Index">
            <summary>親 <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクション内での、このワークシートの 0 から始まるインデックスを取得します。</summary>
            <remarks>
            <p class="body">負の値は、ワークシートが親コレクションから削除されたことを示します。</p>
            </remarks>
            <value>親ワークシートコレクション内での、このワークシートの 0 から始まるインデックス。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.MoveToIndex(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.MergedCellsRegions">
            <summary>このワークシート内の、結合セル範囲のコレクションを取得します。</summary>
            <remarks>
            <p class="body">ワークシートに新しい結合セル範囲を追加するには、<see cref="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)" /> メソッドを使用します。</p>
            </remarks>
            <value>このワークシート内の、結合セル範囲のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Name">
            <summary>ワークシート名を取得または設定します。</summary>
            <remarks>
            <p class="body">ワークシート名は、ワークブックの大文字と小文字を区別しない一意な名前です。</p>
            <p class="body">ワークシート名は、ワークシートのタブに表示されます。さらに、このワークシート名はこのワークシートのセルを参照するために他のワークシートからの数式で使用できます。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            割り当てた値が null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            設定された値は無効な文字を含みます:  &apos;:&apos;、&apos;\&apos;、&apos;/&apos;、&apos;?&apos;、&apos;*&apos;、&apos;[&apos;、または &apos;]&apos;。
            </exception>
            <exception cref="T:System.ArgumentException">
            設定された値は 31 文字を超えています。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定する値は、他のワークシートの名前として使用されます（ワークシート名は大文字と小文字を区別せずに比較されます）。
            </exception>
            <value>ワークシート名。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.PrintOptions">
            <summary>ワークシートの印刷方法を制御するオブジェクトを取得します。</summary>
            <remarks>
            <p class="body">印刷オプションには、ワークシートの印刷外観に影響を及ぼす設定が含まれます。これらの設定は、ワークシートのデータに影響を及ぼしません。これらは表示設定ではありませんが、一部のワークシート表示スタイルはすべてまたは一部の印刷オプションを表示するので、これらの設定は Microsoft Excel で表示される時にワークシートの表示に影響を及ぼす場合があります。</p>
            </remarks>
            <value>ワークシートの印刷方法を制御するオブジェクト。</value>
            <seealso cref="M:Infragistics.Documents.Excel.CustomView.GetPrintOptions(Infragistics.Documents.Excel.Worksheet)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Protected">
            <summary>Excel ワークシートの保護状態行を取得または設定します。</summary>
            <remarks>
            <p class="body">保護されたワークシートでは、ロックされたセルは変更できません。</p>
            </remarks>
            <value>Excel ワークシートの保護状態。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Rows">
            <summary>このワークシート内の行のコレクションを取得します。</summary>
            <remarks>
            <p class="body">行のコレクションは、<see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> によって <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount" /> または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount" /> のコレクションで行の最大数を持つ固定された長さのコレクションです。内部で要求があった場合、行が作成されコレクションに追加されます。</p>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべての行を作成しません。これはすでに使用されている行を繰り返すだけです。ワークシートですべての行の作成および反復には、For ループを使用し、0 から最大行数よりひとつ少ない回数反復し、コレクションのインデクサーに各インデックスを渡します。</p>
            </remarks>
            <value>このワークシート内の行のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Selected">
            <summary>このワークシートが選択されるかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="body">ワークシートが親 <see cref="P:Infragistics.Documents.Excel.Workbook.Worksheets" /> コレクションから削除されると、これは常に False を返します。</p>
            </remarks>
            <value>このワークシートが選択されるかどうかを示す値。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WindowOptions" />
            <seealso cref="T:WindowOptions.SelectedWorksheet" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Shapes">
            <summary>このワークシート内の形状のコレクションを取得します。</summary>
            <value>このワークシート内の形状のコレクション。</value>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetShape" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Tables">
            <summary>このワークシートで使用できる <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> インスタンスのコレクション、つまり、テーブルとしてフォーマットされる領域を取得します。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
        </member>
        <member name="P:Infragistics.Documents.Excel.Worksheet.Workbook">
            <summary>ワークシートを所有する <see cref="P:Infragistics.Documents.Excel.Worksheet.Workbook" /> を取得します。</summary>
            <value>ワークシートを所有するワークブック。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCell">
            <summary>Microsoft Excel ワークシート内のセルを表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.Equals(System.Object)">
            <summary>指定したオブジェクトが、このセルの同じワークシートの同じ場所を参照する他の <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスかどうかを決定します。</summary>
            <param name="obj">等価をチェックするためのインスタンス。</param>
            <returns>セルが同じワークシートの同じ場所を参照する場合 True。そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> のハッシュ コードを取得します。</summary>
            <returns><see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> のハッシュ コード。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString">
            <summary>セルのアドレスの文字列表現を取得します。</summary>
            <returns>セルのアドレスの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)">
            <summary>数式をセルに適用します。</summary>
            <remarks>
            <p class="body"><paramref name="value" /> は、セルが属する <see cref="T:Infragistics.Documents.Excel.Workbook" /> の <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> に基づいて解析されます。セルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Worksheet" /> が親コレクションから削除された場合、A1 CellReferenceMode は数式を解析するために使用されます。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドを使用するのは、 WorksheetRow.ApplyCellFormula メソッドを使用するのと同じです。</p>
            </remarks>
            <param name="value">解析およびセルに適用するための数式。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            セルは配列数式の一部またはセルに制限されないデータ テーブルです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ClearComment">
            <summary>セルに関連付けられたコメントを削除します。</summary>
            <remarks>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドを使用するのは WorksheetRow.SetCellComment メソッドを使用するのと同じです。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.HasComment" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips">
            <summary>セルの境界をトゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。セルの前の行または列のサイズが変更されると、これらの境界はセルの位置を反映しません。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドを使用するのは WorksheetRow.GetBoundsInTwips メソッドを使用するのと同じです。</p>
            </remarks>
            <returns>ワークシートのセルの境界。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>セルの境界をトゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。セルの前の行または列のサイズが変更されると、これらの境界はセルの位置を反映しません。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドを使用するのは WorksheetRow.GetBoundsInTwips メソッドを使用するのと同じです。</p>
            </remarks>
            <param name="options">セルの境界線を取得するときに使用するオプション。</param>
            <returns>ワークシートのセルの境界。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetCellAddressString(Infragistics.Documents.Excel.WorksheetRow,System.Int32,Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>セルのアドレスの文字列表現を取得します。</summary>
            <param name="worksheetRow">セルの WorksheetRow。</param>
            <param name="columnIndex">セルの列のインデックス。</param>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">セル アドレスにワークシート名を含むかどうかを示す値。</param>
            <returns>セルのアドレスの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetCellAddressString(Infragistics.Documents.Excel.WorksheetRow,System.Int32,Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>セルのアドレスの文字列表現を取得します。</summary>
            <param name="worksheetRow">セルの WorksheetRow。</param>
            <param name="columnIndex">セルの列のインデックス。</param>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">セル アドレスにワークシート名を含むかどうかを示す値。</param>
            <param name="useRelativeColumn">列アドレスを使用するかどうかを示す値。</param>
            <param name="useRelativeRow">行アドレスを使用するかどうかを示す値。</param>
            <returns>セルのアドレスの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetText">
            <summary>このセルに表示されるテキストを取得します。</summary>
            <remarks>
            <p class="body">表示テキストは、このセルの値と、このセルに適用される書式文字列によって異なったものになります。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合には、このプロパティを使用しても WorksheetRow.GetText メソッドを使用しても同じ結果が得られます。</p>
            </remarks>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetText(Infragistics.Documents.Excel.TextFormatMode)">
            <summary>セルのテキストを取得します。</summary>
            <param name="textFormatMode">セルのテキストを取得するときに使用するフォーマット モード。</param>
            <remarks>
            <p class="body">テキストは、このセルの値と、このセルに適用される書式文字列によって異なったものになります。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合には、このプロパティを使用しても WorksheetRow.GetText メソッドを使用しても同じ結果が得られます。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="textFormatMode" />が<see cref="T:Infragistics.Documents.Excel.TextFormatMode" />列挙体で定義されていないです。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat">
            <summary>このセルの解決済みのセル書式を取得します。</summary>
            <remarks>
            <p class="body">セルでデフォルト値であるセル書式プロパティがある場合、所有する行のセル書式の値が使用されます。デフォルトの場合、所有する列のセル書式の値が使用されます。そうでない場合、ワークブックのデフォルト値が使用されます。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドを使用するのは WorksheetRow.GetBoundsInTwips メソッドを使用するのと同じです。</p>
            </remarks>
            <returns>書式オブジェクトは、このセルが Microsoft Excel で表示されるときに使用される実際の書式を説明します。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)">
            <summary>特定の値型を Excel にエクスポートできる場合は True を返します。</summary>
            <param name="cellType">テストする型。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cellType" /> が null です。
            </exception>
            <returns>型がセル値としてサポートされている場合はTrue、それ以外の場合はFalse。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>セルのアドレスの文字列表現を取得します。</summary>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">セル アドレスにワークシート名を含むかどうかを示す値。</param>
            <returns>セルのアドレスの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>セルのアドレスの文字列表現を取得します。</summary>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">セル アドレスにワークシート名を含むかどうかを示す値。</param>
            <param name="useRelativeColumn">列アドレスを使用するかどうかを示す値。</param>
            <param name="useRelativeRow">行アドレスを使用するかどうかを示す値。</param>
            <returns>セルのアドレスの文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.op_Equality(Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>２ つのセル インスタンスが等しいかどうかを比較します。</summary>
            <returns>セルが同じワークシートの同じ場所を参照する場合 True。そうでない場合は False を返します。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCell.op_Inequality(Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>２ つのセル インスタンスが等しいかどうかを決定します。</summary>
            <returns>セルが同じワークシートの同じ場所を参照する場合 False。そうでない場合は True を返します。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable">
            <summary>セルが属するデータ テーブルを取得します。</summary>
            <remarks>
            <p class="body">一番左の列と一番上の行のセルは、関連するデータ テーブルに null  を返します。</p>
            <p class="body">データ テーブルがセルに関連付けられている場合、<see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" /> は、セルの計算された値を返します。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティを使用するのは WorksheetRow.GetBoundsInTwips メソッドを使用するのと同じです。</p>
            </remarks>
            <value>セルが属するデータ テーブル、またはセルがデータ テーブルに属さない場合は null。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataTables" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion">
            <summary>セルを含む結合されたセル領域を取得するか、セルが結合されない場合は null。</summary>
            <remarks>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティを使用するのは WorksheetRow.GetCellAssociatedMergedCellsRegion メソッドを使用するのと同じです。</p>
            </remarks>
            <value>セルを含む結合されたセル領域、またはセルが結合されない場合は null。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedTable">
            <summary>このセルが属する <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を取得します。</summary>
            <remarks>
            <p class="body">テーブル内のいずれかの領域に存在するセルをそのテーブルに所属するセルといいます。これは、ヘッダー セル、集計セル、またはデータ領域内のセルである場合もあります。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合には、このプロパティを使用しても WorksheetRow.GetCellAssociatedTable メソッドを使用しても同じ結果が得られます。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat">
            <summary>このセルのセル書式を取得します。</summary>
            <remarks>
            <p class="body">このプロパティは、セルに固有のセル書式設定を設定するために使用します。多くのセルに書式を適用する場合、パフォーマンスの考慮点については <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat" /> メソッドを参照してください。</p>
            <p class="body">このセルが結合したセル領域に属する場合、CellFormat の取得は関連する結合したセル領域の CellFormat を取得します。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティを使用するのは WorksheetRow.GetCellFormat メソッドを使用するのと同じです。</p>
            </remarks>
            <value>このセルのセル書式。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.HasCellFormat">
            <summary>セルの形式が初期化されたかどうかを示す値を取得します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.ColumnIndex">
            <summary>セルの列インデックスを取得します。</summary>
            <value>セルの列インデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Comment">
            <summary>セルに適用されている値を取得または設定します。</summary>
            <remarks>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)" /> または <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティの使用は WorksheetRow.GetCellComment または WorksheetRow.SetCellComment メソッドを使用するのと同じです。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            適用された値には、アンカー セル セットが 1 つだけあります。アンカー セル セットを両方持つ、またはどちらもないか持たないかのどちらかです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この値は、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> や <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> アンカー セットを持ちますが、それぞれ異なるワークシートからのものです。
            </exception>
            <value>スタイルをセルに適用します。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.DataValidationRule">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> のデータの入力規則ルールを取得または設定します。</summary>
            <exception cref="T:System.ArgumentException">
            指定した値が別のワークシートのセルにすでに適用されている場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            ルール タイプの要件に基づいて、指定した値が無効な場合に発生します。
            </exception>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataValidationRules" />
            <seealso cref="T:Infragistics.Documents.Excel.AnyValueDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.ListDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.CustomDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.OneConstraintDataValidationRule" />
            <seealso cref="T:Infragistics.Documents.Excel.TwoConstraintDataValidationRule" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.HasComment">
            <summary>セルが関連するコメントを持つかどうかを示す値を取得します。</summary>
            <remarks>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)" /> メソッドを使用するより多少速くなり、null 以外の戻り値をチェックします。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティを使用するのは WorksheetRow.GetCellComment メソッドを使用するのと同じです。</p>
            </remarks>
            <value>セルが関連するコメントを持つ場合は True、そうでなければ False。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Formula">
            <summary>セルに適用されているする式を取得します。</summary>
            <remarks>
            <p class="body">数式がセルに関連付けられている場合、<see cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" /> を取得すると数式の計算された値を返します。</p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このメソッドの使用は WorksheetRow.GetCellFormula メソッドを使用するのと同じです。</p>
            </remarks>
            <value>セルに適用されている数式、または適用されている数式がない場合は null。</value>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.RowIndex">
            <summary>セルの行インデックスを取得します。</summary>
            <value>セルの行インデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Value">
            <summary>セルの値を取得または設定します。</summary>
            <remarks>
            <p class="body">このセルが結合したセル領域に属す領域の左上のセルで、値を取得または設定する場合は、関連付けられた結合セルの領域の値を取得または設定します。結合したセル領域の他のセルの値を取得すると常に null を返します。結合したセル領域での他のセルの値を設定すると、効果がなくなります。</p>
            <p class="body">数式がセルに適用されている場合、またはセルかデータテーブルにセルが関連付けられている場合に Value を取得するとセルの計算された値を返します。</p>
            <p class="body">この値でサポートされるタイプは以下のとおりです。<BR />
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue" /></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString" /></span></li>
            </ul>
            </p>
            <p class="note"><B>注:</B> <see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" /> または <see cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)" /> メソッドを使用するより多少速くなります。<see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを内部に作成しません。ただし、WorksheetCell インスタンスへの参照がすでに存在する場合、このプロパティの使用は WorksheetRow.GetCellComment または WorksheetRow.SetCellComment メソッドを使用するのと同じです。</p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            指定した値の型がサポートされておらず、Excel にエクスポートできません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" /> です。その代わりに、<see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" /> はセルで渡され数式で呼び出される必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> です。その代わりに、<see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" /> はセルを含む領域に設定する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定される値は、他のセルまたは結合されたセル領域の値である FormattedString です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            値が指定され、このセルは <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> または WorksheetDataTable の一部です。
            </exception>
            <value>セルの値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCell.Worksheet">
            <summary>セルが属するワークシートを取得します。</summary>
            <value>セルが属するワークシート。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellComment">
            <summary>セルのコメントを表します。</summary>
            <remarks>
            <p class="body">コメントをワークシートまたは形状グループのシェイプ コレクションに追加できません。セルの <see cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" /> プロパティでは直接セルに設定することが必要です。</p>
            <p class="body">セルのコメントとして設定する前にこのシェイプのアンカーを初期化する必要はありません。セルにコメントを適用する時に <see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> と <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> アンカーが null の場合は、セルに基づいてデフォルトのアンカー セルが使用されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCellComment.#ctor">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetCellComment" /> クラスの新しいインスタンスを作成します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Worksheet">
            <summary>形状が置かれるワークシートを取得します。</summary>
            <value>形状が置かれるワークシート。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Author">
            <summary>コメントの作者を取得または設定します。</summary>
            <remarks>
            <p class="body">この情報は、Microsoft Excel UI では表示されません。情報の提供を目的としてのみ公開されます。</p>
            </remarks>
            <value>コメントの作者です。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Cell">
            <summary>コメントが適用されるセルを取得します。</summary>
            <value>コメントが適用されるセルです。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellComment.Text">
            <summary>コメントのフォーマットされたテキストを取得または設定します。</summary>
            <remarks>
            <p class="body">このプロパティを取得すると、null 以外の値が常に返されます。プロパティに null が設定されると、フォーマットされた空の文字列を返します。</p>
            </remarks>
            <value>コメントのフォーマット済みテキストです。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCellCollection">
            <summary>行のセルのコレクション。</summary>
            <remarks>
            <p class="body">このコレクションのセルは遅延作成されます（アクセスされる時に作成されてコレクションに追加されます）。このコレクションが列挙されると、すでにアクセスしているセルだけが列挙されます。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetRow.Cells" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellCollection.MaxCount">
            <summary>このコレクションの項目の最大数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCellCollection.Item(System.Int32)">
            <summary>所有する行の指定した列インデックスでセルを取得します。</summary>
            <remarks>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべてのセルを作成しません。これはすでに使用されているセルを繰り返すだけです。ワークシートでのすべてのセルの作成および反復には、For ループを使用し、0 から最大列数よりひとつ少ない回数反復して、コレクションのインデクサーに各インデックスを渡します。</p>
            </remarks>
            <param name="index">取得するセルの 0 から始まる列インデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> はゼロ未満です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <paramref name="index" /> によって、<see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> は <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> 以上にします。
            </exception>
            <value>所有する行の指定した列インデックスのセル。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetChart">
            <summary>チャート型を表します。このクラスは、チャートのデータの編集はできません。ワークブックの読み込みおよび保存の間にチャート データを送信するために使用します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumn">
            <summary>Microsoft Excel ワークシート内の列を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>指定された単位で列幅を取得します。または列がデフォルト幅の場合 NaN になります。</summary>
            <remarks>
            <p class="body"><paramref name="units" /> が Character256th の場合、返される値は 1 つの例外はありますが、<see cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" /> プロパティの値と同じになります。列がデフォルト幅の場合、このメソッドは NaN を返し、Width は -1 を返します。</p>
            </remarks>
            <param name="units">幅を返す単位。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units" />が<see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" />列挙体で定義されていないです。
            </exception>
            <returns>指定された単位の列幅。または列がデフォルト幅の場合は NaN。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.GetDefaultColumnWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)">
            <summary>指定された単位で列幅を設定します。</summary>
            <param name="value">その列に設定された幅で、指定した <paramref name="units" /> で表される。</param>
            <param name="units"><paramref name="value" /> が表される単位。</param>
            <remarks>
            <p class="body">NaN という値を設定すると、列幅がリセットされ、列がワークシートのデフォルトの列幅を使用します。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            <paramref name="value" /> は無限です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="units" />が<see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">列がワークシートから削除された場合。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetColumn.Width" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.Worksheet.SetDefaultColumnWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumn.Index">
            <summary>ワークシートの列の 0 から始まるインデックスを取得します。</summary>
            <value>ワークシートの列の 0 から始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumn.Width">
            <summary>ワークブックのデフォルトのフォントで &apos;0&apos; 数字幅の 1/ 256 で、余白を含む、列幅を取得または設定します。</summary>
            <remarks>
            <p class="body">列の幅がゼロ未満である場合、所有するワークシートの <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultColumnWidth" /> が列の幅として使用されます。</p>
            <p class="body">指定される値は、-1 から 65535 の間でなければなりません。無効な値は自動的に有効値に調整されます。</p>
            <p class="body">このプロパティを設定または取得することは、<see cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" /> または <see cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" /> を呼び出し、Character256th の <see cref="T:Infragistics.Documents.Excel.WorksheetColumnWidthUnit" /> 値を使用すること同じ結果が得られます。</p>
            </remarks>
            <value>
            ワークブックのデフォルトのフォントで &apos;0&apos; 数字幅の 1/ 256 で、余白を含む列幅。
            </value>
            <exception cref="T:System.InvalidOperationException">セッターで列がワークシートから削除された場合、エラーは発生されます。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.GetWidth(Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetColumn.SetWidth(System.Double,Infragistics.Documents.Excel.WorksheetColumnWidthUnit)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.CharacterWidth256thsToPixels(System.Double)" />
            <seealso cref="M:Infragistics.Documents.Excel.Workbook.PixelsToCharacterWidth256ths(System.Double)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetColumnCollection">
            <summary>このワークシート内の列のコレクション。</summary>
            <remarks>
            <p class="body">このコレクションの列は遅延作成されます（アクセスされる時に作成されてコレクションに追加されます）。したがって、このコレクションが列挙されると、すでにアクセスしている列だけが列挙されます。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetColumn" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Columns" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumnCollection.Insert(System.Int32,System.Int32)">
            <summary>1 つ以上の列をコレクションに挿入します。</summary>
            <param name="index">挿入点</param>
            <param name="count">挿入する列数</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えばワークシートからデータが移動される恐れがある場合。</exception>
            <exception cref="T:System.IndexOutOfRangeException">指数が負の数の場合。</exception>
            <remarks>
            <para class="note"><b>注:</b> 列の等しい数がコレクションの終了から削除されます。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetColumnCollection.Remove(System.Int32,System.Int32)">
            <summary>1 つ以上の列をコレクションから削除します。</summary>
            <param name="index">削除する最初の列のインデックス。</param>
            <param name="count">削除する列の数。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えば範囲が保護された領域を交差する場合。</exception>
            <exception cref="T:System.IndexOutOfRangeException">指数が負の数の場合。</exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumnCollection.MaxCount">
            <summary>このコレクションの項目の最大数を取得します。</summary>  
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetColumnCollection.Item(System.Int32)">
            <summary>指定したインデックスで列を取得します。</summary>
            <remarks>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべての列を作成しません。これはすでに使用されている列を繰り返すだけです。ワークシートですべての列の作成および反復には、For ループを使用し、0 から最大列カウントよりひとつ少ない回数繰り返し、コレクションのインデクサーに各インデックスを渡します。</p>
            </remarks>
            <param name="index">取得する列の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> はゼロ未満です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="index" /> によって、<see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> は <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> 以上にします。
            </exception>
            <value>指定されたインデックスにある列。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDataTable">
            <summary>セルの範囲のデータ テーブルを表します。</summary>
            <remarks>
            <p class="body">データ テーブルは、同時に数式の変数で多くの異なる値を試し、テーブルで異なる結果を表示することによってひとつ以上の数式の結果を示すための方法です。データ テーブル アプリケーションの優れた例は乗法テーブルです。乗法テーブルは数式 =X*Y の結果を示します。ただし、数式の多くの異なる結果を示し、それぞれの結果は X および Y の異なる値を使用して決定されます。これらのけっけはテーブルで表示され、テーブルの各セルは特定の X および Y の値の数値の結果を示します。これらは行ヘッダーおよび列ヘッダーにそれぞれラベル表示されます。したがって、行の各セルは同じ X 値を使用し、列の各セルは同じ Y 値を使用します。</p>
            <p class="body">乗法テーブルは、2 変数データ テーブルとして知られています。2 変数データ テーブルはひとつの数式とテーブルの行ヘッダと列ヘッダの値を持つことによって特徴付けられます。この数式はデータ テーブルの左上セルに入力され、通常はデータ テーブルの外の少なくとも 2 つのセルで参照され、列入力および行入力セルとして知られています。数式がデータ テーブルの特定のセルで評価される場合、数式の列入力セルへの参照は、セル行ヘッダの値で置き換えられ（これは後方のようにみえますが、行ヘッダの値はデータ テーブルの左列を下げます。これは列入力セルで使用されるからです）、行入力セルへの参照は、セルの列ヘッダの値で置き換えられます。</p>
            <p class="body">データ テーブルの他のタイプは、1 変数データ テーブルです。1 変数データ テーブルは列指向または行指向データ テーブルである場合があります。列指向データ テーブルには、左列のセルにデータ、そして行のトップのセルに数式があります（データ テーブルの左上セルは、データ テーブルのこのタイプで無視されます）。通常、すべてのトップの行の数式は、データ テーブルの外の同じセルを参照し、列入力セルとして知られています。テーブルのセルが評価されると、セルの行ヘッダの値によって置き換えられる列入力セルへ参照され、列ヘッダ内の数式が使用されます。</p>
            <p class="body">行指向の 1 変数データ テーブルは列指向データ テーブルのように作られますが、値はトップの行で実行され、数式は左列へと実行され、すべての数式によって参照されるセルは行入力セルとして知られています。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable">
            <summary>データ テーブルのセルの領域を取得または設定します。</summary>
            <remarks>
            <p class="body">この領域の内部セル（セルは最も左の列またはトップの行にない）は、これが設定されると値が削除されます。内部セルにデータ テーブル外に交差する領域を持つ配列数式がある場合、エラーが発生します。ただし、この配列数式の領域はデータ テーブルの内部のセルに限定され、配列数式は <see cref="M:Infragistics.Documents.Excel.ArrayFormula.ClearCellRange" /> が呼び出され、セルのすべてからそれを削除します。同様に、既存のデータ テーブルの内部セルがこの領域と複数の外部セルに内部セルを含む場合、エラーが発生します。ただし、既存のデータ テーブルのすべての内部セルは、ここで指定する新しい領域の内部セルに含まれている場合、既存のデータ テーブルはワークシートから削除されます。</p>
            <p class="body">テーブルのセルが指定された後は内部セルの値を変更できません。</p>
            <p class="note"><B>注:</B> <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell" /> および <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell" /> はこの領域で共存できません。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            指定された値は null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            データ テーブルがワークシートから削除された後に値が指定されます。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定された値は、データ テーブルのワークシート以外のワークシートからの領域です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定された領域には、RowInputCell または ColumnInputCell が含まれます。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定される値の 1 つ以上の内部セルは (最も左の列とトップの行を除くすべてのセル)、他のデータ テーブルの内部セルであるか、配列数値のセルで、その他のエンティティの範囲全体は、指定した値の内部セルの外に拡張します。
            </exception>
            <exception cref="T:System.ArgumentException">
            指定した値は、ひとつの行の高さまたはひとつの列の幅です。テーブルのセルは、2 つの列で少なくとも 2 つの行でなければなりません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値には、最も左の列またはトップの行に限定されない結合した領域が含まれます。結合した領域はデータ テーブルの内部セルに存在できず、結合した領域は最も左の列またはトップの行に存在できず、データ テーブル領域の外に拡張します。
            </exception>
            <value>データ テーブルのセルの領域。</value>
            <seealso cref="T:Infragistics.Documents.Excel.ArrayFormula" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell">
            <summary>データ テーブルの列入力セルとして使用されるセルを取得または設定します。</summary>
            <remarks>
            <p class="body">これは行ヘッダ値で置き換えるためにデータ テーブルのすべての数式のセル参照を表します。これと <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell" /> は非 null で、データ テーブルは 2 変数データ テーブルです。そうでなければ、ひとつだけが非 null で、これは 1 変数データ テーブルです。</p>
            <p class="note"><B>注:</B> RowInputCell および ColumnInputCell は <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" /> 領域内に置くことができません。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値はデータ テーブルと同じワークシートに属しません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            データ テーブルがワークシートから削除された後に値が指定されます。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は、CellsInTable 領域内です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は null で RowInputCell は null です。少なくともひとつの入力セルが非 null でなければなりません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は、RowInputCell と同じです。入力セルは同じセルにできません。
            </exception>
            <value>データ テーブルの列入力セルとして使用されるセル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.RowInputCell">
            <summary>データ テーブルの行入力セルとして使用されるセルを取得または設定します。</summary>
            <remarks>
            <p class="body">これは列ヘッダ値で置き換えるためにデータ テーブルのすべての数式のセル参照を表します。これと <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell" /> は非 null で、データ テーブルは 2 変数データ テーブルです。そうでなければ、ひとつだけが非 null で、これは 1 変数データ テーブルです。</p>
            <p class="note"><B>注:</B> RowInputCell および ColumnInputCell は <see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" /> 領域内に置くことができません。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定した値はデータ テーブルと同じワークシートに属しません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            データ テーブルがワークシートから削除された後に値が指定されます。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は、CellsInTable 領域内です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は null で ColumnInputCell は null です。少なくともひとつの入力セルが非 null でなければなりません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定した値は、ColumnInputCell と同じです。入力セルは同じセルにできません。
            </exception>
            <value>データ テーブルの行入力セルとして使用されるセル。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetDataTable.ColumnInputCell" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTable.Worksheet">
            <summary>このデータ テーブルが置かれるワークシートを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetDataTableCollection">
            <summary>ワークシートの <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> インスタンスのコレクション。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)">
            <summary>新しいデータ テーブルを作成してコレクションに追加します。</summary>
            <remarks>
            <p class="body">指定した入力セルは、異なるセル参照でなければならず、少なくともひとつが非 null でなければなりません。データ テーブルの詳細は、<see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> の概要を参照してください。</p>
            </remarks>
            <param name="cellsInTable">データ テーブルのセルの領域。</param>
            <param name="columnInputCell">データ テーブルの列入力セルとして使用されるセル。</param>
            <param name="rowInputCell">データ テーブルの行入力セルとして使用されるセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cellsInTable" /> が null です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cellsInTable" /> は、このコレクションを持つワークシートに属さない領域です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="columnInputCell" /> は null ではなく、このコレクションを持つワークシートに属しません。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="rowInputCell" /> は null ではなく、このコレクションを持つワークシートに属しません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="columnInputCell" /> と <paramref name="rowInputCell" /> の両方が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="columnInputCell" /> と <paramref name="rowInputCell" /> は同じセルです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="columnInputCell" /> または <paramref name="rowInputCell" /> は、<paramref name="cellsInTable" /> 領域に含まれます。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="cellsInTable" /> 領域の 1 つ以上の内部セルは (最も左の列とトップの行を除くすべてのセル)、他のデータ テーブルの内部セルであるか、配列数値のセルで、その他のエンティティの範囲全体は、<paramref name="cellsInTable" /> の内部セルの外に拡張します。
            </exception>
            <returns>新しく作成されたデータ テーブル。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Clear">
            <summary>このコレクションからすべてのデータ テーブルをクリアします。</summary>
            <remarks>
            <p class="body">データ テーブルをコレクションから削除すると、使用できなくなります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Remove(Infragistics.Documents.Excel.WorksheetDataTable)">
            <summary>指定したデータ テーブルをコレクションから削除します。</summary>
            <remarks>
            <p class="body">データ テーブルをコレクションから削除すると、使用できなくなります。</p>
            </remarks>
            <param name="dataTable">コレクションから削除するデータテーブル。</param>
            <returns>データテーブルの削除に成功した場合は True、データテーブルがコレクションになかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにあるデータ テーブルをコレクションから削除します。</summary>
            <remarks>
            <p class="body">データ テーブルをコレクションから削除すると、使用できなくなります。</p>
            </remarks>
            <param name="index">コレクションから削除するデータ テーブルの 0 から始まるインデックス。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTableCollection.Count">
            <summary>このコレクション内のデータ テーブルの数を取得します。</summary>
            <value>このコレクション内のデータ テーブルの数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetDataTableCollection.Item(System.Int32)">
            <summary>指定したインデックスにある、コレクション内のデータ テーブルを取得します。</summary>
            <param name="index">取得するデータ テーブルの 0 から始まるインデックス。</param>
            <value>指定されたインデックスにあるデータ テーブル。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetImage">
            <summary>背景画像を除くワークシートの画像を表します。</summary>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.ImageBackground" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.#ctor(System.Drawing.Image)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetImage" /> インスタンスを作成します。</summary>
            <param name="image">この形状のワークシートで表示される画像。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="image" /> が null です。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle,System.Boolean)">
            <summary>形状の境界をトゥイップで設定します（ポイントの　1/20）。</summary>
            <remarks>
            <p class="body">形状は指定した境界に限って配置され、ワークシートは現在の構成で維持されます。形状の前または形状内の行または列のサイズが変更されると、形状は指定した境界に配置されません。</p>
            <p class="body"><paramref name="maintainAspectRatio" /> が False の場合、基本クラスで <see cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)" /> を呼び出すだけです。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <param name="worksheet">形状が配置されるワークシート。</param>
            <param name="bounds">形状が配置される新しい境界。</param> 
            <param name="maintainAspectRatio">画像のアスペクト比が保持されるかどうかを示す値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetImage.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle,System.Boolean,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>形状の境界をトゥイップで設定します（ポイントの　1/20）。</summary>
            <remarks>
            <p class="body">形状は指定した境界に限って配置され、ワークシートは現在の構成で維持されます。形状の前または形状内の行または列のサイズが変更されると、形状は指定した境界に配置されません。</p>
            <p class="body"><paramref name="maintainAspectRatio" /> が False の場合、基本クラスで <see cref="M:Infragistics.Documents.Excel.WorksheetShape.SetBoundsInTwips(Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)" /> を呼び出すだけです。</p>
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <param name="worksheet">形状が配置されるワークシート。</param>
            <param name="bounds">形状が配置される新しい境界。</param> 
            <param name="maintainAspectRatio">画像のアスペクト比が保持されるかどうかを示す値。</param>
            <param name="options">図形の境界線を設定するときに使用するオプション。</param>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetImage.Image">
            <summary>この形状のワークシートで表示される画像を取得します。</summary>
            <value>この形状のワークシートで表示される画像。</value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.#ctor(System.Int32,System.Int64,System.Int32)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> を初期化します。</summary>
            <param name="index">項目のインデックス</param>
            <param name="extent">項目の幅または高さ。</param>
            <param name="offset">項目のオフセット。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.Equals(System.Object)">
            <summary>このインスタンスの値と指定された <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> を比較します。</summary>
            <param name="obj">現在のインスタンスと比較するオブジェクト。</param>
            <returns>オブジェクトが同じ <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index" />、<see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset" />、と <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent" /> を持つ WorksheetItemPosition の場合、True。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> のハッシュ値を返します。</summary>
            <returns>WorksheetItemPosition のハッシュ値。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.ToString">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> の文字列表現を返します。</summary>
            <returns>行および列インデックスの文字列形式。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.op_Equality(Infragistics.Documents.Excel.WorksheetItemPosition,Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>等しいかどうかを決定するために 2 つの <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> インスタンスを比較します。</summary>
            <param name="d1">第 1 の WorksheetItemPosition インスタンス。</param>
            <param name="d2">第 2 の WorksheetItemPosition インスタンス。</param>
            <returns>オブジェクトに同じ <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index" />、<see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset" />、と <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent" /> がある場合は true。そうでない場合は false。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.op_Inequality(Infragistics.Documents.Excel.WorksheetItemPosition,Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>等しいかどうかを決定するために 2 つの <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> インスタンスを比較します。</summary>
            <param name="d1">第 1 の WorksheetItemPosition インスタンス。</param>
            <param name="d2">第 2 の WorksheetItemPosition インスタンス。</param>
            <returns>オブジェクトに異なる <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index" />、<see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset" />、と <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent" /> の両方またはいずれかがある場合は true。そうでない場合は false。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetItemPosition.Equals(Infragistics.Documents.Excel.WorksheetItemPosition)">
            <summary>この WorksheetItemPosition インスタンスの値を指定した <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> と比較します。</summary>
            <param name="other">比較される <see cref="T:Infragistics.Documents.Excel.WorksheetItemPosition" /> インスタンス。</param>
            <returns>指定した WorksheetItemPosition に同じ <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index" />、<see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset" />、と <see cref="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent" /> がある場合は true。そうでない場合は false。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Extent">
            <summary>項目の範囲を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Index">
            <summary>項目のインデックスを返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetItemPosition.Offset">
            <summary>項目の開始ポイントを返します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion">
            <summary>結合されたセル領域、または値と書式を共有し、Microsoft Excel で表示される時にひとつのセルとして表示されるセル。</summary>
            <remarks>
            <p class="body">結合されたセル領域はオーバーラップできません（セルはひとつの結合されたセル領域に属することができるだけです）。さらに、<see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> および <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> インスタンスは、結合されたセル領域に適用できません。</p>
            </remarks>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRegion">
            <summary>ワークシートのセルの長方形領域を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.#ctor(Infragistics.Documents.Excel.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> クラスの新しいインスタンスを初期化します。</summary>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="firstRow" /> は <paramref name="lastRow" /> より大きいか、<paramref name="firstColumn" /> は <paramref name="lastColumn" /> よりも大きいです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された行または列インデックスは、有効な行または列領域の外にあります。
            </exception>
            <param name="worksheet">領域が置かれるワークシート。</param>
            <param name="firstRow">領域の最初の行のインデックス。</param>
            <param name="firstColumn">領域の最初の列のインデックス。</param>
            <param name="lastRow">領域の最後の行のインデックス。</param>
            <param name="lastColumn">領域の最後の列のインデックス。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.Equals(System.Object)">
            <summary>指定した値がこの <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> と等しいかどうかを決定します。</summary>
            <param name="obj">等価をテストするための値。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetHashCode">
            <summary><see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> のハッシュ コードを取得します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString">
            <summary>領域のセルの範囲の文字列表現を取得します。</summary>
            <returns>領域のセルの範囲の文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)">
            <summary>配列数式をセルの領域に適用します。</summary>
            <remarks>
            <p class="body"><paramref name="value" /> は、領域が属する <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> の <see cref="T:Infragistics.Documents.Excel.Workbook" /> に基づいて解析されます。領域の <see cref="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet" /> が親コレクションから削除された場合、A1 CellReferenceMode は数式を解析するために使用されます。</p>
            </remarks>
            <param name="value">解析および領域に適用するための配列数式。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域は、配列数式または領域の外に広がるデータ テーブルを含みます。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.ArrayFormula" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)">
            <summary>数式をセルの領域に適用します。</summary>
            <remarks>
            <p class="body"><paramref name="value" /> は、領域が属する <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> の <see cref="T:Infragistics.Documents.Excel.Workbook" /> に基づいて解析されます。領域の <see cref="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet" /> が親コレクションから削除された場合、A1 CellReferenceMode は数式を解析するために使用されます。</p>
            </remarks>
            <param name="value">解析および領域に適用するための数式。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="value" /> は null または空です。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="value" /> は有効な数式ではありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域は、配列数式または領域の外に広がるデータ テーブルを含みます。
            </exception>
            <seealso cref="T:Infragistics.Documents.Excel.Formula" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean)">
            <summary>領域をテーブルとして書式設定し、関連付けられた <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を <see cref="P:Infragistics.Documents.Excel.Worksheet.Tables" /> コレクションに追加します。</summary>
            <param name="tableHasHeaders">この領域の一番上の行にテーブルのヘッダーが含まれているかどうかを示す値です。</param>
            <remarks>
            <p class="body">このテーブルを作成すると、<seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" /> の値に <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> が適用されます。</p>
            <p class="body"><paramref name="tableHasHeaders" /> が True である場合、このテーブルを作成すると、列名はヘッダー行のセルから取り込まれます。False の場合、列名が生成されてヘッダー行のセルがワークシートに挿入されます。</p>
            <p class="body">列の名前は、親 WorksheetTable 内における一意の名前です。テーブルの作成時に同名の列が 2 つ以上存在する場合、各列を一意に識別できるように 2 番目以降の重複列名の末尾に番号が振られていきます。ヘッダー行のセルのなかに文字列以外の値を持つものがある場合、その値は文字列 (そのセルの現在の表示テキスト) に変換されます。ヘッダー行のセルに値を持たないものがある場合、それらのセルには生成された列名が与えられます。</p>
            <p class="body">この領域に収めきれない結合セル領域がある場合、そうしたセル領域はワークシートから除外され、結合領域のセルがすべて収まるようにテーブル領域が拡張されます。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">
            この領域には、別の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> のセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、マルチセルの <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> が適用されるセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、<see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> の一部であるセルが 1 つ以上含まれています。
            </exception>
            <returns>作成された <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> は、この領域の書式設定付きテーブルを表します。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.FormatAsTable(System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)">
            <summary>領域をテーブルとして書式設定し、関連付けられた <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を <see cref="P:Infragistics.Documents.Excel.Worksheet.Tables" /> コレクションに追加します。</summary>
            <param name="tableHasHeaders">この領域の一番上の行にテーブルのヘッダーが含まれているかどうかを示す値です。</param>
            <param name="tableStyle">このテーブルに適用する <see cref="T:Infragistics.Documents.Excel.WorksheetTableStyle" />、または <see cref="P:Infragistics.Documents.Excel.Workbook.DefaultTableStyle" /> を使用する場合は null 値になります。</param>
            <remarks>
            <p class="body">このテーブルを作成すると、指定された <paramref name="tableStyle" /> は <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" /> の値に適用されます。</p>
            <p class="body"><paramref name="tableHasHeaders" /> が True である場合、このテーブルを作成すると、列名はヘッダー行のセルから取り込まれます。False の場合、列名が生成されてヘッダー行のセルがワークシートに挿入されます。</p>
            <p class="body">列の名前は、親 WorksheetTable 内における一意の名前です。テーブルの作成時に同名の列が 2 つ以上存在する場合、各列を一意に識別できるように 2 番目以降の重複列名の末尾に番号が振られていきます。ヘッダー行のセルのなかに文字列以外の値を持つものがある場合、その値は文字列 (そのセルの現在の表示テキスト) に変換されます。ヘッダー行のセルに値を持たないものがある場合、それらのセルには生成された列名が与えられます。</p>
            <p class="body">この領域に収めきれない結合セル領域がある場合、そうしたセル領域はワークシートから除外され、結合領域のセルがすべて収まるようにテーブル領域が拡張されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentException">
            指定された <paramref name="tableStyle" /> は <see cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" /> コレクションに存在しません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、別の <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> のセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、マルチセルの <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> が適用されるセルが 1 つ以上含まれています。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この領域には、<see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> の一部であるセルが 1 つ以上含まれています。
            </exception>
            <returns>作成された <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> は、この領域の書式設定付きテーブルを表します。</returns>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTableColumn.Name" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.CustomTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.Workbook.StandardTableStyles" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.Style" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetTable.IsHeaderRowVisible" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetTableCollection.Add(System.String,System.Boolean,Infragistics.Documents.Excel.WorksheetTableStyle)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetBoundsInTwips">
            <summary>領域の境界をトゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。領域の前の行または列のサイズが変更されると、これらの境界は領域の位置を反映しません。</p>
            </remarks>
            <returns>ワークシートの領域の境界。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)">
            <summary>領域の境界をトゥイップで取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。領域の前の行または列のサイズが変更されると、これらの境界は領域の位置を反映しません。</p>
            </remarks>
            <param name="options">領域の境界線を取得するときに使用するオプション。</param>
            <returns>ワークシートの領域の境界。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean)">
            <summary>領域のセルの範囲の文字列表現を取得します。</summary>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">領域アドレスにワークシート名を含むかどうかを示す値。</param>
            <returns>領域のセルの範囲の文字列表現。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRegion.ToString(Infragistics.Documents.Excel.CellReferenceMode,System.Boolean,System.Boolean,System.Boolean)">
            <summary>領域のセルの範囲の文字列表現を取得します。</summary>
            <param name="cellReferenceMode">セル参照を生成するために使用されるモード。</param>
            <param name="includeWorksheetName">領域アドレスにワークシート名を含むかどうかを示す値。</param>
            <param name="useRelativeColumn">領域内のセルの列アドレスを使用するかどうかを示す値。</param>
            <param name="useRelativeRow">領域内のセルの行アドレスを使用するかどうかを示す値。</param>
            <returns>領域のセルの範囲の文字列表現。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.FirstColumn">
            <summary>領域の最初の列のインデックスを取得します。</summary>
            <value>領域の最初の列のインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.FirstRow">
            <summary>領域の最初の行のインデックスを取得します。</summary>
            <value>領域の最初の行のインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.LastColumn">
            <summary>領域の最後の列のインデックスを取得します。</summary>
            <value>領域の最後の列のインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.LastRow">
            <summary>領域の最後の行のインデックスを取得します。</summary>
            <value>領域の最後の行のインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRegion.Worksheet">
            <summary>領域が置かれるワークシートを取得します。</summary>
            <value>
            領域が存在するワークシート、または領域がワークシートから外れてしまっている場合は null 値が返されます。
            </value>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.GetResolvedCellFormat">
            <summary>この結合されたセル領域の解決済みのセル書式を取得します。</summary>
            <remarks>
            <p class="body">結合されたセル領域に、デフォルト値であるセル書式プロパティがある場合、所有する行のセル書式の値が使用されます。デフォルトの場合、所有する列のセル書式の値が使用されます。そうでない場合、ワークブックのデフォルト値が使用されます。</p>
            </remarks>
            <returns>書式オブジェクトは、このセルが Microsoft Excel で表示されるときに使用される実際の書式を説明します。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat" />
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.CellFormat">
            <summary>この結合されたセル領域のセル書式を取得します。</summary>
            <value>この結合されたセル領域のセル書式。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Comment">
            <summary>結合されたセル領域のコメントを取得または設定します。</summary>
            <remarks>
            <p class="body">結合した領域のコメントは、セルの結合した領域の左上のセルからもアクセスできます。</p>
            </remarks>
            <value>結合されたセル領域のコメント。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Formula">
            <summary>結合された領域に適用されている数式を取得します。</summary>
            <value>結合された領域に適用されている数式、数式が適用されていない場合は null。</value>
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])" />
            <see cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value">
            <summary>結合されたセル領域の値を取得または設定します。</summary>
            <remarks>
            <p class="body">この値でサポートされるタイプは以下のとおりです。<BR />
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue" /></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString" /></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.NotSupportedException">
            指定した値の型がサポートされておらず、Excel にエクスポートできません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Formula" /> です。その代わりに、<see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" /> はセルで渡され数式で呼び出される必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> です。その代わりに、<see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" /> はセルを含む領域に設定する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定される値は、他のセルまたは結合されたセル領域の値である FormattedString です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            値が指定され、このセルは <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> または WorksheetDataTable の一部です。
            </exception>
            <value>結合されたセル領域の値。</value>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> の <see cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion" /> インスタンスのコレクション。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.MergedCellsRegions" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>新しく結合されたセル領域を作成し、コレクションに追加します。</summary>
            <remarks>
            <p class="body">この新しく結合されたセル領域は、左上から開始し、領域の下に進み、値を含んでいる最初のセルから値をとります。他のすべてのセルの値は失われます。同様に、新しい領域は、非デフォルト セル書式を含んでいる最初のセルからセル書式を初期化します。</p>
            </remarks>
            <param name="firstRow">結合されたセル領域の最初の行のインデックス。</param>
            <param name="firstColumn">結合されたセル領域の最初の列のインデックス。</param>
            <param name="lastRow">結合されたセル領域の最後の行のインデックス。</param>
            <param name="lastColumn">結合されたセル領域の最後の行のインデックス。</param>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="firstRow" /> は <paramref name="lastRow" /> より大きいか、<paramref name="firstColumn" /> は <paramref name="lastColumn" /> よりも大きいです。
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            指定された行または列インデックスは、有効な行または列領域の外にあります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            新しく結合されたセル領域は、既存の結合されたセル領域でオーバーラップします。
            </exception>
            <returns>新しく作成された <see cref="T:Infragistics.Documents.Excel.WorksheetMergedCellsRegion" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Clear">
            <summary>コレクションからのすべての結合されたセル領域をクリアします。</summary>
            <remarks>
            <p class="body">結合されたセル領域が削除されると、その領域の左上セルは、領域の値を保持します。この領域のすべての他のセルは null 値を持ちます。さらに、結合された領域のすべてのセルは、それが削除されると、領域のセル書式を持ちます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.IsOverlappingWithMergedRegion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>指定した範囲が結合セル範囲に一部でも含まれているかどうかをチェックします。</summary>
            <param name="firstRow">結合されたセル領域の最初の行のインデックス。</param>
            <param name="firstColumn">結合されたセル領域の最初の列のインデックス。</param>
            <param name="lastRow">結合されたセル領域の最後の行のインデックス。</param>
            <param name="lastColumn">結合されたセル領域の最後の行のインデックス。</param>
            <returns>指定した範囲が結合セル範囲に一部でも含まれている場合はTrue。そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Remove(Infragistics.Documents.Excel.WorksheetMergedCellsRegion)">
            <summary>指定した結合セル領域をコレクションから削除します。</summary>
            <remarks>
            <p class="body">結合されたセル領域が削除されると、その領域の左上セルは、領域の値を保持します。この領域のすべての他のセルは null 値を持ちます。さらに、結合された領域のすべてのセルは、それが削除されると、領域のセル書式を持ちます。</p>
            </remarks>
            <param name="region">コレクションから削除する結合されたセル領域。</param>
            <returns>結合されたセル領域の削除に成功した場合は True、結合されたセル領域がコレクションになかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスで結合セル領域をコレクションから削除します。</summary>
            <remarks>
            <p class="body">結合されたセル領域が削除されると、その領域の左上セルは、領域の値を保持します。この領域のすべての他のセルは null 値を持ちます。さらに、結合された領域のすべてのセルは、それが削除されると、領域のセル書式を持ちます。</p>
            </remarks>
            <param name="index">コレクションの結合されたセル領域の 0 で始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count">
            <summary>このコレクション内の結合されたセル領域の数を取得します。</summary>
            <value>このコレクション内の結合されたセル領域の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Item(System.Int32)">
            <summary>指定したインデックスにある結合されたセル領域を取得します。</summary>
            <param name="index">取得する結合されたセル領域の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegionCollection.Count" /> 以上です。
            </exception>
            <value>指定したインデックスにある結合されたセル領域。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetReferenceCollection">
            <summary>すべてが同じ <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet" /> 上にあるセルまたは領域のコレクション。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.Worksheet)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection" /> インスタンスを作成します。</summary>
            <param name="worksheet">コレクション内の参照が属するワークシート。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null の場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.Worksheet,System.String)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection" /> インスタンスを作成します。</summary>
            <param name="worksheet">コレクション内の参照が属するワークシート。</param>
            <param name="references">コレクションに追加する参照のスペース区切りのリスト。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            参照のリストの形式が正しくない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection" /> インスタンスを作成し、セルで初期化します。</summary>
            <param name="cell">コレクションを初期化するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.#ctor(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.WorksheetReferenceCollection" /> インスタンスを作成し、セルで初期化します。</summary>
            <param name="region">コレクションを初期化するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.ToString">
            <summary>コレクション中のセルと領域のアドレスを表す文字列値を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.GetEnumerator">
            <summary>参照のコレクション中のすべての <see cref="T:Infragistics.Documents.Excel.WorksheetRegion" /> インスタンスおよび <see cref="T:Infragistics.Documents.Excel.WorksheetCell" /> インスタンスを返す列挙子を取得します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(System.String)">
            <summary>参照のリストを参照のコレクションに追加します。</summary>
            <remarks>
            <p class="body">参照は 1 つ以上のスペース (&apos; &apos;) 文字で区切られている必要があります。</p>
            <p class="body">リスト中の参照にはワークシート名が含まれていてはなりません。すべての参照は、このコレクションのワークシートのものであると仮定されます。</p>
            <p class="body">すべての参照がすでにコレクションに含まれている場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="references">コレクションに追加する参照のスペース区切りのリスト。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            参照のリストの形式が正しくない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>参照のリストを参照のコレクションに追加します。</summary>
            <remarks>
            <p class="body">参照は 1 つ以上のスペース (&apos; &apos;) 文字で区切られている必要があります。</p>
            <p class="body">リスト中の参照にはワークシート名が含まれていてはなりません。すべての参照は、このコレクションのワークシートのものであると仮定されます。</p>
            <p class="body">すべての参照がすでにコレクションに含まれている場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="references">コレクションに追加する参照のスペース区切りのリスト。</param>
            <param name="cellReferenceMode"><paramref name="references" /> を解析するセル参照モード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            参照のリストの形式が正しくない場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>セルを参照のコレクションに追加します。</summary>
            <remarks>
            <p class="body">コレクションに追加されるセルは、コレクションと同じ <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet" /> である必要があります。</p>
            <p class="body">セルがコレクションにすでに含まれているか、セルを含む領域がコレクションに含まれている場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="cell">コレクションに追加するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="cell" /> が、参照コレクション以外のワークシートである場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Add(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>領域を参照のコレクションに追加します。</summary>
            <remarks>
            <p class="body">コレクションに追加される領域は、コレクションと同じ <see cref="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet" /> である必要があります。</p>
            <p class="body">領域がコレクションにすでに含まれているか、指定した領域を完全に含む領域がコレクションに含まれている場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="region">コレクションに追加する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="region" /> が、参照コレクション以外のワークシートである場合に発生します。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Clear">
            <summary>このコレクションからすべての参照をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Contains(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>コレクションに指定したセルが含まれるかどうかを判定します。</summary>
            <param name="cell">コレクション内で検索するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <returns>セルがコレクションに含まれているか、セルを含む領域がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Contains(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>コレクションに指定した領域が含まれるかどうかを判定します。</summary>
            <param name="region">コレクション内で検索する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <returns>領域がコレクションに含まれているか、指定した領域を完全に含む領域がコレクションに含まれている場合は True、そうでない場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(System.String)">
            <summary>参照のリストを参照のコレクションから削除します。</summary>
            <remarks>
            <p class="body">参照は 1 つ以上のスペース (&apos; &apos;) 文字で区切られている必要があります。</p>
            <p class="body">リスト中の参照にはワークシート名が含まれていてはなりません。すべての参照は、このコレクションのワークシートのものであると仮定されます。</p>
            <p class="body">参照がコレクションに含まれていない場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="references">コレクションから削除する参照のスペース区切りのリスト。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            参照のリストの形式が正しくない場合に発生します。
            </exception>
            <returns>参照内のセルが見つかり削除された場合は True。それ以外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(System.String,Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>参照のリストを参照のコレクションから削除します。</summary>
            <remarks>
            <p class="body">参照は 1 つ以上のスペース (&apos; &apos;) 文字で区切られている必要があります。</p>
            <p class="body">リスト中の参照にはワークシート名が含まれていてはなりません。すべての参照は、このコレクションのワークシートのものであると仮定されます。</p>
            <p class="body">参照がコレクションに含まれていない場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="references">コレクションから削除する参照のスペース区切りのリスト。</param>
            <param name="cellReferenceMode"><paramref name="references" /> を解析するセル参照モード。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="references" /> が null の場合に発生します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
            <exception cref="T:System.ArgumentException">
            参照のリストの形式が正しくない場合に発生します。
            </exception>
            <returns>参照内のセルが見つかり削除された場合は True。それ以外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(Infragistics.Documents.Excel.WorksheetCell)">
            <summary>セルを参照のコレクションから削除します。</summary>
            <remarks>
            <p class="body">セルがコレクションに含まれていない場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="cell">コレクションから削除するセル。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="cell" /> が null の場合に発生します。
            </exception>
            <returns>セルが見つかって削除された場合は True。それ以外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.Remove(Infragistics.Documents.Excel.WorksheetRegion)">
            <summary>領域を参照のコレクションから削除します。</summary>
            <remarks>
            <p class="body">領域がコレクションに含まれていない場合、この呼び出しによるコレクションへの影響はありません。</p>
            </remarks>
            <param name="region">コレクションから削除する領域。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="region" /> が null の場合に発生します。
            </exception>
            <returns>領域内のセルが見つかり削除された場合は True。それ以外の場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetReferenceCollection.ToString(Infragistics.Documents.Excel.CellReferenceMode)">
            <summary>コレクション中のセルと領域のアドレスを表す文字列値を返します。</summary>
            <param name="cellReferenceMode">領域文字列を取得するセル参照モード。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" /> が <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> 列挙体で定義されていない場合に発生します。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.CellsCount">
            <summary>このコレクションのすべての参照に含まれるセルの数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetReferenceCollection.Worksheet">
            <summary>このコレクションに含まれている参照のワークシートを取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRow">
            <summary>Microsoft Excel ワークシート内の 1 行を表します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})">
            <summary>指定した列インデックスのセルに数式を適用します。</summary>
            <remarks>
            <p class="body"><paramref name="formula" /> は、行が属す <see cref="T:Infragistics.Documents.Excel.CellReferenceMode" /> の <see cref="T:Infragistics.Documents.Excel.Workbook" /> に基づいて解析されます。行の <see cref="T:Infragistics.Documents.Excel.Worksheet" /> が親コレクションから削除された場合、A1 CellReferenceMode は数式を解析するために使用されます。</p>
            </remarks>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="formula">解析およびセルに適用するための数式。</param>
            <param name="cellReferenceMode">数式のセル参照を解釈するために使用されるモード。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="formula" /> は null または空です。
            </exception>
            <exception cref="T:Infragistics.Documents.Excel.FormulaParseException">
            <paramref name="formula" /> は有効な数式ではありません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            セルは配列数式の一部またはセルに制限されないデータ テーブルです。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="cellReferenceMode" />が<see cref="T:Infragistics.Documents.Excel.CellReferenceMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.ApplyFormula(System.String)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)">
            <summary>指定したインデックスが属すセルのデータ テーブルを取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <remarks>
            <p class="body">一番左の列と一番上の行のセルは、関連するデータ テーブルに null  を返します。</p>
            <p class="body">データ テーブルがセルと関連付けられている場合、<see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" /> は、セルの計算された値を返します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>セルが属するデータ テーブル、またはセルがデータ テーブルに属さない場合は null。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.DataTables" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetDataTableCollection.Add(Infragistics.Documents.Excel.WorksheetRegion,Infragistics.Documents.Excel.WorksheetCell,Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedDataTable" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)">
            <summary>指定されたインデックスでセルを含む結合セルの領域を取得するか、セルが結合されない場合は null。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>指定されたインデックスでセルを含む結合セルの領域、セルが結合されない場合は null。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.AssociatedMergedCellsRegion" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedTable(System.Int32)">
            <summary>指定されたインデックスのセルが属する <see cref="T:Infragistics.Documents.Excel.WorksheetTable" /> を取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <remarks>
            <p class="body">テーブル内のいずれかの領域に存在するセルをそのテーブルに所属するセルといいます。これは、ヘッダー セル、集計セル、またはデータ領域内のセルである場合もあります。</p>
            </remarks>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetTable" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Tables" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32)">
            <summary>指定された列インデックスのセルの境界を twip で取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。セルの前の行または列のサイズが変更されると、これらの境界はセルの位置を反映しません。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>ワークシートの指定した列インデックスのセルの境界線。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellBoundsInTwips(System.Int32,Infragistics.Documents.Excel.PositioningOptions)">
            <summary>指定された列インデックスのセルの境界を twip で取得します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">このメソッドによって返される境界は、ワークシートの現在の構成に限って有効です。セルの前の行または列のサイズが変更されると、これらの境界はセルの位置を反映しません。</p>
            </remarks>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="options">セルの境界線を取得するときに使用するオプション。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>ワークシートの指定した列インデックスのセルの境界線。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetBoundsInTwips(Infragistics.Documents.Excel.PositioningOptions)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellComment(System.Int32)">
            <summary>指定した列インデックスのセルに適用したコメントを取得または設定します。</summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>スタイルをセルに適用します。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32)">
            <summary>指定されたインデックスにあるセルの表示テキストを取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <remarks>
            <p class="body">表示テキストは、このセルの値と、このセルに適用される書式文字列によって異なったものになります。</p>
            </remarks>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellText(System.Int32,Infragistics.Documents.Excel.TextFormatMode)">
            <summary>指定されたインデックスにあるセルのテキストを取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="textFormatMode">セルのテキストを取得するときに使用するフォーマット モード。</param>
            <remarks>
            <p class="body">テキストは、このセルの値と、このセルに適用される書式文字列によって異なったものになります。</p>
            </remarks>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="textFormatMode" />が<see cref="T:Infragistics.Documents.Excel.TextFormatMode" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.IWorksheetCellFormat.FormatString" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)">
            <summary>指定した列インデックスのセルのセルの書式を取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <remarks>
            <p class="body">このメソッドは、セルに固有のセル書式設定を設定するために使用します。多くのセルに書式を適用する場合、パフォーマンスの考慮点については <see cref="M:Infragistics.Documents.Excel.Workbook.CreateNewWorksheetCellFormat" /> メソッドを参照してください。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>指定した列インデックスのセルの書式設定。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.TryGetCellFormat(System.Int32,Infragistics.Documents.Excel.IWorksheetCellFormat@)" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)">
            <summary>指定した列インデックスのセルに適用されている数式を取得します。</summary>
            <remarks>
            <p class="body">数式がセルに適用されている場合、<see cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" /> メソッドを取得すると数式の計算された値を返します。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>セルに適用されている数式、または適用されている数式がない場合は null。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion)" />
            <seealso cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetRegion[])" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.ApplyCellFormula(System.Int32,System.String,System.Nullable{Infragistics.Documents.Excel.CellReferenceMode})" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyFormula(System.String)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRegion.ApplyArrayFormula(System.String)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Formula" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)">
            <summary>指定した列インデックスのセルのセルの値を取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <remarks>
            <p class="body">このセルが結合したセル領域に属す領域の左上のセルで、値を取得または設定する場合は、関連付けられた結合セルの領域の値を取得または設定します。結合したセル領域の他のセルの値を取得すると常に null を返します。結合したセル領域での他のセルの値を設定すると、効果がなくなります。</p>
            <p class="body">数式がセルに適用されている場合、またはセルかデータテーブルにセルが関連付けられている場合に Value を取得するとセルの計算された値を返します。</p>
            <p class="body">この値でサポートされるタイプは以下のとおりです。<BR />
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue" /></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString" /></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <value>セルの値。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)">
            <summary>指定した列インデックスのセルの解決済みのセルの書式を取得します。</summary>
            <remarks>
            <p class="body">セルでデフォルト値であるセル書式プロパティがある場合、所有する行のセル書式の値が使用されます。デフォルトの場合、所有する列のセル書式の値が使用されます。そうでない場合、ワークブックのデフォルト値が使用されます。</p>
            </remarks>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>書式オブジェクトは、このセルが Microsoft Excel で表示されるときに使用される実際の書式を説明します。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.RowColumnBase.CellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.GetResolvedCellFormat" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.SetCellComment(System.Int32,Infragistics.Documents.Excel.WorksheetCellComment)">
            <summary>指定した列インデックスのセルに適用したコメントを設定します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="comment">セルにコメントを適用します。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            適用された値には、アンカー セル セットが 1 つだけあります。アンカー セル セットを両方持つ、またはどちらもないか持たないかのどちらかです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            この値は、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> や <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> アンカー セットを持ちますが、それぞれ異なるワークシートからのものです。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Comment" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.SetCellValue(System.Int32,System.Object)">
            <summary>指定した列インデックスのセルの値を設定します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="value">セルに割り当てる値。</param>
            <remarks>
            <p class="body">このセルが結合したセル領域に属す領域の左上のセルで、値を取得または設定する場合は、関連付けられた結合セルの領域の値を取得または設定します。結合したセル領域の他のセルの値を取得すると常に null を返します。結合したセル領域での他のセルの値を設定すると、効果がなくなります。</p>
            <p class="body">数式がセルに適用されている場合、またはセルかデータテーブルにセルが関連付けられている場合に Value を取得するとセルの計算された値を返します。</p>
            <p class="body">この値でサポートされるタイプは以下のとおりです。<BR />
            <ul>
            <li class="taskitem"><span class="taskitemtext">System.Byte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.SByte</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt16</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt64</span></li>
            <li class="taskitem"><span class="taskitemtext">System.UInt32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Int32</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Single</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Double</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Boolean</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Char</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Enum</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Decimal</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DateTime</span></li>
            <li class="taskitem"><span class="taskitemtext">System.String</span></li>
            <li class="taskitem"><span class="taskitemtext">System.Text.StringBuilder</span></li>
            <li class="taskitem"><span class="taskitemtext">System.DBNull</span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.ErrorValue" /></span></li>
            <li class="taskitem"><span class="taskitemtext"><see cref="T:Infragistics.Documents.Excel.FormattedString" /></span></li>
            </ul>
            </p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.NotSupportedException">
            指定した値の型がサポートされておらず、Excel にエクスポートできません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="T:Infragistics.Documents.Excel.Formula" /> です。その代わりに、<see cref="M:Infragistics.Documents.Excel.Formula.ApplyTo(Infragistics.Documents.Excel.WorksheetCell)" /> はセルで渡され数式で呼び出される必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            割り当てた値が <see cref="T:Infragistics.Documents.Excel.WorksheetDataTable" /> です。その代わりに、<see cref="P:Infragistics.Documents.Excel.WorksheetDataTable.CellsInTable" /> はセルを含む領域に設定する必要があります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            指定される値は、他のセルまたは結合されたセル領域の値である FormattedString です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            値が指定され、このセルは <see cref="T:Infragistics.Documents.Excel.ArrayFormula" /> または WorksheetDataTable の一部です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <value>セルの値。</value>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellValue(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedMergedCellsRegion(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetCell.IsCellTypeSupported(System.Type)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetMergedCellsRegion.Value" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormula(System.Int32)" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellAssociatedDataTable(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.Value" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRow.TryGetCellFormat(System.Int32,Infragistics.Documents.Excel.IWorksheetCellFormat@)">
            <summary>割り当てられた場合、指定した列インデックスにあるセルの書式設定を取得します。</summary>
            <param name="columnIndex"><see cref="T:Infragistics.Documents.Excel.WorksheetRow" /> 内のセルの 0 から始まるインデックス。</param>
            <param name="cellFormat">[出力] 割り当てられた場合、指定した列インデックスにあるセルの書式設定。それ以外の場合は null。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="columnIndex" /> は、0 以下またはワークシート内の列数以上です。
            </exception>
            <exception cref="T:System.InvalidOperationException">行がワークシートから削除された場合。</exception>
            <returns>セル書式設定が割り当てられた場合は True。それ以外の場合は False。</returns>
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetResolvedCellFormat(System.Int32)" />
            <seealso cref="P:Infragistics.Documents.Excel.WorksheetCell.CellFormat" />
            <seealso cref="M:Infragistics.Documents.Excel.WorksheetRow.GetCellFormat(System.Int32)" />
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Index">
            <summary>ワークシートの行の 0 から始まるインデックスを取得します。</summary>
            <value>ワークシートの行の 0 から始まるインデックス。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Cells">
            <summary>行でセルのコレクションを取得します。</summary>
            <remarks>
            <p class="body">セルのコレクションは、<see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat">Workbook.CurrentFormat</see> によって <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelColumnCount" /> または <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007ColumnCount" /> のコレクションでセルの最大数を持つ固定された長さのコレクションです。内部的には、要求があった場合、セルが作成されコレクションに追加されます。</p>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべてのセルを作成しません。これはすでに使用されているセルを繰り返すだけです。ワークシートですべてのセルを作成および繰り返すためには、For ループを使用し、0 から MaxExcelColumnCount よりひとつ少ない回数繰り返し、コレクションのインデクサに各インデックスを渡します。</p>
            </remarks>
            <value>行でセルのコレクション。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRow.Height">
            <summary>行の高さをトゥイップで取得または設定します（ポイントの 1/20）。</summary>
            <remarks>
            <p class="body">行の高さがゼロ未満である場合、所有するワークシートの <see cref="P:Infragistics.Documents.Excel.Worksheet.DefaultRowHeight" /> が行の高さとして使用されます。</p>
            <p class="body">指定される値は、-1 から 8192 の間でなければなりません。無効な値は自動的に有効値に調整されます。</p>
            </remarks>
            <value>行のトゥイップでの高さ（1 ポイントの 1/20）。</value>
            <exception cref="T:System.InvalidOperationException">セッターで行がワークシートから削除された場合、エラーが発生されます。</exception>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetRowCollection">
            <summary>このワークシート内の行のコレクション。</summary>
            <remarks>
            <p class="body">このコレクションの行は遅延作成されます（アクセスされる時に作成されてコレクションに追加されます）。このコレクションが列挙されると、すでにアクセスしている行だけが列挙されます。</p>
            </remarks>
            <seealso cref="T:Infragistics.Documents.Excel.WorksheetRow" />
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Rows" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRowCollection.Insert(System.Int32,System.Int32)">
            <summary>1 つ以上の行をコレクションに挿入します。</summary>
            <param name="index">挿入点</param>
            <param name="count">挿入する行数</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えばワークシートからデータが移動される恐れがある場合。</exception>
            <exception cref="T:System.IndexOutOfRangeException">指数が負の数の場合。</exception>
            <remarks>
            <para class="note"><b>注:</b> 同数の行がコレクションの終了から削除されます。</para>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetRowCollection.Remove(System.Int32,System.Int32)">
            <summary>1 つ以上の行をコレクションから削除します。</summary>
            <param name="index">削除する最初の行のインデックス。</param>
            <param name="count">削除する行数。</param>
            <exception cref="T:System.InvalidOperationException">操作が許可されていない場合、例えば範囲が保護された領域を交差する場合。</exception>
            <exception cref="T:System.IndexOutOfRangeException">指数が負の数の場合。</exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRowCollection.MaxCount">
            <summary>このコレクションの項目の最大数を取得します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetRowCollection.Item(System.Int32)">
            <summary>指定したインデックスで行を取得します。</summary>
            <remarks>
            <p class="note"><b>注:</b> コレクションの繰り返しは、すべての行を作成しません。これはすでに使用されている行を繰り返すだけです。ワークシートですべての行の作成および反復には、For ループを使用し、0 から最大行数よりひとつ少ない回数反復し、コレクションのインデクサーに各インデックスを渡します。</p>
            </remarks>
            <param name="index">取得する行の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> はゼロ未満です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="index" /> によって、<see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcelRowCount" /> は <see cref="F:Infragistics.Documents.Excel.Workbook.MaxExcel2007RowCount" /> または <see cref="P:Infragistics.Documents.Excel.Workbook.CurrentFormat" /> 以上にします。
            </exception>
            <value>指定されたインデックスにある行。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetCollection">
            <summary>ワークブック内のワークシートのコレクション。</summary>
            <seealso cref="T:Infragistics.Documents.Excel.Worksheet" />
            <seealso cref="T:Workbook.Worksheets" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Add(System.String)">
            <summary><see cref="T:Infragistics.Documents.Excel.Worksheet" /> を新規作成してコレクションに追加します。</summary>
            <remarks>
            <p class="body">ワークブックにワークシートが最初からない場合、新しく追加されたワークシートは、ワークブックの選択されたワークシートになります。これはワークブックの <see cref="P:Infragistics.Documents.Excel.WindowOptions.SelectedWorksheet" /> を設定することでより多くのワークシートを追加後に変更できます。</p>
            </remarks>
            <param name="name">新しいワークシートを指定するための名前。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="name" /> は null または空です。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は無効な文字を含みます:  &apos;:&apos;、&apos;\&apos;、&apos;/&apos;、&apos;?&apos;、&apos;*&apos;、&apos;[&apos;、または &apos;]&apos;。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は 31 文字を超えています。
            </exception>
            <exception cref="T:System.ArgumentException">
            <paramref name="name" /> は、他のワークシートの名前として使用されます（ワークシート名は大文字と小文字を区別せずに比較されます）。
            </exception>
            <returns>指定した名前で作成したワークシート。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Clear">
            <summary>このコレクションからすべてのワークシートをクリアします。</summary>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences" /> コレクションの <see cref="T:Infragistics.Documents.Excel.NamedReference" /> インスタンスのなかに削除範囲に含まれるワークシートを持つインスタンスがある場合、そうしたインスタンスは <see cref="T:Infragistics.Documents.Excel.Workbook" /> から削除されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Contains(Infragistics.Documents.Excel.Worksheet)">
            <summary>ワークシートがコレクションにあるかどうかを決定します。</summary>
            <param name="worksheet">このコレクションで見つけ出すワークシート。</param>
            <returns>ワークシートが見つかった場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Exists(System.String)">
            <summary>指定した名前がコレクション内に存在するかどうかを決定します。</summary>
            <param name="name">検索するワークシートの名前名前は大文字と小文字を区別せずに比較されます。</param>
            <returns>指定された名前のワークシートが見つかった場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.IndexOf(Infragistics.Documents.Excel.Worksheet)">
            <summary>コレクション内の指定したワークシートのインデックスを取得します。</summary>
            <param name="worksheet">インデックスを取得するためのワークシ―ト。</param>
            <returns>コレクション内の指定したワークシートのインデックス。</returns>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Index" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.Remove(Infragistics.Documents.Excel.Worksheet)">
            <summary>指定したワークシートをコレクションから削除します。</summary>
            <param name="worksheet">コレクションから削除するワークシート。</param>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences" /> コレクションの <see cref="T:Infragistics.Documents.Excel.NamedReference" /> インスタンスのなかに削除範囲に含まれるワークシートを持つインスタンスがある場合、そうしたインスタンスは <see cref="T:Infragistics.Documents.Excel.Workbook" /> から削除されます。</p>
            </remarks>
            <returns>ワークシートがコレクションから問題なく削除された場合は True、ワークシートがコレクションに存在しなかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにあるワークシートをコレクションから削除します。</summary>
            <param name="index">コレクションから削除するワークシートのインデックス。</param>
            <remarks>
            <p class="body"><see cref="P:Infragistics.Documents.Excel.Workbook.NamedReferences" /> コレクションの <see cref="T:Infragistics.Documents.Excel.NamedReference" /> インスタンスのなかに削除範囲に含まれるワークシートを持つインスタンスがある場合、そうしたインスタンスは <see cref="T:Infragistics.Documents.Excel.Workbook" /> から削除されます。</p>
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Count">
            <summary>このコレクション内のワークシートの数を取得します。</summary>
            <value>このコレクション内のワークシートの数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Item(System.Int32)">
            <summary>指定したインデックスでワークシートを取得します。</summary>
            <param name="index">取得するワークシートの 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetCollection.Count" /> 以上です。
            </exception>
            <value>指定されたインデックスにあるワークシート。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetCollection.Item(System.String)">
            <summary>指定した名前を持つワークシートを取得します。</summary>
            <remarks>
            <p class="body">ワークシート名は大文字と小文字を区別せずに比較されます。</p>
            </remarks>
            <param name="name">取得するワークシートの名前。</param>
            <exception cref="T:System.InvalidOperationException">
            指定した名前のワークシートはコレクションに存在しません。 
            </exception>
            <value>指定した名前付きのワークシート。</value>
            <seealso cref="P:Infragistics.Documents.Excel.Worksheet.Name" />
        </member>
        <member name="T:Infragistics.Documents.Excel.WorksheetShapeCollection">
            <summary><see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Worksheet" /> または <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> に含まれる <see cref="T:Infragistics.Documents.Excel.WorksheetShape" /> インスタンスのコレクション。</summary>
            <seealso cref="T:Worksheet.Shapes" />
            <seealso cref="T:WorksheetShapeGroup.Shapes" />
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,System.Drawing.Rectangle)">
            <summary>定義済みの形状を、指定した境界線を持つコレクションに追加します。</summary>
            <param name="shapeType">コレクションに追加する形状のタイプ。</param>
            <param name="boundsInTwips">トゥイップ (ポイントの 1/20) 単位の、<see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Worksheet" /> 上の形状の境界。</param>
            <exception cref="T:System.InvalidOperationException">
            この形状コレクションは、まだワークシートに配置されていない <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> に属します。この場合、代わりに <see cref="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)" /> を呼び出し、グループが追加されるワークシートを指定します。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType" />が<see cref="T:Infragistics.Documents.Excel.PredefinedShapeType" />列挙体で定義されていないです。
            </exception>
            <returns>定義済みの図形を表す、<see cref="T:Infragistics.Documents.Excel.WorksheetShape" /> から派生したインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.Worksheet,System.Drawing.Rectangle)">
            <summary>定義済みの形状を、指定した境界線を持つコレクションに追加します。</summary>
            <param name="shapeType">コレクションに追加する形状のタイプ。</param>
            <param name="worksheet"><paramref name="boundsInTwips" /> が関係する <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Worksheet" />。</param>
            <param name="boundsInTwips">トゥイップ (ポイントの 1/20) 単位の、<paramref name="worksheet" /> 上の形状の境界。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="worksheet" /> が null です。
            </exception>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType" />が<see cref="T:Infragistics.Documents.Excel.PredefinedShapeType" />列挙体で定義されていないです。
            </exception>
            <returns>定義済みの図形を表す、<see cref="T:Infragistics.Documents.Excel.WorksheetShape" /> から派生したインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.PredefinedShapeType,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF,Infragistics.Documents.Excel.WorksheetCell,System.Drawing.PointF)">
            <summary>定義済みの形状を、指定したアンカーを持つコレクションに追加します。</summary>
            <param name="shapeType">コレクションに追加する形状のタイプ。</param>
            <param name="topLeftCornerCell">形状の左上角の置かれるセル。</param>
            <param name="topLeftCornerPosition">パーセントで表される、形状の左上隅の <paramref name="topLeftCornerCell" /> での位置。</param>
            <param name="bottomRightCornerCell">形状の右下角の置かれるセル。</param>
            <param name="bottomRightCornerPosition">パーセントで表される、形状の右下隅の <paramref name="bottomRightCornerCell" /> での位置。</param>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            <paramref name="shapeType" />が<see cref="T:Infragistics.Documents.Excel.PredefinedShapeType" />列挙体で定義されていないです。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell" /> または <paramref name="bottomRightCornerCell" /> は null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="topLeftCornerCell" /> および <paramref name="bottomRightCornerCell" /> は、異なるワークシートか、このコレクションが属するワークシートとは別のワークシートに属しています。
            </exception>
            <returns>定義済みの図形を表す、<see cref="T:Infragistics.Documents.Excel.WorksheetShape" /> から派生したインスタンス。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Add(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>コレクションに形状を追加します。</summary>
            <param name="shape">コレクションに追加する形状。</param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="shape" /> が null です。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape" /> は、ワークシートまたはグループにすでに追加されました。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape" /> は、<see cref="P:Infragistics.Documents.Excel.WorksheetShape.TopLeftCornerCell" /> または <see cref="P:Infragistics.Documents.Excel.WorksheetShape.BottomRightCornerCell" /> セットを持ちません。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            このコレクションに <paramref name="shape" /> を追加すると、異なるワークシートに配置され、TopLeftCornerCell または BottomRightCornerCell または <paramref name="shape" /> は <see cref="T:Infragistics.Documents.Excel.WorksheetShapeGroup" /> となり、コレクションにこれを追加すると子孫形状のひとつと同様の状況を作ります。
            </exception>
            <exception cref="T:System.InvalidOperationException">
            <paramref name="shape" /> は WorksheetShapeGroup で、これはグループの形状コレクションです。
            </exception>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Clear">
            <summary>このコレクションからすべての形状をクリアします。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Contains(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>形状がコレクションにあるかどうかを決定します。</summary>
            <param name="shape">このコレクションで見つけ出す形状。</param>
            <returns>形状が見つかった場合は True、そうでなければ False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.Remove(Infragistics.Documents.Excel.WorksheetShape)">
            <summary>指定した形状をコレクションから削除します。</summary>
            <param name="shape">コレクションから削除する形状。</param>
            <returns>形状がコレクションから問題なく削除された場合は True、形状がコレクションに存在しなかった場合は False。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.WorksheetShapeCollection.RemoveAt(System.Int32)">
            <summary>指定したインデックスにある形状をコレクションから削除します。</summary>
            <param name="index">コレクションから削除する形状のインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count" /> 以上です。
            </exception>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count">
            <summary>このコレクション内の形状の数を取得します。</summary>
            <value>このコレクション内の形状の数。</value>
        </member>
        <member name="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Item(System.Int32)">
            <summary>指定したインデックスにある、コレクション内の形状を取得します。</summary>
            <param name="index">取得する形状の 0 から始まるインデックス。</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="index" /> が 0 未満であるか、または、<paramref name="index" /> が <see cref="P:Infragistics.Documents.Excel.WorksheetShapeCollection.Count" /> 以上です。
            </exception>
            <value>指定されたインデックスにある形状。</value>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus">
            <summary>&quot;+&quot; 加算数式演算子 (例：1+2)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定された引数でバイナリ演算子を評価し、結果を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPlus.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus">
            <summary>&quot;-&quot;減算数式演算子（例：3-2）。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定された引数でバイナリ演算子を評価し、結果を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMinus.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply">
            <summary>&quot;*&quot;乗算数式演算子 (例：2*3)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定された引数でバイナリ演算子を評価し、結果を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMultiply.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide">
            <summary>&quot;/&quot; 除算数式演算子 (例：3/2)。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue,Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue)">
            <summary>指定された引数でバイナリ演算子を評価し、結果を返します。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDivide.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient">
            <summary>余りを無視して 2 つの数で整数除算を実行しまうす。</summary>
            <remarks>
            <p class="body">QUOTIENT(numerator, denominator)</p>
            <p class="body">分子は<em>分母</em>で割られる数値です。これは被除数と呼ばれる場合があります。</p>
            <p class="body">分母は<em>分子</em>を割る数値です。これは除数と呼ばれる場合があります。ゼロまたは #DIV/0 エラー値が返されます。</p>
            <p class="body"><em>分子</em>と<em>分母</em>のいずれかが数値でない場合、QUOTIENT() 関数はエラー値（#VALUE!）を返します。</p>
            <p class="body">整数除数からの余りが必要である場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionMod">MOD()</see> の関数を使用してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionQuotient.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower">
            <summary>特定の数をべき乗にします。</summary>
            <remarks>
            <p class="body">POWER(value, exponent)</p>
            <p class="body">値はべき乗にしたい数値に対する数値または参照です。</p>
            <p class="body">指数は、<em>value</em> が発生する実数のべき乗です。想像上の指数はサポートされていません。</p>
            <p class="body">POWER() 関数の一般的なアプリケーションは、それ自体に対する数を複数回かけ算する必要がある時に発生します。値 2 を整数の指数に指定することでビット マスク値を作成すりことは多くのコンピュータ アプリケーションで一般的で、(1, 2, 4, 8, 16, 32, 64, 128, ...)などのシーケンスを生成します。</p>
            <p class="body">POWER() 関数は分数指数を追加でサポートしており、quadroot（0.25 の指数、つまり 1/4 に指定される）などの他の関数をエミュレートするために使用したり、逆二乗（-2.0 の指数に指定される）に使用できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPower.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount">
            <summary>セルが持つ数値または日付/時刻値をカウントします。</summary>
            <remarks>
            <p class="body">COUNT(Value1, Value2, ..., ValueN)</p>
            <p class="body">Value1、value2 ... valueN は、列などの異なるデータ構造への参照です。各数値または日付/時刻値がカウントされます。数値に変換できない空、エラー、ブールまたはテキスト値はカウントされません。</p>
            <p class="body">参照が範囲参照である場合、その範囲内のそれらの数値および日付/時刻値だけがカウントされます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCount.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue">
            <summary>定数関数は常にブールの TRUE 値を返します。</summary>
            <remarks>
            <p class="body">TRUE() は常に TRUE のブール値を評価します。これは引数をとりません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionTrue.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse">
            <summary>定数関数は常にブールの FALSE 値を返します。</summary>
            <remarks>
            <p class="body">FALSE() は常に FALSE のブール値を評価します。これは引数をとりません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFalse.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi">
            <summary>ギリシャ文字 pi の算術定数を返します。</summary>
            <remarks>
            <p class="body">PI()</p>
            <p class="body">算術的な定数 pi は、円の直径とその外周の関係を表します。また、円の表面領域と円の半径の四角に関連する定数でもあります。算術、幾何、科学、およびエンジニアリングで多くのアプリケーションを持ちます。</p>
            <p class="body">定数 pi は無限小数ですが、UltraCalc は 15 桁（3.14159265358979）の精度に概算します。</p>
            <p class="body">UltraCalc の PI 関数の一般的な使用は、引数および円弧のより従来的な度合いをとる三角関数のフォームである半径の計測を変換することです。この変換は、PI()/180 でラジアン計測をかけ算することで達成できます。以下の表は、ラジアンと角度の比較のためのベンチマークを説明しています。</p>
            <table border="0">
            <thead>
            <th>Radians</th><th>Degrees</th><th>ホイールのターン（一般例）</th>
            </thead>
            <tbody>
            <tr><td>0</td><td>0</td><td>ターンなし</td></tr>
            <tr><td>PI/4</td><td>45</td><td>1/8 ターン</td></tr>
            <tr><td>PI/2</td><td>90</td><td>1/4 ターン</td></tr>
            <tr><td>PI</td><td>180</td><td>1/2 ターン</td></tr>
            <tr><td>2x PI</td><td>360</td><td>1 回の完全なターン</td></tr>
            <tr><td>3x PI</td><td>540</td><td>1.5 ターン</td></tr>
            </tbody>
            </table>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPi.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand">
            <summary>ゼロから 1 までの疑似乱数を生成します。</summary>
            <remarks>
            <p class="body">RAND()</p>
            <p>RAND() 関数は、それが評価される毎に他の疑似乱数を生成します。ユニット ベースの小数値を返すので、RAND()結果に<em>C</em>を乗算して RAND() は 0 と <em>C</em> の間の数値を生成します。結果を <em>A</em>で移動できる <em>A</em> および <em>B</em> の間の疑似乱数を生成します。</p>
            <code>RAND() * ( [B] - [A] ) + [A]</code><p class="body">RAND() 関数の数生成は、システム クロックから派生し、したがって完全にランダムではありません。強力な暗号化のランダム性または統一的な確率分布が求められるアプリケーションでは使用すべきではありません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRand.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">
            <summary>指定する予想レートまたはリターン投資の Net Present Value を計算し、正の数値（入金）および負の数値（支払い）としてキャッシュ フローが表されます。</summary>
            <remarks>
            <p class="body">NPV(discountRate, value1, value2, ..., valueN)</p>
            <p class="body">DiscountRate は投資の期間のリターンの投資期待レートで、支払い期間のパーセント成長（または下降）として表されます。一部のアプリケーションでは、これは固定利率です。この数値は、支払われるまたは投資から受け取るキャッシュ フローを割り引くために使用されます。</p>
            <p class="body">Value1、value2、... valueN は、正の数値としてキャッシュ インフロー（入金）または負の数値としてキャッシュ アウトフローを表す数値です。このキャッシュ フローは、固定期間で発生する必要があります（<em>discountRate</em> が表される同じ期間）。ただし、一部のキャッシュ フローはゼロになります。シーケンスの順序は重要で、<em>value1</em> は <em>valueN</em> の前の期間（<em>N</em>-1）で発生すると想定され、想定される <em>discountRate</em> でより多くの利息を発生することができます。</p>
            <p class="body">規則では、NPV() は各期間の終わりでキャッシュ フローが発生すると想定します。NPV() は、<em>value1</em> が作成された最初のキャッシュ フローの前の期間の長さの日付として現在値を表します。キャッシュ フローが行われる時 (各期間の開始または終了) に柔軟性が必要な場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV">PV()</see> 関数を使用して考慮します。これは NPV() とは異なります。NPV() では異なる額のキャッシュ フローが可能です。</p>
            <p class="body">数値または数値に変換できるテキスト値だけがこれに渡されます列または範囲参照が <em>value</em> 引数として渡される場合、数値または数値に変換できるテキスト値だけが使用されます。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR">IRR()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV">
            <summary>固定された将来の支払いが指定された利率であることを割り引いて投資の現在の値を計算します。</summary>
            <remarks>
            <p class="body">PV(interestRate, nPeriods, amount, futureValue, paymentDue)</p>
            <p class="body">InterestRate は将来の支払いを割り引くために使用される期間単位の利率です。正の利率では、将来の支払いの値は、現時点の額に減じられます（割り引かれます）。<em>interestRate</em> で現在の値を再投資して、<em>nPeriods</em> 後に <em>futureValue</em> を受け取ることができると想定します。</p>
            <p class="body">NPeriods は投資期間全体の支払い期間の合計数です。退職金積み立て制度が35 年間で、四半期固定の負担をする場合、支払い期間の合計数として 35x4 または 140 を使用します。</p>
            <p class="body">金額は各期間で支払う（または受け取る）額です。この <em>amount</em> は投資期間全体を通じて一定でなければなりません。一連の可変支払い金額の Net Present Value を計算する必要がある場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">NPV()</see> 関数を使用して検討する必要があります。</p>
            <p class="body">FutureValue は、最高点での投資の予想キャッシュ バランスです。この引数が省略されると、ゼロであると想定されます。貸付返済の計算の一般的な使用のシナリオでは、ゼロの将来の値は、貸付が完全に返済された時点のゼロ債務を表します。将来の値にゼロを指定する場合、<em>amount</em> がゼロ以外であることを確認します（そうでなければ、貸付は返済されません）。退職金では、退職時に受け取る将来の金額を通常は計算します。</p>
            <p class="body">PaymentDue は、1 または 0 の数値です。支払いは各期間（1）の期首または各期間の期末（0）の投資額で投資されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPV.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">
            <summary>支払い数が固定される必要がある固定利率での貸付で支払い金額を計算します。</summary>
            <remarks>
            <p class="body">PMT(interestRate, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">rate には、貸付期間を通じての一定の利率を指定します。</p>
            <p class="body">NPeriods は貸付を返済するために必要な支払い数です。</p>
            <p class="body">PresentValue は貸付の現在の値で（元本とも呼ばれます）、これは将来の一連の <em>nPeriods</em> 支払い（<em>interestRate</em> で利息を累積）を現時点で一括払いすることです。</p>
            <p class="body">FutureValue は将来のキャッシュ バランスで（貸付では、これは一般的にゼロの貸し付け債務バランス）一連の固定支払いに従い、固定の <em>interestRate</em> を追加します。省略すると、0 のデフォルトの将来の値が使用されます。</p>
            <p class="body">PaymentDue は、1 または 0 の数値です。支払いは各期間（1）の期首または各期間の期末（0）の投資額で投資されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer">
            <summary>支払い頻度、金額、および利率が安定している場合、投資の支払い期間の数を計算します。</summary>
            <remarks>
            <p class="body">NPER(interestRate, amount, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate は支払い期間単位の利率です。この数値は、投資の期間は固定する必要があります。利率の変化に基づき財務計算をしなければならない場合、計算を複数の段階に分割して、利率を一定にする必要があります。</p>
            <p class="body">金額は各期間の支払い金額です。この数値は、投資の期間中は一定でなければなりません。</p>
            <p class="body">PresentValue は割り引かれた値または一括払いで、<em>interestRate</em> で投資され、将来の一連の固定支払いと同じ価値になります。</p>
            <p class="body">FutureValue は、最終の支払いが行われた後の値です。この数値が省略されると、ゼロであると想定されます（この関数は通常貸付返済の計算で使用されるので、貸付が返済されると債務はゼロになります）。</p>
            <p class="body">PaymentDue は、各支払い期間の期首（1）または各支払い期間の期末（0）で支払いが行われるか示します。指定しないと、デフォルトは各支払い期間の期末で <em>paymentDue</em> が発生すると想定します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPer.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt">
            <summary>定期的な投資または貸付のための支払いの利率部分、定額支払い、および利息の固定レートを計算します。</summary>
            <remarks>
            <p class="body">PPMT(interestRate, periodNumber, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate は期間単位の利息の固定レートです。この関数は、各期間に支払いが 1 度あると想定し、したがって、四半期または月々の支払いを行いたい場合、年間の支払い回数で割り算して年間の <em>interestRate</em> を調整する必要があります。</p>
            <p class="body">PeriodNumber は、現在の支払いの期間を識別し、最初の支払いは 1 の数となります。<em>periodNumber</em> は期間の合計数を超えてはなりません（<em>nPeriods</em>）。</p>
            <p class="body">NPeriods は、この投資または貸付に渡る合計数です。</p>
            <p class="body">PresentValue は将来の一連の支払いの割引の値で、一括払いをして、この投資または貸付が返済される時点の将来の日付まで固定の <em>interestRate</em> で投資することができます。</p>
            <p class="body">FutureValue は、最後の支払いが行われた後の一連の支払いの予想値で、すべての過去の支払いが固定の <em>interestRate</em> の利率で計算されています。未払い債務を削減する貸付支払いを計算するために関数が使用されるなどが省略されると、将来の値はゼロになると想定されます。</p>
            <p class="body">PaymentDue は、各期間（1）の期首または各期間（0）の期末の支払い期日を示す数値です。</p>
            <p class="body">PPMT() 関数は、元本に属する定額支払いの部分を計算します。利息を返済することで定額支払いの部分を計算する必要がある場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt">IPMT()</see> 関数を使用します。定額支払い金額を計算するには、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">PMT()</see> 関数を使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt">
            <summary>定期的な投資または貸付のための支払いの利率部分、定額支払い、および利息の固定レートを計算します。</summary>
            <remarks>
            <p class="body">IPMT(interestRate, periodNumber, nPeriods, presentValue, futureValue, paymentDue)</p>
            <p class="body">InterestRate は期間単位の利息の固定レートです。この関数は、各期間に支払いが 1 度あると想定し、したがって、四半期または月々の支払いを行いたい場合、年間の支払い回数で割り算して年間の <em>interestRate</em> を調整する必要があります。</p>
            <p class="body">PeriodNumber は、現在の支払いの期間を識別し、最初の支払いは 1 の数となります。<em>periodNumber</em> は期間の合計数を超えてはなりません（<em>nPeriods</em>）。</p>
            <p class="body">NPeriods は、この投資または貸付に渡る合計数です。</p>
            <p class="body">PresentValue は将来の一連の支払いの割引の値で、一括払いをして、この投資または貸付が返済される時点の将来の日付まで固定の <em>interestRate</em> で投資することができます。</p>
            <p class="body">FutureValue は、最後の支払いが行われた後の一連の支払いの予想値で、すべての過去の支払いが固定の <em>interestRate</em> の利率で計算されています。未払い債務を削減する貸付支払いを計算するために関数が使用されるなどが省略されると、将来の値はゼロになると想定されます。</p>
            <p class="body">PaymentDue は、各期間（1）の期首または各期間（0）の期末の支払い期日を示す数値です。</p>
            <p class="body">IPMT() 関数は、利率に属する定額支払いの部分を計算します。利息を返済することで定額支払いの部分を計算する必要がある場合、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPPmt">PPMT()</see> 関数を使用します。定額支払い金額を計算するには、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionPmt">PMT()</see> 関数を使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIPmt.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB">
            <summary>指定された期間で定率法（DB）を使用して資産の減価償却を計算します。</summary>
            <remarks>
            <p class="body">DB(assetCost, salvageValue, lifespan, period, months)</p>
            <p class="body">AssetCost は、計算の開始時の元々の原価または資産の購入価格です。</p>
            <p class="body">SalvageValue は予測した耐用年数が終了した後の資産の市場価値です。予備部分としての資産価値となる場合があります。</p>
            <p class="body">Lifespan は資産に価値がある期間（耐用年数）と減価償却をする必要がある期間を示します。会計基準は、耐久消費財および非耐久消費財など異なるクラスの資産にどの <em>lifespan</em> が適切かによって変わります。</p>
            <p class="body">Period は減価償却の減少計算の間の時間の単位数を示します。<em>lifespan</em> が年単位で測定される場合には、<em>period</em> に対して指定された値も年単位でなければなりません。</p>
            <p class="body">減価償却が年の最初の日に開始しない場合、Months によって初年の月数を指定することができます。資産が新たに購入された時期に基づいて <em>months</em> は指定されます。省略される場合、計算はデフォルトで 12 になります。これは、年の最初の日から開始する計算に相当します。</p>
            <p class="body">一部の資産では、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB">DDB()</see> 関数などの代替えの計算方法の方が適切な場合があります。減価償却を計算する方法として定率法が適切な方法である資産については、税理士に相談してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB">
            <summary>指定された期間で倍率法（DDB）やその他の加重要因法を使用して資産の減価償却を計算します。</summary>
            <remarks>
            <p class="body">DDB(assetCost, salvageValue, lifespan, period, weight)</p>
            <p class="body">AssetCost は、計算の開始時の元々の原価または資産の購入価格です。</p>
            <p class="body">SalvageValue は予測した耐用年数が終了した後の資産の市場価値です。予備部分としての資産価値となる場合があります。</p>
            <p class="body">Lifespan は資産に価値がある期間（耐用年数）と減価償却をする必要がある期間を示します。会計基準は、耐久消費財および非耐久消費財など異なるクラスの資産にどの <em>lifespan</em> が適切かによって変わります。</p>
            <p class="body">Period は減価償却の減少計算の間の時間の単位数を示します。<em>lifespan</em> が年単位で測定される場合には、<em>period</em> に対して指定された値も年単位でなければなりません。</p>
            <p class="body">Weight によって計算方法を微調整することができます。デフォルトで倍率法は 2 の因数を使用します。</p>
            <p class="body">一部の資産では、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDB">DB()</see> 関数などの代替えの計算方法の方が適切な場合があります。減価償却を計算する方法として倍率法が適切な方法である資産、また使用の初年に加速償却を行うハイテク装置や自動車などの特定資産の減価償却時にどのような因数を使用できるかについては、税理士に相談してください。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDDB.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate">
            <summary>無利子債券など、将来のある時点において償還可能な証券投資が生む金利を計算します。</summary>
            <remarks>
            <p class="body">INTRATE(settlementDate, maturityDate, amount, redemptionValue, basis)</p>
            <p class="body">SettlementDate は証券を所有する購入者によって証券購入が実施された日付です。取引の決済に関する市場の慣習は、証券と取引によって変わります。決済日は実質的に流通市場で取引された証券の発行日以降にすることができます。</p>
            <p class="body">MaturityDate は、証券を償還できる日付です。この日付以降利子は発生しません。満期日は <em>settlementDate</em> よりも後でなければなりません。そうでないとエラー値が返されます。</p>
            <p class="body">Amount は証券の購入価格です。正の利子の場合、この金額は <em>redemptionValue</em> よりも小さくなります。証券が保持される期間に生じる利子を無視するからです。</p>
            <p class="body">RedemptionValue は、<em>maturityDate</em> に証券保有者が証券を償還できる価格です。場合によっては、これはsecurityの額面価格と呼ばれる場合があります</p>
            <p class="body">basis は、暦年あたりの日を数える時に使用する会計公準と、利子を生じることができる日について述べます。省略されると、30/360 の United States National Association of Security Dealers（NASD）に一致する基準が採用されます。</p>
            <table>
            <colgroup><col width="100px" /><col width="240px" /></colgroup>
            <tr><th>基準</th><th>日数勘定方法</th></tr>
            <tr><td>0</td><td>30/360 (US NASD)</td></tr>
            <tr><td>1</td><td>Actual/actual</td></tr>
            <tr><td>2</td><td>Actual/360</td></tr>
            <tr><td>3</td><td>Actual/365</td></tr>
            <tr><td>4</td><td>30/360 (ヨーロッパ)</td></tr>
            </table>
            <p class="body">日付値は、 <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDate">DATE()</see> 関数または .NET <strong>DateTime</strong> 値を含む <strong>UltraCalcValue</strong> オブジェクトのいずれかを使用して、この関数に渡される必要があります。テキストとして表される日付値は、意図していたように解釈できない場合があります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIntRate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360">
            <summary>１年を360日（30日ﾗ12か月）として、２つの日付の間の日数を返します。 これは一部の会計計算で使用されます。</summary>
            <remarks>
            <p class="body">DAYS360(start_date,end_date,method)<p></p>start_date と end_date には、間の日数を求める 2 つの日付を指定します。<p></p>start_date に end_date よりも後の日付を指定すると、負の値が返されます。日付を入力する際は、DATE関数を使用するか、または他の数式や関数の結果を指定します。たとえば2008年5月23日の場合は、DATE(2008,5,23)を使用します。日付はテキストとして入力される場合は、問題が発生ことがあります。<p></p>method には、計算に米国方式とヨーロッパ方式のどちらを採用するかを論理値で指定します。<p></p><t></t>FALSE または省略した場合 = 米国 NASD 方式。開始日が 31 日の場合は同じ月の 30 日扱いになります。終了日が 31 日の場合は翌月の 1 日扱いになります。 ただし、開始日が 30 日または 31 日の場合、終了日 31 日は同じ月の 30 日扱いになります。<p></p><t></t>TRUE = ヨーロッパ方式。開始日、終了日ともに、31 日は同じ月の 30 日扱いになります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDays360.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow">
            <summary>現在の日時を表す .NET DateTime 型のタイマー刻み数を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNow.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType">
            <summary>指定された値の基本の UltraCalc データ型を返します。</summary>
            <remarks>
            <p class="body">TYPE( value)</p>
            <p class="body">value は <strong>UltraCalcValue</strong> オブジェクトまたは UltraCalc 式の評価の結果です。</p>
            <p class="body">
            <table border="0">
            <colgroup><col width="160px" /><col width="160px" /></colgroup>
            <thead><th>UltraCalc データ型:</th><th>TYPE 関数は以下を返します:</th></thead>
            <tbody>
            <tr><td>Number</td><td>1</td></tr>
            <tr><td>Text</td><td>2</td></tr>
            <tr><td>Boolean</td><td>4</td></tr>
            <tr><td>エラー</td><td>16</td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionType.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType">
            <summary>エラー値が返されると、ERRORTYPE 関数は UltraCalcErrorCode 列挙体に対応する数値を返します。</summary>
            <remarks>
            <p class="body">ERRORTYPE(error_value)</p>
            <p class="body">Error_value は数式の評価に失敗した結果生じた UltraCalc エラー値です。</p>
            <p class="body">ERRORTYPE 関数は、エラー値ではなかった UltraCalc 値に渡す場合、#N/A（該当なし）のエラー値を返します。</p>
            <p class="body">
            <table border="0">
            <thead>
            <th>Error_value</th>
            <th>ERRORTYPE の戻り値</th>
            </thead>
            <tbody>
            <tr><td>#NULL!</td><td>1</td></tr>
            <tr><td>#DIV/0!</td><td>2</td></tr>
            <tr><td>#VALUE!</td><td>3</td></tr>
            <tr><td>#REF!</td><td>4</td></tr>
            <tr><td>#NAME?</td><td>5</td></tr>
            <tr><td>#NUM!</td><td>6</td></tr>
            <tr><td>#N/A</td><td>7</td></tr>
            </tbody>
            </table>
            </p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionErrorType.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa">
            <summary>#N/A! を返します。これは該当しない結果を表すエラー値です。</summary>
            <remarks>
            <p class="body">NA()</p>
            <p class="body">NA 関数は常に同じ定数を返します</p>
            <p class="body">IF 関数またはその他の複雑な UltraCalc 式が #N/A! を返すようにしたい場合にはこの関数を使用します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNa.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank">
            <summary>指定された値が空白の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISBLANK(value)</p>
            <p class="body">valueは定数、参照、または UltraCalc 式の評価の結果を使用することができます。</p>
            <p class="body">&quot;blank&quot; を構成するものの定義は、引数、値を含む <strong>UltraCalcValue</strong> オブジェクトの <strong>IsNull</strong> メソッドが TRUE を返すようにするものです。これは、さまざまな種類の <strong>UltraCalcValue</strong> オブジェクトで変わる場合があります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsBlank.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr">
            <summary>指定された値が #N/A を除くエラー値の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISERR(value)</p>
            <p class="body">value はエラーと見なされた <strong>UltraCalcValue</strong> オブジェクトです（おそらく UltraCalc 式の評価の結果）。ISERR 関数は値がエラー値でない、またはエラーであってもエラー値が適用できなかった時に FALSE を返します。</p>
            <p class="body">これは、より厳格な <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError">ISERROR</see> 関数の弱い変動です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError">
            <summary>指定された値が例外を除くエラー値の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISERROR(value)</p>
            <p class="body">value はエラーと見なされた <strong>UltraCalcValue</strong> オブジェクトです（おそらく UltraCalc 式の評価の結果）。ISERROR 関数は値がエラーではない時に限り FALSE を返します。</p>
            <p class="body">この関数のより緩やかな変動は <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsErr">ISERR</see> 関数で、この関数はエラー値が適用可能でない時に True を返します。ISERROR 関数はこの事例をエラーであるとして扱います。特定の UltraCalc 関数を使用する場合、#N/A! のエラー値をアプリケーションによって非エラーとして取り扱う必要がある場合があります。この場合、ISERROR ではなく ISERR を選択する必要があります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsError.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical">
            <summary>指定された値が 2 つの状態のロジックまたはブール値を参照する場合、True を返します。</summary>
            <remarks>
            <p class="body">ISLOGICAL(value)</p>
            <p class="body">value は <strong>UltraCalcValue</strong> オブジェクトまたは UltraCalc 式の評価の結果です。これはブール値であると見なされます（TRUE または FALSE）。ブール値は George Boole に敬意を表して命名されました。ブール代数の開発はこれら 2 つので論理関数の特殊な特性を管理しています</p>
            <p class="body">値の種類によっては、ブール値に変換できない場合があり、これによって ISLOGICAL 関数は FALSE を返します。ISLOGICAL 関数は、UltraCalc によって評価されたブール値タイプの値を持つ値の互換性に関する情報を提供します。</p>
            <p class="note">ISLOGICAL 関数は演繹法を実行しません。TRUE の戻り値は、任意の値または ISLOGICAL 関数に渡された UltraCalc 式が論理的結論を表している証拠として解釈されるべきではありません。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsLogical.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa">
            <summary>エラー値が #N/A（該当なし）である場合、True を返します。</summary>
            <remarks>
            <p class="body">ISNA(value)</p>
            <p class="body">value は、エラーが発生したがエラー コードが適用できなかった時に返されるエラー値として見なされるエラー値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNa.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText">
            <summary>指定した値が非テキスト値を参照する場合、True を返します。</summary>
            <remarks>
            <p class="body">ISNONTEXT( value)</p>
            <p class="body">value は <strong>UltraCalcValue</strong> オブジェクトまたはテキスト値（.NET<strong>String</strong> オブジェクト）かそれとも非テキスト値かを決定するためにテストしたい UltraCalc 式評価の結果です。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText">ISTEXT 関数</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber">
            <summary>指定した値が数値を参照する場合、True を返します。</summary>
            <remarks>
            <p class="body">ISNUMBER( value)</p>
            <p class="body">value は <strong>UltraCalcValue</strong> または数かどうかを決定するためにテストしたい UltraCalc 式評価の結果です。数値としては整数、浮動小数点数、小数を使用できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNumber.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef">
            <summary>指定された値が UltraCalc 参照の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISREF( reference)</p>
            <p class="body">参照はアプリケーション固有のコントロール、フィールド、または情報の一部への参照を含む <strong>UltraCalcValue</strong> オブジェクトです。式を評価するために必要とされる時にアプリケーションで値を検索するために UltraCalc エンジンを使用するアドレスとして考えることができます。</p>
            <p class="body">ISREF 関数は、指定された <strong>UltraCalcValue</strong> が参照のときに TRUE を返します。値はもう 1 つの参照された位置でコンテンツによって定義されているため、この <strong>UltraCalcValue</strong> オブジェクトがアプリケーションの変更に基づいて値を変更することが可能です（UltraCalc エンジンの外側）。<strong>IUltraCalcReference</strong> インターフェイスと <strong>NotifyValueChange</strong> メソッドを適切に実装することによって、UltraCalc エンジンが参照値における変更を認識すること、またこの値に基づいてすべての参照が更新されることが保証されます。</p>
            <p class="body">反対に、提供する <strong>UltraCalcValue</strong> が定数値、または UltraCalc 式の一時的な結果（UltraCalc エンジンの数値スタックの一番上に配置されている定数値）を表す場合、ISREF 関数は False を返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsRef.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText">
            <summary>指定した値がテキスト（または文字列）値を参照する場合、True を返します。</summary>
            <remarks>
            <p class="body">ISTEXT(value)</p>
            <p class="body">値は <strong>UltraCalcValue</strong> オブジェクト。テキスト(<em>例</em>、文字列)か、それとも非テキスト値（数値、ブール値、エラー値を使用できる）かを決定するためにテストしたい UltraCalc 式の評価の結果</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNonText">ISNONTEXT 関数</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsText.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven">
            <summary>指定された値が偶数の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISEVEN(value)</p>
            <p class="body">value は偶数（整数 2 で割ることができる）と見なされる数です。整数ではない値は、評価の前に <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">FLOOR</see> 関数を使用して最初に整数に変換されます。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd">ISODD 関数</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd">
            <summary>指定された値が奇数の場合、TRUE を返します。</summary>
            <remarks>
            <p class="body">ISODD(value)</p>
            <p class="body">value は奇数（整数 2 で割ることができない）と見なされる数です。整数ではない値は、評価の前に <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFloor">FLOOR</see> 関数を使用して最初に整数に変換されます。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsEven">ISEVEN 関数</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsOdd.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR">
            <summary>正（入金）または負の数（出金）値いずれかによって表される一連の定期的なキャッシュ フローに対する内部利益率を計算します。</summary>
            <remarks>
            <p class="body">IRR(value_reference, estimate)</p>
            <p class="body">Value_reference は、負の数値としてキャッシュ アウトフロー（支払い）を表し、正の数値としてキャッシュ インフロー（入金）を表す数値の列または範囲参照でなければなりません。各キャッシュ フローは定期的に発生する必要があります。支払いが不定に発生する場合、すべてのキャッシュ フローに共通する期間に発生するものとして、キャッシュ フローの期間を表し、キャッシュ フローのない期間ではゼロ値を指定する必要があります。たとえば、毎月の支払いが $110 で $300 を借り入れる（ただし支払いは 3 ヶ月間開始しない）ことによってテレビの購入資金を調達する場合、一連のキャッシュ フローは月単位ですが、支払いのない月には 3 つのゼロ値が表示されます（+300, 0, 0, 0, -110, -110, -110）。</p>
            <p class="body">Estimate は結果として得た内部利益率の予測に近い概算です。この関数は、この estimate で開始してからエラーの逓減する誤差限界を持つ結果で繰り返し集中する反復アルゴリズムを採用します。<em>estimate</em> を提供しない場合、この関数は開始点てあるため 10 パーセントを使用します。</p>
            <p class="body">20 回の繰り返し後に誤差が 1/1000 のベーシス ポイント内に近づかなかった場合、#NUM エラー値が返されます。</p>
            <p class="body">IRR() 関数には、上記の小売の資金調達のように利率なしで一連のキャッシュ フローを提供されて、有効な利率がどうなるのかを計算したい場合に使用できます。内部利益率はキャッシュ フロー間の期間に基づいています。したがって年単位でない支払いを計算する場合には、内部利益率を年率に換算する必要があります。</p><seealso cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNPV">NPV()</seealso></remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIRR.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate">
            <summary>一連のキャッシュ フローの一期あたりの内部利益率を計算します（投資期間全体）。</summary>
            <remarks>
            <p class="body">RATE(nPeriods, amount, presentValue, paymentDue, futureValue, estimate)</p>
            <p class="body">NPeriods は、支払い（負の<em>金額</em>）または受領（正の<em>金額</em>）が各キャッシュ フロー間の期間を固定して定期的に発生するかどうかにかかわらず、キャッシュ フローの総数です。</p>
            <p class="body">Amount は支払われた現金（負）または受け取った現金（正）の金額です。投資期間全体にわたって一定でなければなりません。</p>
            <p class="body">PresentValue は一連の将来の支払いの現在の金額です。将来実施される支払いは、計算中の利率だけ割引されます。その利率で現在少額を投資することができ、将来支払い期日になったときの<em>金額</em>に増えます。</p>
            <p class="body">PaymentDue はキャッシュ フローが各期間の最初に発生するのか（1）、それとも各期間の最後に発生するか（0）のかを示します。指定されない場合、各期間の最後の支払いが想定されます。</p>
            <p class="body">FutureValue は、<em>nPeriods</em> 支払いが行われ、計算された利率で利子を生んだ後で達成された累積差引残高です。指定されないままの場合には、デフォルトの将来値はゼロであると想定されます（これは融資が全額返済されたときのゼロの融資負債に達したことを表します）。</p>
            <p class="body">Estimate は計算を開始するために使用される利率の概算です（正しい値に集中してくるまで <em>estimate</em> を繰り返し絞り込むことによって機能します）。<em>estimate</em> が指定されていない場合、10% のデフォルト値が想定されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull">
            <summary>値がnull（VBではNothing）かどうかを示すブール値を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsNull.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull">
            <summary>null（VBではNothing）を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNull.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull">
            <summary>値がDBNullかどうかを示すブール値を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIsDBNull.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull">
            <summary>DBNullを返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDBNull.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd">
            <summary>指定した時間間隔を DateTime に加算し、その結果を <see cref="T:System.DateTime" /> 値で返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateAdd.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff">
            <summary>２つのDateTime値の間の時間間隔数を示す値を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDateDiff.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar">
            <summary>作業中のコンピュータで使用されている文字セットのコード番号で指定された文字を返します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionChar.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode">
            <summary>特定のテキスト文字列の最初の文字に対応する数値コードを提供します。</summary>
            <remarks>
            <p class="body">CODE(Text)</p>
            <p class="body">Text は長さが最低 1 文字のテキスト文字列です。この関数は <em>Text</em> の最初の文字の数値コードを返します。これらのコード値は、文字列内のテキスト文字をエンコードするためにマシンによって使用される値に対応します（<em>例</em>、Unicode）。</p>
            <p class="body"><em>Text</em> がゼロ長の空の文字列の場合、関数はコード ゼロを返します。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCode.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday">
            <summary>ホストの現在の日付を取得します。</summary>
            <remarks>
            <p class="body">この関数には引数はありません。</p>
            <p class="body">TODAY() に返される日付は、UltraCalc を実行するホストのローカル時間に基づいています。Web 用にビルドされたアプリケーションなど分散化されたアプリケーションでは、これはクライアントでは現在の日付とは異なる場合があります。</p>
            <p class="body">返される日付/時刻の値は常に Midnight (00:00)に調整されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionToday.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate">
            <summary>開始日前/後の指定された月数の日付を返します。</summary>
            <remarks>
            <p class="body">DATE(date, numberOfMonths)<br />Date は、開始日です。<br />NumberOfMonths は、日付を変更する月数です。整数は、開始日以降の日です。負数は、開始日より前の日です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEDate.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth">
            <summary>開始日前/後の指定された月数の月末日を返します。</summary>
            <remarks>
            <p class="body">EOMONTH(date, numberOfMonths)<br />Date は、開始日です。<br />NumberOfMonths は、日付を変更する月数です。整数は、開始日以降の日です。負数は、開始日より前の日です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionEOMonth.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays">
            <summary>特別な休日を除く、指定期間の全稼働日の合計数を返します。</summary>
            <remarks>    
            <p class="body">NETWORKDAYS(startDate, endDate [, holiday1, holiday2, ..., holidayN])<br />StartDate は、開始する日付です。<br />EndDate は、終了する日付。<br />Holiday1、holiday2、...、holidayN は、日付または非稼働日とみなされる日付を含む参照範囲任意の数値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionNetWorkDays.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase">
            <summary>指定された基数スキームで指定された 10 進数を表す文字列を返します。</summary>
            <remarks>
            <p class="body">Dec2X(number, places)<br />Number は、変換される 10 進数の値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.NumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2XBase.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin">
            <summary>指定する 10 進値を 2 進数として表示する文字列を返します</summary>
            <remarks>
            <p class="body">Dec2Bin(number, places)<br />Number は、変換される 10 進数の値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Bin.NumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex">
            <summary>指定する 10 進値を 16 進数として表示する文字列を返します。</summary>
            <remarks>
            <p class="body">Dec2Hex(number, places)<br />Number は、変換される 10 進数の値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Hex.NumberSystem">
            <summary>変換先の記数法（2 = 16 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct">
            <summary>指定された 10 進値を 8 進数として表わす文字列を返します</summary>
            <remarks>
            <p class="body">Dec2Oct(number, places)<br />Number は、変換される 10 進数の値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDec2Oct.NumberSystem">
            <summary>変換先の記数法（2 = 8 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec">
            <summary>2 進記数法で数値を文字列表示する 10 進値を返します。</summary>
            <remarks>
            <p class="body">Bin2Dec(number)<br />number は、2 進数を表わす文字列です。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.NumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Dec.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec">
            <summary>16 進記数法で、数値を文字列表示する 10 進数の値を返します。</summary>
            <remarks>
            <p class="body">Hex2Dec(number)<br />数値は、16進数を表示する文字列です。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.NumberSystem">
            <summary>変換先の記数法（2 = 16 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Dec.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec">
            <summary>8 進記数法で数値を文字列表示する 10 進値を返します。</summary>
            <remarks>
            <p class="body">Oct2Dec(number)<br />数値は、8 進数を表わす文字列です。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.NumberSystem">
            <summary>変換先の記数法（2 = 8 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Dec.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase">
            <summary>10 進記数法以外の記数法で数字を表す文字列を別の 10 進記数法以外の記数法の数字に変換します。</summary>
            <remarks>
            <p class="body">XBase2XBase(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalMinNumber">
            <summary>この関数への数引数がオリジナルの記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalMaxNumber">
            <summary>この関数への数引数がオリジナルの記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MaxLength">
            <summary>数値文字列の最大長。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionXBase2XBase.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct">
            <summary>2 進数を表す文字列を 8 進法で同じ数を表す文字列に変換します。</summary>
            <remarks>
            <p class="body">Bin2Oct(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Oct.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex">
            <summary>2 進数を表す文字列を 16 進法で同じ数を表す文字列に変換します。</summary>
            <remarks>
            <p class="body">Bin2Hex(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionBin2Hex.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin">
            <summary>8 進数を表示する文字列を 2 進数で同じ番号を表示する文字列に変換します。</summary>
            <remarks>
            <p class="body">Oct2Bin(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Bin.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex">
            <summary>16 進法を表示する文字列を 2 進数で同じ番号を表示する文字列に変換します。</summary>
            <remarks>
            <p class="body">Oct2Hex(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionOct2Hex.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin">
            <summary>16 進数を表す文字列と 2 進法で同じ数を表す文字列に変換します。</summary>
            <remarks>
            <p class="body">Hex2Bin(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Bin.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct">
            <summary>16 進数を表す文字列を 8 進法で同じ数を表す文字列に変換します。</summary>
            <remarks>
            <p class="body">Hex2Oct(number, places)<br />Number は、変換される値です。<br />Places は、値の表示に使用する文字数です。Places が指定されていない場合、値の表示に必要な文字の最小文字数が使用されます。Places に 0 の表示を指定できます。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalMinNumber">
            <summary>この関数への数引数が許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalMaxNumber">
            <summary>この関数への数引数が許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewMinNumber">
            <summary>この関数への数引数が新しい記数法で許可する最小値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewMaxNumber">
            <summary>この関数への数引数が新しい記数法で許可する最大値。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.OriginalNumberSystem">
            <summary>変換元の記数法（2 = 2 進数, 8 = 8 進数, 16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.NewNumberSystem">
            <summary>変換先の記数法（2 = 2 進数、8 = 8 進数、16 = 16 進数など）</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionHex2Oct.MaxLength">
            <summary>「数値」文字列の最大長。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex">
            <summary>実係数と虚数を組み合わせて、「x+yi」 または 「x+yj」 の書式の文字列に表す複素数を返します。</summary>
            <remarks>
            <p class="body">COMPLEX(realNumber, imaginaryNumber, [suffix])<br />RealNumber は複素数の実係数です。<br />ImaginaryNumber は虚係数です。<br />suffix は使用する接尾辞を指定します。許容可能な値は &quot;i&quot; または &quot;j&quot; です。省略されると、&quot;i&quot; が使用されます。接尾辞は大文字と小文字を識別します。大文字の &quot;I&quot; と &quot;J&quot; は使用できず #VALUE エラーになります。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionComplex.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary">
            <summary>複素数の虚数を返します。</summary>
            <remarks>
            <p class="body">IMAGINARY(complexNumber)<br />ComplexNumber は、次の書式の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImaginary.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct">
            <summary>1 から n 複素数の積を返します。</summary>
            <remarks>
            <p class="body">IMPRODUCT(complexNumber1 [, complexNumber2, complexNumber3, ..., complexNumberN])<br />ComplexNumber1、ComplexNumber2、...、ComplexNumber は、次の書式の任意の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;は、一緒に乗算されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImProduct.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum">
            <summary>1 から n 複素数の合計を返します。</summary>
            <remarks>
            <p class="body">IMSUM(complexNumber1 [, complexNumber2, complexNumber3, ..., complexNumberN])<br />ComplexNumber1、ComplexNumber2、...、ComplexNumber は、次の書式の任意の複素数です: &quot;x + yi&quot; または &quot;x + yj&quot;は、一緒に乗算されます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionImSum.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr">
            <summary>小数で表されたドルの価格を分数で表されたドルの価格に変換します。</summary>
            <remarks>
            <p class="body">DollarFr(decimalDollarAmount, Fraction)<br />FractionDollarAmount は、分数で表示された組入額です。<br />Fraction は、分数の分母に使用される値です。この値が整数でない場合に切り捨てられます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarFr.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe">
            <summary>小数で表されたドルの価格を分数で表されたドルの価格に変換します。</summary>
            <remarks>
            <p class="body">DollarFr(decimalDollarAmount, Fraction)<br />FractionDollarAmount は、分数で表示された組入額です。<br />Fraction は、分数の分母に使用される値です。この値が整数でない場合に切り捨てられます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionDollarDe.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo">
            <summary>現在のオペレーション システムについての情報を返します。</summary>
            <remarks>
            <p class="body">INFO(type)<br />Type は、返還する情報のタイプを示す文字列です。<br />&quot;directory&quot; = 現在のフォルダーの完全パス&quot;osversion&quot; = 文字列としての現在のオペレーティング システムのバージョン。&quot;system&quot; = オペレーティング システムの名前 - &quot;pcdos&quot; の場合は Windows、または &quot;mac&quot; の場合は Macintosh。<br />次は、Microsoft Excel でサポートされていますが、UltraCalcManager において相関関係はありません: &quot;numfile&quot;、&quot;origin&quot;、&quot;recalc&quot;、&quot;release&quot;。<br />次は、以前のバージョンの Excel でサポートされていますが、UltraCalcManager において相関関係はありません:  &quot;memavail&quot;、&quot;memused&quot;、&quot;totmem&quot;。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionInfo.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin">
            <summary>項目のセットとそのセットから選択された項目の数を提供した可能な組み合わせの数を返します。</summary>
            <remarks>
            <p class="body">Combin(number, numberChosen)<br />Number は項目の数です。<br />NumberChosen は各組み合わせで選択された項目の数です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.Name">
            <summary>数式内で関数を参照するときに使用される関数名。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.MinArgs">
            <summary>関数に必要な引数の最小数。</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCombin.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween">
            <summary>2 つの指定した番号の間で疑似乱整数を生成します。</summary>
            <remarks>
            <p class="body">RANDBETWEEN(bottom, top)<br />Bottom は、返還される最小値です。<br />Top は、変換される最小値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionRandBetween.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError">
            <summary>最初の値がエラーかどうかによって、2 つの値の内の 1 つを返します。</summary>
            <remarks>
            <p class="body">IFERROR(value, value_if_error)。</p>
            <p class="body">value は、エラーではない場合に使用される値です。</p>
            <p class="body">value_if_error は、値の引数がエラーの場合に使用される値です。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionIfError.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA">
            <summary>空でないセル数をカウントします。</summary>
            <remarks>
            <p class="body">COUNTA(Value1, Value2, ..., ValueN)</p>
            <p class="body">Value1、value2 ... valueN は、列などの異なるデータ構造への参照です。空でない各値がカウントされます。</p>
            <p class="body">参照が範囲参照である場合、その範囲内の空でない値のみがカウントされます。</p>
            </remarks>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.Evaluate(Infragistics.Documents.Excel.CalcEngine.ExcelCalcNumberStack,System.Int32)">
            <summary>数値スタックの引数に対して関数を評価します。</summary>
            <param name="numberStack">関数の引数を含む、数式の数値スタック。</param>
            <param name="argumentCount">数値スタックにプッシュされた関数の引数の数を表します。</param>
            <returns>関数の評価結果を示す <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcValue" />。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.CanParameterBeEnumerable(System.Int32)">
            <summary>指定したインデックスのパラメーターが列挙可能な参照を承諾するかどうかを決定します。</summary>
            <param name="parameterIndex">パラメーターの 0 から開始するインデックス</param>
            <returns>指定したインデックスのパラメーターが列挙可能な参照を承諾する場合は True。そうでない場合、またはパラメーターがこの関数の範囲外の場合は False。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.MinArgs">
            <summary>関数に必要な引数の最小数</summary>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionCountA.MaxArgs">
            <summary>関数に必要な引数の最大数。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearchB">
            <summary>大文字と小文字を区別しない検索を実行し、もう 1 つの中である文字列の 1 から始まるインデックスを返します。</summary>
            <remarks>
            <p class="body">SEARCHB(search_text, value, [start_index])</p>
            <p class="body">search_text は値の中で検索するテキストです。</p>
            <p class="body">value は search_text を検索するテキストです。</p>
            <p class="body">start_index は検索を開始する 1 から始まるインデックスです (省略される場合 start_index は 1 です)。</p>
            </remarks>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionSearchB.Name">
            <summary>数式内で関数を参照するときに使用される関数名</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory">
            <summary>組み込みおよびユーザー定義の <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> インスタンスを管理するクラス。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.Add(Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction)">
            <summary>リストに指定した関数を追加します。</summary>
            <param name="function">追加する関数</param>
            <returns>関数が追加されたかどうかを示すブール値。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.AddLibrary(System.Reflection.Assembly)">
            <summary>特定のアセンブリに含まれるユーザー定義関数のライブラリを追加します。</summary>
            <param name="assembly">ユーザー定義関数のライブラリを含む、読み込み済みのアセンブリ。</param>
            <remarks>
            <p class="body">アセンブリが読み込みされた後、 <b>UltraCalcFunction</b>から派生した型が関数ファクトリに登録されます。</p>
            </remarks>
            <returns>関数ライブラリが正常に登録された場合はTrue、それ以外の場合はFalse。</returns>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.GetOperator(Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction)">
            <summary>指定した演算子列挙体で <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" /> を返します。</summary>
            <param name="operatorType">関数が返される演算子。</param>
            <returns>指定された列挙体と関連づけられた <see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcFunction" />。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcFunctionFactory.Item(System.String)">
            <summary>指定した名前を持つ関数を返します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> に割り当てられたエラー コードを示す列挙値。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Reference">
            <summary>数式の評価中に無効または未接続の参照が見つかったときに発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Value">
            <summary>無効な型の引数またはオペランドが数式に使用されたときに発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Div">
            <summary>数値がゼロ (０)で除算されたときに発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.NA">
            <summary>@NAが数式に入力されたとき発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Num">
            <summary>数式または関数に無効な数値が使用されたときに発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Circularity">
            <summary>循環参照は許可されませんときび、循環参照を使用すると発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Null">
            <summary>共通のセルを含まない 2 つの参照の交差が存在する場合に発生します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorCode.Name">
            <summary>数式のテキストが認識されない場合に発生します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を含む例外。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException">
            <summary>一般 Calc の例外。デバッグ中に開発者が Infragistics の例外を容易にオフにできるようにするため、Calc の例外はすべてこの例外から派生します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor">
            <summary>新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException" /> を初期化します。</summary>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor(System.String)">
            <summary>エラーメッセージを指定して、<see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException" />を新規作成します。</summary>
            <param name="message">エラー メッセージ</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcException.#ctor(System.String,System.Exception)">
            <summary>エラーメッセージと例外インスタンスを指定して、新しい <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcException" />を初期化します。</summary>
            <param name="message">エラー メッセージ</param>
            <param name="innerException">この例外を引き起こす例外。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.#ctor(Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue)">
            <summary><see cref="T:Infragistics.Documents.Excel.CalcEngine.ExcelCalcErrorValue" /> を指定して <see cref="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException" /> を新規作成します。</summary>
            <param name="errorValue">例外を生成した UltraCalcErrorValue。</param>
        </member>
        <member name="M:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.ToString">
            <summary>基になるエラー値の文字列表現を返します。</summary>
            <returns>基になるエラー値の文字列表現。</returns>
        </member>
        <member name="P:Infragistics.Documents.Excel.CalcEngine.UltraCalcErrorException.Value">
            <summary>例外に関連付けられた <b>UltraCalcErrorValue</b> を取得します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType">
            <summary><b>UltraCalcFormulaToken</b> クラスで数式トークン タイプを識別します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType.Value">
            <summary>IUltraCalcReference を含む値トークンを示します。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcFormulaTokenType.Function">
            <summary>IUltraCalcFunction を含む関数トークンを示します。</summary>
        </member>
        <member name="T:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction">
            <summary>演算子関数の列挙体。</summary>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Add">
            <summary>２つの値を加算する演算子 (&quot;+&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Subtract">
            <summary>２つの値を減算する演算子 (&quot;-&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Multiply">
            <summary>２つの値を乗算する演算子 (&quot;*&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Divide">
            <summary>２つの値を除算する演算子 (&quot;/&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Equal">
            <summary>２つのオブジェクトが等しいかどうかを比較する演算子 (&quot;=&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.NotEqual">
            <summary>２つの値が等しくないかどうかを比較する演算子 (&quot;&gt;&lt;&quot;または&quot;!=&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.GreaterThanOrEqual">
            <summary>最初の値が２番目の値以上かどうかを判断する演算子 (&quot;&gt;=&quot;)。(&quot;&gt;=&quot;)</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.GreaterThan">
            <summary>最初の値が２番目の値より大きいかどうかを判断する演算子。(&quot;&gt;&quot;)</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.LessThanOrEqual">
            <summary>最初の値が２番目の値以下かどうかを判断する演算子。(&quot;&lt;=&quot;)</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.LessThan">
            <summary>最初の値が２番目の値より小さいかどうかを判断する演算子。(&quot;&lt;&quot;)</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Concatenate">
            <summary>２つの文字列を連結する演算子 (&quot;&amp;amp;&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Exponent">
            <summary>指定した値のべき乗を返す演算子 (&quot;^&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>この演算子には常に２つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.Percent">
            <summary>値をパーセンテージに変換する演算子 (&quot;%&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>　この演算子には 1 つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.UnaryMinus">
            <summary>負の単項演算子 (&quot;-&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>　この演算子には 1 つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
        <member name="F:Infragistics.Documents.Excel.CalcEngine.UltraCalcOperatorFunction.UnaryPlus">
            <summary>正の単項演算子 (&quot;+&quot;)。</summary>
            <remarks>
            <p class="note"><b>注：</b>　この演算子には 1 つのオペランドまたは引数が必要です。</p>
            </remarks>
        </member>
    </members>
</doc>